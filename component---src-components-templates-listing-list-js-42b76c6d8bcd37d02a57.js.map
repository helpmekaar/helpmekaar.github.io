{"version":3,"sources":["webpack:///./src/components/listing-list-filters.js","webpack:///./src/components/templates/listing-list.js","webpack:///./src/components/layouts/standalone.js","webpack:///./src/components/share.js","webpack:///./src/components/listing-summary.js"],"names":["ListingListFilters","_ref","filterObject","filterStates","setFilterStates","_useState","useState","isFiltersOpen","setFiltersOpen","react_default","a","createElement","Card","className","CardHeader","onClick","e","index_es","icon","faFilter","Collapse","isOpen","CardBody","Row","Object","keys","sort","map","tag","idx","Col","sm","md","lg","key","FormGroup","check","Label","Input","onChange","_Object$assign","assign","toggleFilterState","type","value","checked","Badge","color","ListingList","data","windowGlobal","window","_data$thisCategory$fr","thisCategory","frontmatter","name","commonKeywords","site","siteMetadata","listings","edges","edge","node","allCategories","categories","filterTags","flatten","filter","_ref2","tags","indexOf","listing","reduce","_Object$assign2","undefined","filterStateObject","_Object$assign3","useEffect","values","applyFilters","document","querySelectorAll","forEach","dataset","split","showListing","trim","classList","remove","add","standalone","seo","title","description","keywords","concat","listing_list_filters","_ref3","i","listingIcons","tg","find","catNode","path","fields","slug","listing_summary","url","icons","share","callToAction","pageQuery","Standalone","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","Fragment","_header__WEBPACK_IMPORTED_MODULE_2__","showTitle","siteTitle","hideFacebook","_footer__WEBPACK_IMPORTED_MODULE_4__","_fixed_chat__WEBPACK_IMPORTED_MODULE_5__","_public_static_d_1948935994_json__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Share","href","ListingSummary","data-tags","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","ic","_category_icon__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-components-templates-listing-list-js-42b76c6d8bcd37d02a57.js","sourcesContent":["import React, { useState } from 'react'\nimport { Card, CardBody, CardHeader, Col, Collapse, FormGroup, Input, Label, Row, Badge } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\n\nconst ListingListFilters = ({ filterObject, filterStates, setFilterStates }) => {\n\n  const [ isFiltersOpen, setFiltersOpen ] = useState(false);\n\n  const toggleFilterState = tag => {\n    setFilterStates({\n      ...filterStates,\n      [ tag ] : !filterStates[tag]\n    });\n  };\n\n  return (\n        <Card className=\"mb-3\">\n          <CardHeader className=\"pointer\" onClick={ e => setFiltersOpen(!isFiltersOpen)}>\n            <strong className=\"primary-colour\"><FontAwesomeIcon icon={ faFilter } /> Filters</strong>\n          </CardHeader>\n          <Collapse isOpen={ isFiltersOpen }>\n            <CardBody>\n              <Row>\n              {\n                Object.keys(filterObject).sort().map((tag, idx) => (\n                  <Col sm={ 6 } md={ 4 } lg={ 3 } className=\"card-text dark-colour\" key={ idx }>\n                    <FormGroup check>\n                      <Label check>\n                        <Input\n                          onChange={ e => toggleFilterState(tag) }\n                          type=\"checkbox\" value={ tag }\n                          checked={ filterStates[tag] } /> { tag } <Badge color=\"primary\"><small>{ filterObject[tag] }</small></Badge>\n                      </Label>\n                    </FormGroup>\n                  </Col>\n                ))\n              }\n              </Row>\n            </CardBody>\n          </Collapse>\n        </Card>\n  );\n};\n\nexport default ListingListFilters;","import React, { useEffect, useState } from 'react'\nimport Standalone from '../layouts/standalone';\nimport SEO from '../seo';\nimport ListingSummary from '../listing-summary';\nimport { graphql} from 'gatsby';\nimport Share from '../share'\nimport ListingListFilters from '../listing-list-filters'\nimport { flatten } from 'lodash';\n\nconst ListingList = ({ data }) => {\n  const windowGlobal = typeof window !== 'undefined' && window;\n  const { type, name, tag } = data.thisCategory.frontmatter;\n  const { commonKeywords } = data.site.siteMetadata;\n  const listings = data.listings.edges.map(edge => edge.node);\n  const allCategories = data.categories.edges.map(edge => edge.node);\n  const filterTags = flatten(\n    listings.filter(({ frontmatter }) => frontmatter.tags.indexOf(tag) >= 0).map(listing => listing.frontmatter.tags)\n  ).reduce((filterObject, tag) => filterObject[tag] === undefined ? {\n    ...filterObject,\n    [tag] : 1\n  } : {\n    ...filterObject,\n    [tag] : ++filterObject[tag]\n  }, {});\n\n  const [ filterStates, setFilterStates ] = useState(Object.keys(filterTags).sort().reduce((filterStateObject, tag) => ({\n    ...filterStateObject,\n    [ tag ] : false\n  }), filterTags));\n\n  useEffect(() => {\n    if (!filterStates) {\n      return;\n    }\n    const shouldApplyFilters = Object.values(filterStates).reduce((applyFilters, filter) => applyFilters ? applyFilters : filter, false);\n    if (shouldApplyFilters) {\n      windowGlobal.document.querySelectorAll('.listing').forEach(listing => {\n        const showListing = listing.dataset.tags.split(',').reduce((showListing, tag) => showListing ? showListing : filterStates[tag.trim()], false);\n        if (showListing) {\n          listing.classList.remove('d-none');\n        } else {\n          listing.classList.add('d-none');\n        }\n      });\n    } else {\n      windowGlobal.document.querySelectorAll('.listing').forEach(listing => listing.classList.remove('d-none'));\n    }\n  }, [ filterStates ])\n\n  return (\n    <Standalone>\n      <SEO\n        title={ `Expatty ${ type === 'category' ? 'category' : 'areas'} | ${name}` }\n        description={ `Attractions, events, businesses and services in Andalusia, Spain, related to: ${name}` }\n        keywords={[name, ...commonKeywords]}/>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md\">\n            <main>\n              <h1 className=\"title--header\">{ name }</h1>\n              <ListingListFilters\n                filterObject={ filterTags }\n                filterStates={ filterStates }\n                setFilterStates={ setFilterStates }\n              />\n              {\n                listings\n                  .filter(({ frontmatter }) => frontmatter.tags.indexOf(tag) >= 0)\n                  .map((node, i) => {\n                    const listingIcons =\n                      node.frontmatter.tags\n                        .map(tg => allCategories.find(catNode => catNode.frontmatter.tag === tg))\n                        .filter(catNode => catNode)\n                        .map(catNode => ({\n                          icon: catNode.frontmatter.icon,\n                          name: catNode.frontmatter.name,\n                          path: catNode.fields.slug\n                        }));\n                    return (\n                    <ListingSummary\n                      key={ i }\n                      tags={ node.frontmatter.tags }\n                      description={ node.frontmatter.description }\n                      title={ node.frontmatter.title }\n                      url={ node.fields.slug }\n                      icons={ listingIcons }/>\n                  )\n                })\n              }\n              <Share callToAction=\"Share this list on:\" />\n            </main>\n          </div>\n        </div>\n      </div>\n    </Standalone>\n  );\n};\n\nexport default ListingList;\n\nexport const pageQuery = graphql`\n    query CategoryOrArea($type: String!, $name: String!) {\n        site {\n            siteMetadata {\n                commonKeywords\n            }\n        }\n        thisCategory: markdownRemark(frontmatter: { type: { eq: $type }, name: { eq: $name } }) {\n            frontmatter {\n                type\n                name\n                tag\n            }\n        }\n        listings: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"listing\"}}}, sort: {fields: [frontmatter___title]}) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        description\n                        tags\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`","import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\nimport FixedChat from '../fixed-chat'\n\nconst Standalone = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery2 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n  render={data => (\n    <>\n      <Header showTitle={ true } siteTitle={data.site.siteMetadata.title} hideFacebook={ true } />\n      {children}\n      <Footer />\n      <FixedChat />\n    </>\n    )}\n  />\n);\n\nexport default Standalone;","import React from 'react';\n\nconst Share = ({ callToAction }) => (\n  <div className=\"share-bar mt-5\">\n\n    <h4 className=\"title--header small\">{ callToAction || 'Share this on:'}</h4>\n\n    <div className=\"share-buttons\">\n      <a href=\"https://www.facebook.com/sharer/sharer.php?u={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Facebook\">\n        <i className=\"fa fa-facebook-official share-button\"> facebook</i>\n      </a>\n\n      <a\n        href=\"https://twitter.com/intent/tweet?text={{ page.title }}&url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n        onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n        title=\"Share on Twitter\">\n        <i className=\"fa fa-twitter share-button\"> twitter</i>\n      </a>\n\n      <a href=\"https://plus.google.com/share?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Google+\">\n        <i className=\"fa fa-google-plus share-button\"> google</i>\n      </a>\n\n      <a href=\"http://pinterest.com/pin/create/button/?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Pinterest\">\n        <i className=\"fa fa-pinterest-p share-button\"> pinterest</i>\n      </a>\n\n      <a href=\"http://www.tumblr.com/share/link?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Tumblr\">\n        <i className=\"fa fa-tumblr share-button\"> tumblr</i>\n      </a>\n\n      <a href=\"http://www.reddit.com/submit?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Reddit\">\n        <i className=\"fa fa-reddit-alien share-button\"> reddit</i>\n      </a>\n\n      <a\n        href=\"https://www.linkedin.com/shareArticle?mini=true&url={{ site.url }}{{ site.baseurl }}{{ page.url }}&title={{ page.title }}&summary={{ page.description }}&source={{ site.title }}\"\n        onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n        title=\"Share on LinkedIn\">\n        <i className=\"fa fa-linkedin share-button\"> linkedin</i>\n      </a>\n\n      <a\n        href=\"mailto:?subject={{ page.title }}&amp;body=Check out this site {{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n        title=\"Share via Email\">\n        <i className=\"fa fa-envelope share-button\"> email</i>\n      </a>\n    </div>\n\n  </div>\n);\n\nexport default Share;","import React from 'react';\nimport { Link } from 'gatsby'\nimport CategoryIcon from './category-icon'\n\nconst ListingSummary = ({title, description, url, tags, icons}) => (\n  <div className=\"row listing\" data-tags={ tags }>\n    <div className=\"col-md\">\n      <div className=\"card mb-3\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title title--header dark small\"><Link className=\"link\" to={url}>{ title }</Link></h5>\n          <p className=\"card-text\">{ description }</p>\n          <p>\n            {\n              icons && icons.map((ic, idx) => (\n                <CategoryIcon icon={ic.icon} name={ic.name} path={ic.path} key={idx}/>\n              ))\n            }\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default ListingSummary;"],"sourceRoot":""}