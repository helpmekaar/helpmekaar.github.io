{"version":3,"sources":["webpack:///./src/components/layouts/home.js","webpack:///./src/components/hero.js","webpack:///./src/components/picks.js","webpack:///./src/components/blog-list.js","webpack:///./src/pages/index.js","webpack:///./src/components/lazy-loader.js","webpack:///./src/components/pick.js","webpack:///./src/components/blog-summary.js"],"names":["Home","_ref","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","Fragment","header","showTitle","hideFacebook","siteTitle","site","siteMetadata","title","footer","fixed_chat","_2559738656","Hero","Container","fluid","className","Row","Col","md","size","Picks","picks","edges","map","edge","node","idx","listingIcons","frontmatter","tags","tg","categories","find","catNode","tag","filter","icon","name","path","fields","slug","pick","key","url","icons","description","content","html","image","_922999384","BlogList","now","moment","bloglist","isAfter","date","_ref2","blog_summary","excerpt","author","_3971556623","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","props","_props$data$site$site","commonKeywords","home","seo","keywords","lazy_loader","buffer","hero","blog_list","LazyLoader","windowGlobal","window","useEffect","lazyloadThrottleTimeout","lazyLoad","clearTimeout","lazyLoadedImages","document","querySelectorAll","setTimeout","scrollTop","pageYOffset","forEach","img","el","rect","getBoundingClientRect","scrollLeft","pageXOffset","documentElement","top","left","offset","innerHeight","src","dataset","classList","remove","length","removeEventListener","addEventListener","react__WEBPACK_IMPORTED_MODULE_1___default","Pick","react__WEBPACK_IMPORTED_MODULE_2___default","href","data-src","replace","alt","dangerouslySetInnerHTML","__html","ic","_category_icon__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","BlogSummary","dateTime","itemProp","format","itemScope","itemType"],"mappings":"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","file":"component---src-pages-index-js-e990625985d5b74cec74.js","sourcesContent":["import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\nimport FixedChat from '../fixed-chat'\n\nconst Home = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery1 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n     render={data => (\n       <>\n         <Header showTitle={ true } hideFacebook={ true } siteTitle={data.site.siteMetadata.title} />\n         {children}\n         <Footer />\n         <FixedChat />\n       </>\n     )}\n  />\n);\n\nexport default Home;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap'\n\nconst Hero = () => {\n\n  return (\n    <Container fluid={ true } className=\"hero\">\n      <Row className=\"h-100 align-items-center\">\n        <Col md={{ size: 3}} className=\"h-50 mx-auto text-center animated fadeIn\">\n          <h1 className=\"title--header slogan\">Find out what's happening in Andalusia</h1>\n        </Col>\n      </Row>\n    </Container>\n);\n}\n\nexport default Hero;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport Pick from './pick'\n\nconst Picks = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n    {\n      categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n      picks: allMarkdownRemark(filter: {frontmatter: {pick: {eq: true}}}) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n              image\n              tags\n            }\n            html\n          }\n        }\n      }\n    }\n    `}\n      render={data => {\n\n        return (\n          <div className=\"container-fluid\">\n            <div className=\"row mt-5 pb-5 picks\">\n              <div className=\"col-md\">\n                <div className=\"row\">\n                  <div className=\"col-md\">\n                    <h2 className=\"title--header small\">Patty's Picks</h2>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"card-columns\">\n                      {\n                        data.picks.edges.map(edge => edge.node).map((node, idx) => {\n                          const listingIcons = node.frontmatter.tags\n                              .map(tg => data.categories.edges.map(edge => edge.node).find(catNode => catNode.frontmatter.tag === tg))\n                              .filter(catNode => catNode)\n                              .map(catNode => ({\n                                icon: catNode.frontmatter.icon,\n                                name: catNode.frontmatter.name,\n                                path: catNode.fields.slug\n                              }));\n                          return (\n                            <Pick\n                              key={ idx }\n                              title={ node.frontmatter.title }\n                              url={ node.fields.slug }\n                              icons={ listingIcons }\n                              description={ node.frontmatter.description }\n                              content={ node.html }\n                              image={ node.frontmatter.image }/>\n                          );\n                        })\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n};\n\nexport default Picks;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport BlogSummary from './blog-summary'\nimport moment from 'moment';\n\nconst BlogList = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n      {\n        bloglist: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC},\n            filter: {frontmatter: {type: {eq: \"blog\"}}}, limit: 10) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              excerpt\n              frontmatter {\n                title\n                image\n                date\n                author\n              }\n            }\n          }\n        }\n      }\n      `}\n      render={data => {\n        const now = moment();\n        return (\n          <div className=\"container-fluid blog\">\n            <h2 className=\"title--header small\">Patty's Blog</h2>\n            {\n              data.bloglist.edges.filter(({ node }) => now.isAfter(node.frontmatter.date)).map(({ node }, idx) => (\n                <BlogSummary\n                  key={ idx }\n                  excerpt={ node.excerpt }\n                  image={ node.frontmatter.image }\n                  url={ node.fields.slug }\n                  title={ node.frontmatter.title }\n                  author={ node.frontmatter.author }\n                  date={ node.frontmatter.date }/>\n              ))\n            }\n          </div>\n        );\n      }} />\n  );\n};\n\nexport default BlogList;","import React from 'react'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport Home from '../components/layouts/home'\nimport Hero from '../components/hero'\nimport Picks from '../components/picks'\nimport BlogList from '../components/blog-list'\nimport LazyLoader from '../components/lazy-loader'\n\nconst IndexPage = (props) => {\n  const { commonKeywords, description } = props.data.site.siteMetadata;\n  return (<Home>\n    <SEO title=\"Home\" keywords={ commonKeywords } description={ description } />\n    <main>\n      <LazyLoader buffer={ 300 }/>\n      <Hero />\n      <Picks />\n      <BlogList />\n    </main>\n  </Home>)\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n    query SiteData {\n        site {\n            siteMetadata {\n                description\n                commonKeywords\n            }\n        }\n    }\n`","import React, { useEffect } from 'react'\n\nconst LazyLoader = ({ buffer }) => {\n\n  const windowGlobal = typeof window !== 'undefined' && window;\n\n  const offset = el => {\n    const rect = el.getBoundingClientRect();\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    return { top: rect.top + scrollTop, left: rect.left + scrollLeft }\n  }\n\n  useEffect(() => {\n    if (!windowGlobal) {\n      return;\n    }\n    let lazyloadThrottleTimeout;\n    const lazyLoad = () => {\n      if (lazyloadThrottleTimeout) {\n        clearTimeout(lazyloadThrottleTimeout);\n      }\n      const lazyLoadedImages = windowGlobal.document.querySelectorAll('img.lazy');\n      lazyloadThrottleTimeout = setTimeout(() => {\n        const scrollTop = windowGlobal.pageYOffset;\n        lazyLoadedImages.forEach(img => {\n          if (offset(img).top < (windowGlobal.innerHeight + scrollTop + buffer)) {\n            img.src = img.dataset.src;\n            img.classList.remove('lazy');\n          }\n        });\n        if(lazyLoadedImages.length === 0) {\n          windowGlobal.document.removeEventListener('scroll', lazyLoad);\n          windowGlobal.removeEventListener('resize', lazyLoad);\n          windowGlobal.removeEventListener('orientationChange', lazyLoad);\n          windowGlobal.removeEventListener('load', lazyLoad);\n        }\n      }, 20);\n    };\n    windowGlobal.addEventListener('load', lazyLoad);\n    windowGlobal.document.addEventListener('scroll', lazyLoad);\n    windowGlobal.addEventListener('resize', lazyLoad);\n    windowGlobal.addEventListener('orientationChange', lazyLoad);\n  }, []);\n\n  return (\n    <>\n    </>\n  );\n};\n\nexport default LazyLoader;","import React from 'react';\nimport CategoryIcon from './category-icon'\n\nconst Pick = ({ title, description, image, url, icons, content }) => {\n  return (\n    <div className=\"card\">\n      {image && (\n        <a href={ url }>\n          <img data-src={ image.replace('1600', '500').replace('x400', 'x250') } alt={ title } className=\"lazy card-img-top\" />\n        </a>)\n        }\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">\n          <a className=\"link\" href={ url }>\n            { title }\n          </a>\n        </h3>\n        <div className=\"card-text dark-colour\" dangerouslySetInnerHTML={{__html: content}} />\n        <p>\n          {\n            icons && icons.map((ic, idx) => (\n              <CategoryIcon icon={ic.icon} name={ic.name} path={ic.path} key={idx}/>\n            ))\n          }\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Pick;","import React from 'react'\nimport moment from 'moment'\n\nconst BlogSummary = ({ title, excerpt, image, url, author, date }) => (\n  <a className=\"link light\" href={url}>\n    <div className=\"card bg-transparent mb-5\">\n      {image && <img data-src={ image } alt={ title } className=\"lazy card-img-top\"/>}\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{title}</h4>\n        <p><small>\n            <time className=\"light-primary-colour pt-2\" dateTime={moment(date)} itemProp=\"datePublished\">\n              {moment(date).format('dddd, D MMMM YYYY')}\n            </time>\n            <span itemProp=\"author\" itemScope itemType=\"http://schema.org/Person\">  • <span\n              className=\"light-primary-colour\" itemProp=\"name\">{author}</span>\n                      </span>\n          </small>\n        </p>\n        <div className=\"card-text primary-text-colour\" dangerouslySetInnerHTML={{ __html: excerpt }}/>\n      </div>\n    </div>\n  </a>\n);\n\nexport default BlogSummary;"],"sourceRoot":""}