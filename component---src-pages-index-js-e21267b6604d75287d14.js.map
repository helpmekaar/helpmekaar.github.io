{"version":3,"sources":["webpack:///./src/components/layouts/home.js","webpack:///./src/chat/use-chat-state.js","webpack:///./src/components/chat.js","webpack:///./src/components/search-result.js","webpack:///./src/components/search.js","webpack:///./src/components/logo.js","webpack:///./src/components/hero.js","webpack:///./src/components/picks.js","webpack:///./src/components/blog-list.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/category-icon.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/patty-working-at-desk.js","webpack:///./src/components/footer.js","webpack:///./src/components/seo.js","webpack:///./src/components/pick.js","webpack:///./src/components/blog-summary.js"],"names":["Home","_ref","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","Fragment","header","showTitle","siteTitle","site","siteMetadata","title","footer","_2559738656","useChatState","_useState","useState","messageQueue","setMessageQueue","_useState2","dataSource","setDataSource","_useState3","isTyping","setTyping","_useState4","lexRuntime","setLexRuntime","_useState5","sessionAttributes","setSessionAttributes","userId","Date","now","_useState7","typeTimer","setTypeTimer","_useState8","inputText","setInputText","dataSourceRef","useRef","current","typeTimerRef","processSystemMessages","msgList","concat","getSystemMessageFromText","text","avatar","withPrefix","position","type","date","useEffect","AWS","region","credentials","IdentityPoolId","params","botAlias","botName","postText","err","console","error","log","responseArray","message","startsWith","JSON","parse","messages","map","m","value","response","length","nextMessage","rest","slice","thisTimer","setTimeout","clearTimeout","filter","t","forEach","clearInterval","processQueue","processInput","Chat","onSearch","nbResults","_useChatState","isSearchTipOpen","setSearchTipOpen","isChatTipOpen","setChatTipOpen","inputEl","messageList","onUserMessage","node","document","querySelector","remove","newNode","setAttribute","mlistRef","appendChild","searchTerms","className","main","ref","lockable","toBottomHeight","onKeyPress","e","shiftKey","charCode","preventDefault","placeholder","aria-label","aria-describedby","onClick","id","index_es","icon","faSearch","Tooltip","delay","show","hide","placement","isOpen","target","toggle","faComment","SearchResult","description","icons","url","href","ic","iconIndex","category_icon","name","path","key","Search","onResults","index","setIndex","content","setContent","page","setPage","searchContainerRef","client","algoliasearch","initIndex","search","hitsPerPage","scrollTop","nbHits","hits","h","idx","listingIcons","tags","tg","categories","edges","edge","find","catNode","frontmatter","tag","fields","slug","search_result","nbPages","Math","max","aria-hidden","Array","fill","link","disabled","min","undefined","_2696684912","Logo","gatsby_image_default","fixed","placeholderImage","childImageSharp","_3744433833","Hero","slogan","setQuery","setNbResults","logo","chat","Picks","picks","pick","html","image","_922999384","BlogList","moment","bloglist","isAfter","_ref2","blog_summary","excerpt","author","_3199158587","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","props","_props$data$site$site","commonKeywords","home","seo","keywords","hero","blog_list","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","Error","propTypes","PropTypes","object","string","isRequired","func","module","exports","require","default","CategoryIcon","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","dangerouslySetInnerHTML","__html","i","replace","join","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","Header","setOpen","expand","navbar","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","PattyWorkingAtDesk","_1292776582","Footer","rel","patty_working_at_desk","format","areas","action","method","noValidate","required","style","left","tabIndex","_3876790873","SEO","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","property","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Pick","src","alt","_category_icon__WEBPACK_IMPORTED_MODULE_3__","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","BlogSummary","dateTime","itemProp","itemScope","itemType"],"mappings":"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","file":"component---src-pages-index-js-e21267b6604d75287d14.js","sourcesContent":["import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\n\nconst Home = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery1 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n     render={data => (\n       <>\n         <Header showTitle={false} siteTitle={data.site.siteMetadata.title} />\n         {children}\n         <Footer />\n       </>\n     )}\n  />\n);\n\nexport default Home;","import { useEffect, useRef, useState } from 'react';\nimport * as AWS from 'aws-sdk';\nimport { withPrefix } from 'gatsby';\n\nconst useChatState = () => {\n\n  const [messageQueue, setMessageQueue] = useState([]);\n  const [dataSource, setDataSource] = useState([]);\n  const [isTyping, setTyping] = useState(false);\n  const [lexRuntime, setLexRuntime] = useState(null);\n  const [sessionAttributes, setSessionAttributes] = useState({});\n  const [userId] = useState(`pattybot-web${Date.now()}`);\n  const [typeTimer, setTypeTimer] = useState([]);\n  const [inputText, setInputText] = useState(null);\n\n  const dataSourceRef = useRef(dataSource);\n  dataSourceRef.current = dataSource;\n\n  const typeTimerRef = useRef(typeTimer);\n  typeTimerRef.current = typeTimer;\n\n  const processQueue = () => {\n    const [nextMessage, ...rest] = messageQueue;\n    if (nextMessage.position === 'left') {\n      if (isTyping) {\n        return;\n      }\n      setMessageQueue(rest);\n      setTyping(true);\n      const thisTimer = setTimeout(() => {\n        setDataSource([...dataSourceRef.current, nextMessage]);\n        setTyping(false);\n        clearTimeout(thisTimer);\n        setTypeTimer(typeTimerRef.current.filter(t => t !== thisTimer));\n      }, nextMessage.text ? nextMessage.text.length * 40 : 200);\n      setTypeTimer([...typeTimer, thisTimer]);\n    } else {\n      setMessageQueue(rest);\n      setTyping(false);\n      typeTimer.forEach(t => clearInterval(t));\n      setDataSource([...dataSource, nextMessage]);\n      setInputText(nextMessage.text);\n    }\n  };\n\n  const processSystemMessages = (msgList) => {\n    setMessageQueue([...messageQueue, ...msgList]);\n  }\n\n  const getSystemMessageFromText = text => ({\n    avatar: withPrefix('/img/patty_avatar_small.png'),\n    position: 'left',\n    title: 'Patty:',\n    type: 'text',\n    text,\n    date: new Date(),\n  });\n\n  const processInput = text => {\n    if (!text) {\n      return;\n    }\n    setMessageQueue([{\n      avatar: 'https://cdn.iconscout.com/icon/free/png-256/avatar-369-456321.png',\n      position: 'right',\n      title: 'You:',\n      type: 'text',\n      text\n    }]);\n\n  };\n\n  useEffect(() => {\n    processSystemMessages([\n      getSystemMessageFromText(`Hola! I'm Patty.`),\n      getSystemMessageFromText(`If you have questions about Andalusia, you've come to the right place.`),\n      getSystemMessageFromText(`You can ask me a question, or just do a search.`),\n      getSystemMessageFromText(`Just start typing in the box.`)\n    ]);\n\n    AWS.config.region = 'eu-west-1';\n    AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n      IdentityPoolId: 'eu-west-1:4dd4bbc0-1e62-4d33-bea9-386ed1873bbb',\n    });\n    setLexRuntime(new AWS.LexRuntime());\n\n  }, []);\n\n  useEffect(() => {\n    if (!inputText) {\n      return;\n    }\n    const params = {\n      botAlias: 'expatty',\n      botName: 'Expatty_A',\n      inputText,\n      userId,\n      sessionAttributes\n    };\n\n    lexRuntime.postText(params, (err, data) => {\n      if (err) {\n        console.error(err);\n      }\n      if (data) {\n        console.log(data);\n        setSessionAttributes(data.sessionAttributes);\n        const responseArray = data.message.startsWith('{') ? JSON.parse(data.message).messages.map(m => m.value) : [data.message];\n        processSystemMessages(responseArray.map(response => getSystemMessageFromText(response)));\n      }\n    });\n  }, [inputText]);\n\n  if (messageQueue.length) {\n    processQueue();\n  }\n\n  return {\n    dataSource,\n    processInput,\n    isTyping,\n    sessionAttributes\n  };\n\n};\n\nexport default useChatState;","import React, { useEffect, useRef, useState } from 'react'\nimport { MessageList } from 'react-chat-elements'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faComment } from '@fortawesome/free-solid-svg-icons'\nimport 'react-chat-elements/dist/main.css';\nimport useChatState from '../chat/use-chat-state'\nimport { Tooltip } from 'reactstrap'\n\nconst Chat = ({ onSearch, nbResults }) => {\n\n  const { dataSource, processInput, isTyping, sessionAttributes } = useChatState();\n  const [isSearchTipOpen, setSearchTipOpen] = useState(false);\n  const [isChatTipOpen, setChatTipOpen] = useState(false);\n\n  const inputEl = useRef(null);\n  const messageList = useRef(null);\n\n  const onKeyPress = (e) => {\n    if (e.shiftKey && e.charCode === 13) {\n      return true;\n    }\n    if (e.charCode === 13) {\n      onUserMessage();\n      e.preventDefault();\n      return false;\n    }\n  };\n\n  const handleSearch = () => {\n    inputEl.current.value && onSearch(inputEl.current.value);\n  }\n\n  const onUserMessage = () => {\n    processInput(inputEl.current.value);\n    inputEl.current.value = '';\n  }\n\n  useEffect(() => {\n    const node = document.querySelector('#is-typing');\n    if (node) {\n      node.remove();\n    }\n    if (isTyping) {\n      const existingNode = document.querySelector('#is-typing');\n      if (!existingNode) {\n        const newNode = document.createElement('div');\n        newNode.setAttribute('id', 'is-typing')\n        newNode.setAttribute('class', 'loading');\n        messageList.current.mlistRef.appendChild(newNode);\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (!sessionAttributes.searchTerms) {\n      return;\n    }\n    onSearch(sessionAttributes.searchTerms);\n  }, [sessionAttributes.searchTerms])\n\n  return (\n    <>\n      <div className=\"chat\">\n        <MessageList\n          ref={messageList}\n          className=\"message-list h-100\"\n          lockable={ true }\n          toBottomHeight=\"100%\"\n          dataSource={ dataSource }\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <div className=\"input-group mt-5\">\n          <input ref={ inputEl } onKeyPress={onKeyPress} type=\"text\" className=\"form-control\" placeholder=\"Do a search or ask Patty...\" aria-label=\"Do a search or ask Patty\" aria-describedby=\"basic-addon2\"/>\n            <div className=\"input-group-append\">\n              <button title=\"Just search\" onClick={ handleSearch } className=\"btn\" type=\"button\" id=\"searchBtn\"><FontAwesomeIcon icon={ faSearch } /></button>\n              <Tooltip delay={{show: 0, hide: 0}} placement=\"bottom\" isOpen={isSearchTipOpen} target=\"searchBtn\" toggle={() => setSearchTipOpen(!isSearchTipOpen)}>\n                Search only\n              </Tooltip>\n              <button title=\"Ask Patty\" onClick={onUserMessage} className=\"btn\" type=\"button\" id=\"chatBtn\"><FontAwesomeIcon icon={ faComment } /></button>\n              <Tooltip delay={{show: 0, hide: 0}} placement=\"bottom\" isOpen={isChatTipOpen} target=\"chatBtn\" toggle={() => setChatTipOpen(!isChatTipOpen)}>\n                Chat with Patty\n              </Tooltip>\n            </div>\n        </div>\n        {nbResults != null && <small className=\"form-text light-primary-colour\">{`${nbResults} ${nbResults !== 1 ? 'results' : 'result'} found (so far)`}</small>}\n      </div>\n    </>\n  );\n};\n\nexport default Chat;","import React from 'react';\nimport CategoryIcon from './category-icon'\n\nconst SearchResult = ({ title, description, icons, url }) => {\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col-md\">\n        <h1 className=\"title--header small\"><a className=\"link light\" href={ url }>{ title }</a></h1>\n        <p><small>{ description }</small></p>\n        <p>{\n          icons && icons.map((ic, iconIndex) => (\n            <CategoryIcon icon={ ic.icon } name={ ic.name } path={ ic.path } key={ iconIndex }/>\n          ))\n        }</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResult;","import React, { useEffect, useRef, useState } from 'react'\nimport * as algoliasearch from 'algoliasearch'\nimport { graphql, StaticQuery } from 'gatsby'\nimport SearchResult from './search-result'\n\nconst Search = ({ query, onResults }) => {\n\n  const [index, setIndex] = useState(null);\n  const [content, setContent] = useState({});\n  const [page, setPage] = useState(0);\n  const searchContainerRef = useRef(null);\n\n  useEffect(() => {\n    const client = algoliasearch('V2FZ8PQPU1', '53dfa38126e32c85b534b72c3830168d');\n    setIndex(client.initIndex('expatty'));\n  }, []);\n\n  useEffect(() => {\n    if (!index || !query) {\n      return;\n    }\n    index.search({ query, page, hitsPerPage: 10 }, (err, content) => {\n      if (err) {\n        console.error(err);\n      } else {\n        searchContainerRef.current.scrollTop = 0;\n        setContent(content);\n        onResults(content.nbHits);\n      }\n    });\n  }, [query, page]);\n\n  return (\n    <StaticQuery\n  query={graphql`\n      {\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n              edges {\n                  node {\n                      frontmatter {\n                          tag\n                          name\n                          icon\n                      }\n                      fields {\n                          slug\n                      }\n                  }\n              }\n          }\n        }\n    `}\n  render={\n    data => {\n      return (\n        <>\n          <div className=\"search\" ref={ searchContainerRef }>\n            {\n              content.hits && content.hits.map((h, idx) => {\n                const listingIcons = h.tags\n                  .map(tg => data.categories.edges.map(edge => edge.node).find(catNode => catNode.frontmatter.tag === tg))\n                  .filter(catNode => catNode)\n                  .map(catNode => ({\n                    icon: catNode.frontmatter.icon,\n                    name: catNode.frontmatter.name,\n                    path: catNode.fields.slug\n                  }));\n                return (\n                    <SearchResult key={ idx } description={ h.description } icons={ listingIcons } url={ h.url } title={ h.title }/>\n                );\n              })\n            }\n          </div>\n            {\n              (content.nbPages && content.nbPages > 1) ? <div className=\"search-pagination\">\n                <nav className=\"mt-5\" aria-label=\"Page navigation example\">\n                  <ul className=\"pagination justify-content-center\">\n                    {page > 0 && <li className=\"page-item\">\n                      <button className=\"page-link accent-colour\" aria-label=\"Previous\" onClick={() => setPage(Math.max(0, page - 1))}>\n                        <span aria-hidden=\"true\">&laquo;</span>\n                        <span className=\"sr-only\">Previous</span>\n                      </button>\n                    </li>}\n                    {\n                      new Array(content.nbPages)\n                        .fill(null)\n                        .map((link, idx) => (\n                          <li key={idx} className=\"page-item\">\n                            <button disabled={page === idx} className={`page-link${page === idx ? ' bold primary-colour' : ' accent-colour'}`} onClick={() => setPage(idx)}>{ idx + 1 }</button>\n                          </li>)\n                        )\n                    }\n                    { page < content.nbPages - 1 && <li className=\"page-item\">\n                      <button className=\"page-link accent-colour\" aria-label=\"Next\" onClick={() => setPage(Math.min(page + 1, content.nbPages - 1))}>\n                        <span aria-hidden=\"true\">&raquo;</span>\n                        <span className=\"sr-only\">Next</span>\n                      </button>\n                    </li>}\n                  </ul>\n                </nav>\n              </div> : undefined\n            }\n        </>\n    )\n    }}\n  />\n  )\n};\n\nexport default Search;","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst Logo = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"logo.png\" }) {\n          childImageSharp {\n            fixed(width: 350) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fixed={data.placeholderImage.childImageSharp.fixed} />}\n  />\n);\n\nexport default Logo;\n","import React, { useState } from 'react'\nimport Chat from './chat';\nimport Search from './search'\nimport Logo from './logo'\n\nconst Hero = ({ title, slogan }) => {\n\n  const [query, setQuery] = useState(null);\n  const [nbResults, setNbResults] = useState(null);\n\n  return (<div className=\"container-fluid\">\n    <div className=\"row hero\">\n      <div className=\"col-lg-4 text-center\">\n        <div className=\"align-middle\">\n          <div className=\"row\">\n            <div className=\"col-xl-12 text-center\">\n              <div className=\"logo-container\">\n                <Logo />\n              </div>\n              <div className=\"lead\"><em>Your personal expert assistant in <strong className=\"large\">Andalusia</strong></em></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-lg-4\">\n        <Chat onSearch={setQuery} nbResults={nbResults}/>\n      </div>\n      <div className=\"col-lg-4\">\n        <Search query={query} onResults={setNbResults}/>\n      </div>\n    </div>\n  </div>);\n\n}\n\nexport default Hero;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport Pick from './pick'\n\nconst Picks = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n    {\n      categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n      picks: allMarkdownRemark(filter: {frontmatter: {pick: {eq: true}}}) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n              image\n              tags\n            }\n            html\n          }\n        }\n      }\n    }\n    `}\n      render={data => {\n\n        return (\n          <div className=\"container-fluid\">\n            <div className=\"row mt-5 pb-5 picks\">\n              <div className=\"col-md\">\n                <div className=\"row\">\n                  <div className=\"col-md\">\n                    <h2 className=\"title--header small\">Patty's Picks</h2>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"card-columns\">\n                      {\n                        data.picks.edges.map(edge => edge.node).map((node, idx) => {\n                          const listingIcons = node.frontmatter.tags\n                              .map(tg => data.categories.edges.map(edge => edge.node).find(catNode => catNode.frontmatter.tag === tg))\n                              .filter(catNode => catNode)\n                              .map(catNode => ({\n                                icon: catNode.frontmatter.icon,\n                                name: catNode.frontmatter.name,\n                                path: catNode.fields.slug\n                              }));\n                          return (\n                            <Pick\n                              key={ idx }\n                              title={ node.frontmatter.title }\n                              url={ node.fields.slug }\n                              icons={ listingIcons }\n                              description={ node.frontmatter.description }\n                              content={ node.html }\n                              image={ node.frontmatter.image }/>\n                          );\n                        })\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n};\n\nexport default Picks;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport BlogSummary from './blog-summary'\nimport moment from 'moment';\n\nconst BlogList = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n      {\n        bloglist: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC},\n            filter: {frontmatter: {type: {eq: \"blog\"}}}, limit: 10) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              excerpt(pruneLength: 500, format: HTML)\n              frontmatter {\n                title\n                image\n                date\n                author\n              }\n            }\n          }\n        }\n      }\n      `}\n      render={data => {\n        const now = moment();\n        return (\n          <div className=\"container-fluid blog\">\n            <h2 className=\"title--header small\">Patty's Blog</h2>\n            {\n              data.bloglist.edges.filter(({ node }) => now.isAfter(node.frontmatter.date)).map(({ node }, idx) => (\n                <BlogSummary\n                  key={ idx }\n                  excerpt={ node.excerpt }\n                  image={ node.frontmatter.image }\n                  url={ node.fields.slug }\n                  title={ node.frontmatter.title }\n                  author={ node.frontmatter.author }\n                  date={ node.frontmatter.date }/>\n              ))\n            }\n          </div>\n        );\n      }} />\n  );\n};\n\nexport default BlogList;","import React from 'react'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport Home from '../components/layouts/home'\nimport Hero from '../components/hero'\nimport Picks from '../components/picks'\nimport BlogList from '../components/blog-list'\n\nconst IndexPage = (props) => {\n  const { title, slogan, commonKeywords, description } = props.data.site.siteMetadata;\n  return (<Home>\n    <SEO title=\"Home\" keywords={ commonKeywords } description={ description } />\n    <main>\n      <Hero title={ title } slogan={ slogan } />\n      <Picks />\n      <BlogList />\n    </main>\n  </Home>)\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n    query SiteData {\n        site {\n            siteMetadata {\n                title\n                slogan\n                description\n                commonKeywords\n            }\n        }\n    }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst CategoryIcon = ({ path, icon, name }) => {\n  return (\n    <Link className=\"link\" to={path}>\n      <span\n        title={name}\n        className=\"tag-icons pr-2\"\n        dangerouslySetInnerHTML={{ __html: icon.map(i => `&#x${i.replace('U+', '')}`).join('') }}>\n      </span>\n    </Link>\n  )\n}\n\nexport default CategoryIcon","import React, { useState } from 'react';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Collapse\n} from 'reactstrap';\n\nconst Header = ({siteTitle, showTitle}) => {\n\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <header>\n      <Navbar expand=\"md\" className=\"navbar-dark bg-transparent\">\n        { showTitle && <NavbarBrand href=\"/\"><h1 className=\"title--header brand\">{ siteTitle }</h1></NavbarBrand> }\n        <NavbarToggler className=\"link light\" onClick={() => setOpen(!isOpen)} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/about/\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/blog/\">Blog</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/contact/\">Contact us</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst PattyWorkingAtDesk = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"patty-working-at-desk.png\" }) {\n          childImageSharp {\n            fixed(width: 200) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fixed={data.placeholderImage.childImageSharp.fixed} />}\n  />\n);\n\nexport default PattyWorkingAtDesk;\n","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport moment from 'moment'\nimport PattyWorkingAtDesk from './patty-working-at-desk'\nimport CategoryIcon from './category-icon'\n\nconst Footer = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          site {\n              siteMetadata {\n                  title\n                  description\n              }\n          }\n          areas: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"area\"}}}) {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n                excerpt(pruneLength: 500, format: HTML)\n                frontmatter {\n                  name\n                  tag\n                }\n              }\n            }\n          }\n          categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        }\n      `}\n      render={data => {\n        return (\n          <footer className=\"container-fluid mt-5 pb-3 footer\">\n            <div className=\"row pt-5\">\n              <div className=\"col-lg mb-5 pr-5\">\n                <h2 className=\"title--header small mb-4\"><a className=\"link brand\" rel=\"author\"\n                                                       href=\"/\">{data.site.siteMetadata.title}</a></h2>\n                <p>\n                  <small>{data.site.siteMetadata.description}</small>\n                </p>\n                <PattyWorkingAtDesk/>\n                <p><em>\n                  <small>All rights reserved. &copy; expatty.com {moment().format('YYYY')}</small>\n                </em></p>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Areas</h2>\n                <ul>\n                  {\n                    data.areas.edges.map(({ node }, idx) => (\n                      <li key={idx}><span className=\"spacer\"/> <a href={node.fields.slug} className=\"link\">{node.frontmatter.name}</a></li>\n                    ))\n                  }\n                </ul>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Categories</h2>\n                <ul>\n                  {\n                    data.categories.edges.map(({ node }, idx) => (\n                      <li key={idx}>\n                        <CategoryIcon path={node.fields.slug} name={node.frontmatter.name}\n                                      icon={node.frontmatter.icon}/><a href={node.fields.slug}\n                                                                       className=\"link\"> {node.frontmatter.name}\n                      </a></li>\n                    ))\n                  }\n                </ul>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Subscribe to our newsletter</h2>\n                <form\n                  action=\"https://expatty.us7.list-manage.com/subscribe/post?u=a6b6c49a554f762c8c4c8d495&amp;id=1eef58f2b5\"\n                  method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" className=\"validate\"\n                  target=\"_blank\" noValidate>\n                  <div className=\"form-group\">\n                    <input type=\"email\" name=\"EMAIL\" className=\"form-control\" id=\"mce-EMAIL\"\n                           placeholder=\"email address\" required/>\n                  </div>\n                  <div style={{ position : 'absolute', left: '-5000px'}} aria-hidden=\"true\">\n                    <input type=\"text\"\n                           name=\"b_a6b6c49a554f762c8c4c8d495_1eef58f2b5\"\n                           tabIndex=\"-1\"/>\n                  </div>\n                  <div className=\"clear\">\n                    <button type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\"\n                            className=\"btn\">Subscribe\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </footer>\n        )\n      }}/>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react';\nimport CategoryIcon from './category-icon'\n\nconst Pick = ({ title, description, image, url, icons, content }) => {\n  return (\n    <div className=\"card\">\n      {image && <img src={ image.replace('x400', 'x800') } alt={ title } className=\"card-img-top\" />}\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">\n          <a className=\"link\" href={ url }>\n            { title }\n          </a>\n        </h3>\n        <div className=\"card-text dark-colour\" dangerouslySetInnerHTML={{__html: content}} />\n        <p>\n          {\n            icons && icons.map((ic, idx) => (\n              <CategoryIcon icon={ic.icon} name={ic.name} path={ic.path} key={idx}/>\n            ))\n          }\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Pick;","import React from 'react'\nimport moment from 'moment'\n\nconst BlogSummary = ({ title, excerpt, image, url, author, date }) => (\n  <a className=\"link light\" href={url}>\n    <div className=\"card bg-transparent mb-5\">\n      {image && <img src={image} alt={title} className=\"card-img-top\"/>}\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{title}</h4>\n        <p><small>\n            <time className=\"light-primary-colour pt-2\" dateTime={moment(date)} itemProp=\"datePublished\">\n              {moment(date).format('dddd, D MMMM YYYY')}\n            </time>\n            <span itemProp=\"author\" itemScope itemType=\"http://schema.org/Person\">  • <span\n              className=\"light-primary-colour\" itemProp=\"name\">{author}</span>\n                      </span>\n          </small>\n        </p>\n        <div className=\"card-text primary-text-colour\" dangerouslySetInnerHTML={{ __html: excerpt }}/>\n      </div>\n    </div>\n  </a>\n);\n\nexport default BlogSummary;"],"sourceRoot":""}