{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/layouts/standalone.js","webpack:///./src/components/seo.js","webpack:///./src/components/blog-summary.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layouts_standalone__WEBPACK_IMPORTED_MODULE_1__","_components_blog_summary__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","moment__WEBPACK_IMPORTED_MODULE_4__","moment__WEBPACK_IMPORTED_MODULE_4___default","Blog","_ref","data","now","moment","a","createElement","title","description","site","siteMetadata","keywords","commonKeywords","className","bloglist","edges","filter","_ref2","node","isAfter","frontmatter","date","map","_ref3","idx","key","excerpt","image","url","fields","slug","author","Standalone","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","Fragment","_header__WEBPACK_IMPORTED_MODULE_2__","showTitle","siteTitle","_footer__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_1948935994_json__WEBPACK_IMPORTED_MODULE_0__","SEO","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","BlogSummary","href","src","alt","dateTime","itemProp","format","itemScope","itemType","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-pages-blog-js-c120abbc9c2d6d8fdf35.js","sourcesContent":["import React from 'react';\nimport Standalone from '../components/layouts/standalone'\nimport { graphql } from 'gatsby'\nimport BlogSummary from '../components/blog-summary'\nimport SEO from '../components/seo'\nimport moment from 'moment'\n\nconst Blog = ({ data }) => {\n  const now = moment();\n  return (\n  <Standalone>\n    <SEO title={'Expatty | Blog'} description={ data.site.siteMetadata.description } keywords={ data.site.siteMetadata.commonKeywords } />\n    <main>\n      <div className=\"container-fluid blog\">\n        <h1 className=\"title--header\">Patty's Blog</h1>\n        <div className=\"row\">\n          <div className=\"col-md\">\n            {\n              data.bloglist.edges.filter(({ node }) => now.isAfter(node.frontmatter.date)).map(({ node }, idx) => (\n                <BlogSummary\n                  key={ idx }\n                  excerpt={ node.excerpt }\n                  image={ node.frontmatter.image }\n                  url={ node.fields.slug }\n                  title={ node.frontmatter.title }\n                  author={ node.frontmatter.author }\n                  date={ node.frontmatter.date }/>\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    </main>\n  </Standalone>\n)};\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n    query SiteDataForBlog {\n        site {\n            siteMetadata {\n                title\n                slogan\n                description\n                commonKeywords\n            }\n        }\n        bloglist: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC},\n            filter: {frontmatter: {type: {eq: \"blog\"}}}) {\n            edges {\n                node {\n                    fields {\n                        slug\n                    }\n                    excerpt(pruneLength: 500, format: HTML)\n                    frontmatter {\n                        title\n                        image\n                        date\n                        author\n                    }\n                }\n            }\n        }\n    }\n`","import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\n\nconst Standalone = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery2 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n  render={data => (\n    <>\n      <Header showTitle={true} siteTitle={data.site.siteMetadata.title} />\n      {children}\n      <Footer />\n    </>\n    )}\n  />\n);\n\nexport default Standalone;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport moment from 'moment'\n\nconst BlogSummary = ({ title, excerpt, image, url, author, date }) => (\n  <a className=\"link light\" href={url}>\n    <div className=\"card bg-transparent mb-5\">\n      {image && <img src={image} alt={title} className=\"card-img-top\"/>}\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{title}</h4>\n        <p><small>\n            <time className=\"light-primary-colour pt-2\" dateTime={moment(date)} itemProp=\"datePublished\">\n              {moment(date).format('dddd, D MMMM YYYY')}\n            </time>\n            <span itemProp=\"author\" itemScope itemType=\"http://schema.org/Person\">  • <span\n              className=\"light-primary-colour\" itemProp=\"name\">{author}</span>\n                      </span>\n          </small>\n        </p>\n        <div className=\"card-text primary-text-colour\" dangerouslySetInnerHTML={{ __html: excerpt }}/>\n      </div>\n    </div>\n  </a>\n);\n\nexport default BlogSummary;"],"sourceRoot":""}