{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/seo.js","webpack:///./src/components/chat-field.js","webpack:///./src/components/patty-bot-channels.js","webpack:///./src/chat/use-chat-state.js","webpack:///./src/components/chat.js","webpack:///./src/components/search-result.js","webpack:///./src/components/search.js","webpack:///./src/components/top-things.js","webpack:///./src/components/how-to-list.js","webpack:///./src/components/patty-bot.js","webpack:///./src/components/fixed-chat.js","webpack:///./src/components/patty-working-at-desk.js","webpack:///./src/components/footer.js","webpack:///./src/components/category-icon.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/areas.js","webpack:///./src/components/categories.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","Header","_ref","siteTitle","showTitle","hideFacebook","_useState","useState","isOpen","setOpen","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_13__","categories","edges","map","edge","node","areas","topLists","howtos","reactstrap__WEBPACK_IMPORTED_MODULE_3__","expand","className","reactstrap__WEBPACK_IMPORTED_MODULE_4__","href","reactstrap__WEBPACK_IMPORTED_MODULE_5__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_6__","navbar","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","nav","inNavbar","reactstrap__WEBPACK_IMPORTED_MODULE_11__","caret","reactstrap__WEBPACK_IMPORTED_MODULE_12__","right","area","i","reactstrap_es_DropdownItem__WEBPACK_IMPORTED_MODULE_14__","key","fields","slug","frontmatter","name","cat","top","how","title","target","rel","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_15__","icon","faFacebook","react_facebook__WEBPACK_IMPORTED_MODULE_17__","appId","colorScheme","showFaces","share","_public_static_d_205051259_json__WEBPACK_IMPORTED_MODULE_1__","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","ChatField","onInput","inputValue","setInputValue","onUserMessage","msg","react_default","InputGroup","Input","onKeyPress","e","shiftKey","charCode","value","preventDefault","onChange","autoFocus","placeholder","InputGroupAddon","addonType","Button","index_es","faComment","PattyBotChannels","activeTab","setActiveTab","newChat","newSearch","Nav","tabs","NavItem","Badge","NavLink","classnames","active","faSearch","faThList","useChatState","windowGlobal","window","messageQueue","setMessageQueue","sessionStorage","getItem","JSON","parse","dataSource","setDataSource","_useState2","isTyping","setTyping","_ref2","sessionAttributes","setSessionAttributes","userId","Date","now","_useState4","typeTimer","setTypeTimer","_useState5","inputText","setInputText","_useState6","newChatCount","setNewChatCount","dataSourceRef","useRef","current","typeTimerRef","processSystemMessages","msgList","count","getSystemMessageFromText","text","avatar","withPrefix","position","type","date","useEffect","Cookies","get","set","axios","post","then","_ref3","setItem","stringify","responseArray","message","startsWith","messages","m","response","console","error","nextMessage","rest","slice","thisTimer","setTimeout","clearTimeout","filter","t","forEach","clearInterval","processQueue","processInput","Chat","userInput","onSearchResults","updateCount","setScrollToBottom","_useChatState","messageList","document","querySelector","remove","newNode","setAttribute","mlistRef","appendChild","searchResults","results","main","ref","lockable","toBottomHeight","SearchResult","icons","url","ic","iconIndex","category_icon","path","Search","searchContainerRef","scrollTop","gatsby_browser_entry","Fragment","h","idx","listingIcons","tags","tg","find","catNode","tag","search_result","_2696684912","TopThings","topThings","_3995842160","HowToList","_1827578978","PattyBot","close","setSearchResults","_useState3","setUserInput","setNewChat","setNewSearch","scrollToBottom","_useState7","scrollToTop","setScrollToTop","modalBody","scrollHeight","Modal","fade","ModalHeader","toggle","patty_bot_channels","tab","ModalBody","TabContent","TabPane","tabId","Row","Col","md","size","offset","chat","newCount","search","top_things","how_to_list","ModalFooter","chat_field","FixedChat","patty_bot","Container","fluid","PattyWorkingAtDesk","gatsby_image_default","fixed","placeholderImage","childImageSharp","_1292776582","Footer","patty_working_at_desk","moment","format","action","method","id","noValidate","required","style","left","aria-hidden","tabIndex","_1955721241","CategoryIcon","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","dangerouslySetInnerHTML","__html","replace","module","exports","require","default","Areas","_public_static_d_4035855273_json__WEBPACK_IMPORTED_MODULE_1__","Categories","_category_icon__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_583608680_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"1-76a10debe6a32d6263c3.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React, { useState } from 'react';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Collapse, UncontrolledDropdown, DropdownToggle, DropdownMenu,\n} from 'reactstrap'\nimport { graphql, StaticQuery } from 'gatsby'\nimport DropdownItem from 'reactstrap/es/DropdownItem'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFacebook } from '@fortawesome/free-brands-svg-icons'\nimport { FacebookProvider, Like } from 'react-facebook'\n\nconst Header = ({siteTitle, showTitle, hideFacebook}) => {\n\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <StaticQuery  query={graphql`\n    {\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}, exclude: {ne: true}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        topLists: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}, exclude: {eq: true}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        howtos: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"howto\"}}}, , sort: {fields: [frontmatter___title]}) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        areas: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"area\"}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n                frontmatter {\n                  name\n                  tag\n                }\n              }\n            }\n          }\n        }\n\n    `}\n      render={data => {\n        const categories = data.categories.edges.map(edge => edge.node);\n        const areas = data.areas.edges.map(edge => edge.node);\n        const topLists = data.topLists.edges.map(edge => edge.node);\n        const howtos = data.howtos.edges.map(edge => edge.node);\n\n        return (\n        <header>\n          <Navbar expand=\"md\" className=\"navbar-dark bg-transparent\">\n            {showTitle && (\n              <NavbarBrand href=\"/\">\n                <h1 className=\"title--header brand\">{siteTitle}</h1>\n              </NavbarBrand>)}\n            <NavbarToggler className=\"link light\" onClick={() => setOpen(!isOpen)}/>\n            <Collapse isOpen={isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink className=\"link light\" href=\"/\">Home</NavLink>\n                </NavItem>\n\n                <NavItem>\n                  <NavLink className=\"link light\" href=\"/our-story/\">Our Story</NavLink>\n                </NavItem>\n\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret className=\"link light\">\n                    Areas\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {\n                      areas.map((area, i) => (\n                        <DropdownItem key={i} href={ area.fields.slug }>{ area.frontmatter.name }</DropdownItem>\n                      ))\n                    }\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret className=\"link light\">\n                    Categories\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {\n                      categories.map((cat, i) => (\n                        <DropdownItem key={i} href={ cat.fields.slug }>{ cat.frontmatter.name }</DropdownItem>\n                      ))\n                    }\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret className=\"link light\">\n                    Top Things To Do\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {\n                      topLists.map((top, i) => (\n                        <DropdownItem key={i} href={ top.fields.slug }>{ top.frontmatter.name }</DropdownItem>\n                      ))\n                    }\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret className=\"link light\">\n                    How To's\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {\n                      howtos.map((how, i) => (\n                        <DropdownItem key={i} href={ how.fields.slug }>{ how.frontmatter.title }</DropdownItem>\n                      ))\n                    }\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n\n                <NavItem>\n                  <NavLink className=\"link light\" href=\"/blog/\">Blog</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"link light\" href=\"/contact/\">Free business listing</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"link light\" href=\"https://facebook.com/expattydotcom/\"\n                           target=\"_blank\" title=\"Our Facebook page\" rel=\"nofollow noopener noreferrer\"><FontAwesomeIcon icon={ faFacebook } /></NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n          {\n            showTitle && !hideFacebook && (\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-md facebook-wrapper\">\n                  <FacebookProvider appId=\"282943012399294\">\n                    <Like href=\"http://www.facebook.com/expattydotcom\" colorScheme=\"light\" showFaces share />\n                  </FacebookProvider>\n                </div>\n              </div>\n            </div>\n            )\n          }\n        </header>\n      );\n    }\n    }/>\n\n  );\n};\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport { Button, Input, InputGroup, InputGroupAddon } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\n\nconst ChatField = ({ onInput }) => {\n\n  const [ inputValue, setInputValue ] = useState('');\n\n  const onKeyPress = (e) => {\n    if (e.shiftKey && e.charCode === 13) {\n      return true;\n    }\n    if (e.charCode === 13) {\n      onUserMessage(e.target.value);\n      e.preventDefault();\n      return false;\n    }\n  };\n\n  const onUserMessage = msg => {\n    if (!msg) {\n      return;\n    }\n    onInput(msg);\n    setInputValue('');\n  }\n\n  return (\n    <InputGroup>\n      <Input\n        onKeyPress={ onKeyPress }\n        value={ inputValue }\n        onChange={ e => setInputValue(e.target.value) }\n        autoFocus\n        placeholder=\"Do a search or ask Patty...\"\n      />\n      <InputGroupAddon addonType=\"append\">\n        <Button\n          title=\"Ask Patty\"\n          onClick={ e => {e.preventDefault(); onUserMessage(inputValue) }}>\n          <FontAwesomeIcon icon={ faComment } />\n        </Button>\n      </InputGroupAddon>\n    </InputGroup>\n  );\n};\n\nexport default ChatField;","import React from 'react'\nimport { Badge, Nav, NavItem, NavLink } from 'reactstrap'\nimport classnames from 'classnames'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { faThList } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst PattyBotChannels = ({ activeTab, setActiveTab, newChat, newSearch }) => {\n\n  return (\n    <Nav tabs>\n      <NavItem>\n        <div className=\"tab-container\">\n          { newChat != null && newChat !== 0 && <Badge className=\"notification-badge\"><small>{newChat}</small></Badge> }\n          <NavLink\n            className={classnames({ active: activeTab === '1' })}\n            onClick={() => { setActiveTab('1'); }}\n          >\n            <strong><FontAwesomeIcon icon={ faComment } /> Chat</strong>\n          </NavLink>\n\n        </div>\n      </NavItem>\n      <NavItem>\n        <div className=\"tab-container\">\n          { newSearch != null && newSearch !== 0 && <Badge className=\"notification-badge\"><small>{ newSearch }</small></Badge> }\n          <NavLink\n            className={classnames({ active: activeTab === '2' })}\n            onClick={() => { setActiveTab('2'); }}\n          >\n            <strong><FontAwesomeIcon icon={ faSearch } /> Search</strong>\n          </NavLink>\n        </div>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          className={classnames({ active: activeTab === '3' })}\n          onClick={() => { setActiveTab('3'); }}\n        >\n          <strong><FontAwesomeIcon icon={ faThList } /> Content</strong>\n        </NavLink>\n      </NavItem>\n    </Nav>\n  );\n};\n\nexport default PattyBotChannels;","import { useEffect, useRef, useState } from 'react';\nimport { withPrefix } from 'gatsby';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst useChatState = () => {\n\n  const windowGlobal = typeof window !== 'undefined' && window;\n  const sessionStorageChatKey = 'expatty-chat';\n  const sessionStorageSearchKey = 'expatty-search';\n  const [messageQueue, setMessageQueue] = useState([]);\n  const [dataSource, setDataSource] = windowGlobal && useState(windowGlobal.sessionStorage.getItem(sessionStorageChatKey)\n    ? JSON.parse(windowGlobal.sessionStorage.getItem(sessionStorageChatKey))\n    : []);\n  const [isTyping, setTyping] = useState(false);\n  const [sessionAttributes, setSessionAttributes] = windowGlobal && useState(windowGlobal.sessionStorage.getItem(sessionStorageSearchKey)\n    ? JSON.parse(windowGlobal.sessionStorage.getItem(sessionStorageSearchKey))\n    : {});\n  const [userId] = useState(`pattybot-web${Date.now()}`);\n  const [typeTimer, setTypeTimer] = useState([]);\n  const [inputText, setInputText] = useState(null);\n  const [newChatCount, setNewChatCount] = useState(null);\n\n  const dataSourceRef = useRef(dataSource);\n  dataSourceRef.current = dataSource;\n\n  const typeTimerRef = useRef(typeTimer);\n  typeTimerRef.current = typeTimer;\n\n  const processQueue = () => {\n    const [nextMessage, ...rest] = messageQueue;\n    if (nextMessage.position === 'left') {\n      if (isTyping) {\n        return;\n      }\n      setMessageQueue(rest);\n      setTyping(true);\n      const thisTimer = setTimeout(() => {\n        setDataSource([...dataSourceRef.current, nextMessage]);\n        windowGlobal && windowGlobal.sessionStorage.setItem(sessionStorageChatKey, JSON.stringify(dataSourceRef.current));\n        setTyping(false);\n        clearTimeout(thisTimer);\n        setTypeTimer(typeTimerRef.current.filter(t => t !== thisTimer));\n      }, nextMessage.text ? nextMessage.text.length * 5 : 200);\n      setTypeTimer([...typeTimer, thisTimer]);\n    } else {\n      setMessageQueue(rest);\n      setTyping(false);\n      typeTimer.forEach(t => clearInterval(t));\n      setDataSource([...dataSource, nextMessage]);\n      windowGlobal && windowGlobal.sessionStorage.setItem(sessionStorageChatKey, JSON.stringify(dataSourceRef.current));\n      setInputText(nextMessage.text);\n    }\n  };\n\n  const processSystemMessages = (msgList) => {\n    setMessageQueue([...messageQueue, ...msgList]);\n    setNewChatCount({\n      count: msgList.length\n    });\n  }\n\n  const getSystemMessageFromText = text => ({\n    avatar: withPrefix('/img/patty_avatar_small.png'),\n    position: 'left',\n    title: 'Patty:',\n    type: 'text',\n    text,\n    date: new Date(),\n  });\n\n  const processInput = text => {\n    if (!text) {\n      return;\n    }\n    setMessageQueue([{\n      avatar: 'img/you-avatar.png',\n      position: 'right',\n      title: 'You:',\n      type: 'text',\n      text\n    }]);\n\n  };\n\n  useEffect(() => {\n    if (!windowGlobal) {\n      return;\n    }\n    if (!windowGlobal.sessionStorage.getItem(sessionStorageChatKey)) {\n      if (Cookies.get('expatty-visited')) {\n        processSystemMessages([\n          getSystemMessageFromText(`Oh, you're back! Anything I can help you with?`)\n        ]);\n      } else {\n        processSystemMessages([\n          getSystemMessageFromText(`Hola! I'm Patty.`),\n          getSystemMessageFromText(`If you have questions about Andalusia, you've come to the right place.`),\n          getSystemMessageFromText(`You can ask me a question, or just do a search.`),\n          getSystemMessageFromText(`Just start typing in the box.`)\n        ]);\n      }\n      Cookies.set('expatty-visited', true);\n    }\n\n  }, []);\n\n  useEffect(() => {\n    if (!inputText) {\n      return;\n    }\n    axios.post('https://o1f9xnry71.execute-api.eu-west-1.amazonaws.com/prod/expattyChat', {\n      inputText,\n      userId,\n      sessionAttributes: {}\n    }).then(({ data }) => {\n      setSessionAttributes(data.sessionAttributes);\n      windowGlobal && windowGlobal.sessionStorage.setItem(sessionStorageSearchKey, JSON.stringify(data.sessionAttributes));\n      const responseArray = data.message.startsWith('{') ? JSON.parse(data.message).messages.map(m => m.value) : [data.message];\n      processSystemMessages(responseArray.map(response => getSystemMessageFromText(response)));\n    }, console.error);\n  }, [inputText]);\n\n  if (messageQueue.length) {\n    processQueue();\n  }\n\n  return {\n    dataSource,\n    processInput,\n    isTyping,\n    newChatCount,\n    sessionAttributes: sessionAttributes || {}\n  };\n\n};\n\nexport default useChatState;","import React, { useEffect, useRef } from 'react'\nimport { MessageList } from 'react-chat-elements'\nimport 'react-chat-elements/dist/main.css';\nimport useChatState from '../chat/use-chat-state'\n\nconst Chat = ({ userInput, onSearchResults, updateCount, setScrollToBottom }) => {\n\n  const { dataSource, processInput, isTyping, sessionAttributes, newChatCount } = useChatState();\n\n  const messageList = useRef(null);\n\n  useEffect(() => {\n    const node = document.querySelector('#is-typing');\n    if (node) {\n      node.remove();\n    }\n    if (isTyping) {\n      setScrollToBottom(true);\n      const existingNode = document.querySelector('#is-typing');\n      if (!existingNode) {\n        const newNode = document.createElement('div');\n        newNode.setAttribute('id', 'is-typing')\n        newNode.setAttribute('class', 'loading');\n        messageList.current.mlistRef.appendChild(newNode);\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (!sessionAttributes.searchResults) {\n      return;\n    }\n    onSearchResults(sessionAttributes.searchResults.results);\n    setScrollToBottom(true);\n  }, [sessionAttributes.searchResults])\n\n  useEffect(() => {\n    if (!userInput) {\n      return;\n    }\n    processInput(userInput);\n  }, [ userInput ]);\n\n  useEffect(() => {\n    if (!newChatCount) {\n      return;\n    }\n    updateCount(newChatCount.count);\n  }, [ newChatCount ]);\n\n  return (\n    <div className=\"chat\">\n      <MessageList\n        ref={messageList}\n        className=\"message-list h-100\"\n        lockable={ true }\n        toBottomHeight=\"100%\"\n        dataSource={ dataSource }\n      />\n    </div>\n  );\n};\n\nexport default Chat;","import React from 'react';\nimport CategoryIcon from './category-icon'\n\nconst SearchResult = ({ title, description, icons, url }) => {\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col-md\">\n        <h1 className=\"title--header small\"><a className=\"link\" href={ url } target=\"_blank\" rel=\"noopener noreferrer\">{ title }</a></h1>\n        <p><small>{ description }</small></p>\n        <p>{\n          icons && icons.map((ic, iconIndex) => (\n            <CategoryIcon icon={ ic.icon } name={ ic.name } path={ ic.path } key={ iconIndex }/>\n          ))\n        }</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResult;","import React, { useEffect, useRef } from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport SearchResult from './search-result'\n\nconst Search = ({ results }) => {\n\n  const searchContainerRef = useRef(null);\n\n  useEffect(() => {\n    searchContainerRef.current.scrollTop = 0;\n  }, [results]);\n\n  return (\n    <StaticQuery\n  query={graphql`\n      {\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n              edges {\n                  node {\n                      frontmatter {\n                          tag\n                          name\n                          icon\n                      }\n                      fields {\n                          slug\n                      }\n                  }\n              }\n          }\n        }\n    `}\n  render={\n    data => {\n      return (\n        <>\n          <div className=\"search\" ref={ searchContainerRef }>\n            {\n              results ? results.map((h, idx) => {\n                const listingIcons = h.tags ? h.tags\n                  .map(tg => data.categories.edges.map(edge => edge.node).find(catNode => catNode.frontmatter.tag === tg))\n                  .filter(catNode => catNode)\n                  .map(catNode => ({\n                    icon: catNode.frontmatter.icon,\n                    name: catNode.frontmatter.name,\n                    path: catNode.fields.slug\n                  })) : [];\n                return (\n                    <SearchResult key={ idx } description={ h.description } icons={ listingIcons } url={ h.url } title={ h.title }/>\n                );\n              }) : (\n                <div className=\"row text-center align-items-center h-100\">\n                  <div className=\"col-md\">\n                    <h2 className=\"title--header small mb-5\">Some things you can search or ask me:</h2>\n                    <p><em>\"How do I do my Spanish residency?\"</em></p>\n                    <p><em>\"things to do near Fuengirola\"</em></p>\n                    <p><em>\"Can I receive healthcare in Spain?\"</em></p>\n                    <p><em>\"windsurfing\"</em></p>\n                    <p><em>\"softplay in Malaga\"</em></p>\n                  </div>\n                </div>\n              )\n            }\n          </div>\n        </>\n    )\n    }}\n  />\n  )\n};\n\nexport default Search;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport classnames from 'classnames'\n\nconst TopThings = ({ className }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n      {\n        topLists: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}, exclude: {eq: true}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n      }\n      `}\n      render={data => {\n        const topThings = data.topLists.edges.map(edge => edge.node);\n        return (\n          <div className={classnames('content-list', className)}>\n            <h2 className=\"title--header small primary-colour mb-3\">Top things to do</h2>\n            <ul>\n              {\n                topThings.map((top, idx) => (\n                  <li key={idx}><span className=\"spacer\"/> <a href={top.fields.slug} className=\"link\"> {top.frontmatter.name}</a></li>\n                ))\n              }\n            </ul>\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nexport default TopThings;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport classnames from 'classnames'\n\nconst HowToList = ({ className }) => {\n  return (\n    <StaticQuery query={graphql`\n    {\n        howtos: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"howto\"}}}, , sort: {fields: [frontmatter___title]}) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        description\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n    `}\n     render={data => {\n       const howtos = data.howtos.edges.map(edge => edge.node);\n       return (\n         <div className={classnames('content-list', className)}>\n           <h2 className=\"title--header small primary-colour mb-3\">How to's</h2>\n           <ul>\n             {\n               howtos.map((how, idx) => (\n                 <li key={idx}><span className=\"spacer\"/> <a href={how.fields.slug} className=\"link\"> {how.frontmatter.title}</a></li>\n               ))\n             }\n           </ul>\n         </div>\n       );\n     }}\n    />\n  );\n};\n\nexport default HowToList;","import React, { useEffect, useState } from 'react'\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Row, TabContent, TabPane, Col } from 'reactstrap'\nimport ChatField from './chat-field'\nimport PattyBotChannels from './patty-bot-channels'\nimport Chat from './chat'\nimport Search from './search'\nimport Areas from './areas'\nimport Categories from './categories'\nimport TopThings from './top-things'\nimport HowToList from './how-to-list'\n\nconst PattyBot = ({ close }) => {\n\n  const [ activeTab, setActiveTab ] = useState('1');\n  const [ searchResults, setSearchResults ] = useState([]);\n  const [ userInput, setUserInput ] = useState(null);\n  const [ newChat, setNewChat ] = useState(null);\n  const [ newSearch, setNewSearch ] = useState(null);\n  const [ scrollToBottom, setScrollToBottom ] = useState(false);\n  const [ scrollToTop, setScrollToTop ] = useState(false);\n\n  const windowGlobal = typeof window !== 'undefined' && window;\n\n  const resetNotificationCountAndActiveTab = tab => {\n    if (tab === \"1\") {\n      setNewChat(0);\n      setScrollToBottom(true);\n    } else if(tab === '2') {\n      setNewSearch(0);\n      setScrollToTop(true);\n    } else if(tab === '3') {\n      setScrollToTop(true);\n    }\n    setActiveTab(tab);\n  };\n\n  const updateChatCount = newCount => {\n    if (activeTab === '1') {\n      return;\n    }\n    setNewChat(newChat + newCount);\n  };\n\n  useEffect(() => {\n    if (!scrollToTop) {\n      return;\n    }\n    if (activeTab === '2') {\n      if (windowGlobal) {\n        windowGlobal.document.querySelector('.modal-body').scrollTop = 0;\n      }\n      setScrollToTop(false);\n    }\n  });\n\n  useEffect(() => {\n    if (!searchResults) {\n      return;\n    }\n    if (activeTab === '2') {\n      return;\n    }\n    setNewSearch(newSearch + searchResults.length);\n  }, [ searchResults ]);\n\n  useEffect(() => {\n    if (!scrollToBottom) {\n      return;\n    }\n    if (activeTab === '1') {\n      if (windowGlobal) {\n        const modalBody = windowGlobal.document.querySelector('.modal-body');\n        modalBody.scrollTop = modalBody.scrollHeight + 150;\n      }\n      setScrollToBottom(false);\n    }\n  });\n\n  return (\n    <Modal isOpen={ true } className=\"patty-bot\" fade={ false } autoFocus={ false }>\n      <ModalHeader className=\"pb-0\" toggle={ () => close() }>\n        <PattyBotChannels\n          activeTab={ activeTab }\n          setActiveTab={ resetNotificationCountAndActiveTab }\n          newChat={ newChat }\n          newSearch={ newSearch } />\n      </ModalHeader>\n      <ModalBody>\n        <TabContent activeTab={ activeTab }>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col md={{ size: 6, offset: 3}}>\n                <Chat\n                  onSearchResults={ setSearchResults }\n                  userInput={ userInput }\n                  updateCount={ updateChatCount }\n                  setScrollToBottom={ setScrollToBottom }\n                />\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col md={{ size: 6, offset: 3}}>\n                <Search results={ searchResults }/>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"3\">\n            <Row>\n              <Col md=\"3\">\n                <TopThings className=\"pb-5\"/>\n              </Col>\n              <Col md=\"3\">\n                <HowToList className=\"pb-5\"/>\n              </Col>\n              <Col md=\"3\">\n                <Areas className=\"pb-5\"/>\n              </Col>\n              <Col md=\"3\">\n                <Categories className=\"pb-5\"/>\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </ModalBody>\n      <ModalFooter className=\"search-shadow\">\n        <ChatField onInput={ setUserInput } />\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default PattyBot;","import React, { useState } from 'react'\nimport { Container, Row, Col, InputGroup, InputGroupAddon, Button } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\nimport PattyBot from './patty-bot'\n\nconst FixedChat = () => {\n\n  const [ isOpen, setOpen ] = useState(false);\n\n  return (\n    <>\n      { isOpen && <PattyBot close={() => setOpen(false)} /> }\n      <Container fluid={ true } className=\"fixed-search p-3 m-0 bg-white search-shadow\">\n        <Row>\n          <Col>\n            <InputGroup>\n              <div className=\"form-control pointer\" onClick={ (e) => {e.preventDefault(); setOpen(true)} }>Do a search or ask Patty...</div>\n              <InputGroupAddon addonType=\"append\">\n                <Button title=\"Ask Patty\" onClick={ (e) => {e.preventDefault(); setOpen(true)} }><FontAwesomeIcon icon={ faComment } /></Button>\n              </InputGroupAddon>\n            </InputGroup>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default FixedChat;","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst PattyWorkingAtDesk = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"patty-working-at-desk.png\" }) {\n          childImageSharp {\n            fixed(width: 200) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fixed={data.placeholderImage.childImageSharp.fixed} />}\n  />\n);\n\nexport default PattyWorkingAtDesk;\n","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport moment from 'moment'\nimport PattyWorkingAtDesk from './patty-working-at-desk'\nimport Areas from './areas'\nimport Categories from './categories'\n\nconst Footer = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          site {\n              siteMetadata {\n                  title\n                  description\n              }\n          }\n        }\n      `}\n      render={data => {\n        return (\n          <footer className=\"container-fluid mt-5 pb-5 footer\">\n            <div className=\"row pt-5\">\n              <div className=\"col-lg mb-5 pr-5\">\n                <h2 className=\"title--header small mb-4\"><a className=\"link brand\" rel=\"author\"\n                                                       href=\"/\">{data.site.siteMetadata.title}</a></h2>\n                <p>\n                  <small>{data.site.siteMetadata.description}</small>\n                </p>\n                <PattyWorkingAtDesk/>\n                <p><em>\n                  <small>All rights reserved. &copy; expatty.com {moment().format('YYYY')}</small>\n                </em></p>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <Areas />\n              </div>\n              <div className=\"col-lg mb-5\">\n                <Categories />\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Subscribe to our newsletter</h2>\n                <form\n                  action=\"https://expatty.us7.list-manage.com/subscribe/post?u=a6b6c49a554f762c8c4c8d495&amp;id=1eef58f2b5\"\n                  method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" className=\"validate\"\n                  target=\"_blank\" noValidate>\n                  <div className=\"form-group\">\n                    <input type=\"email\" name=\"EMAIL\" className=\"form-control\" id=\"mce-EMAIL\"\n                           placeholder=\"email address\" required/>\n                  </div>\n                  <div style={{ position : 'absolute', left: '-5000px'}} aria-hidden=\"true\">\n                    <input type=\"text\"\n                           name=\"b_a6b6c49a554f762c8c4c8d495_1eef58f2b5\"\n                           tabIndex=\"-1\"/>\n                  </div>\n                  <div className=\"clear\">\n                    <button type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\"\n                            className=\"btn\">Subscribe\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </footer>\n        )\n      }}/>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst CategoryIcon = ({ path, icon, name }) => {\n  return (\n    <Link className=\"link\" to={path}>\n      <span\n        title={name}\n        className=\"tag-icons pr-2\"\n        dangerouslySetInnerHTML={{ __html: icon.map(i => `&#x${i.replace('U+', '')}`).join('') }}>\n      </span>\n    </Link>\n  )\n}\n\nexport default CategoryIcon","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport classnames from 'classnames'\n\nconst Areas = ({ className }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n      {\n      areas: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"area\"}}}, sort: {fields: [frontmatter___name]}) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              frontmatter {\n                name\n                tag\n              }\n            }\n          }\n        }\n      }\n      `\n      }\n      render={data => {\n        const areas = data.areas.edges.map(edge => edge.node);\n        return (<div className={classnames('content-list', className)}>\n          <h2 className=\"title--header small primary-colour mb-3\">Areas</h2>\n          <ul>\n            {\n              areas.map((area, idx) => (\n                <li key={idx}><span className=\"spacer\"/> <a href={area.fields.slug} className=\"link\">{area.frontmatter.name}</a></li>\n              ))\n            }\n          </ul>\n        </div>);\n      }}\n    />\n  );\n};\n\nexport default Areas;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport CategoryIcon from './category-icon'\nimport classnames from 'classnames'\n\nconst Categories = ({ className }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n      {\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}, exclude: {ne: true}}}, sort: {fields: [frontmatter___name]}) {\n              edges {\n                  node {\n                      frontmatter {\n                          tag\n                          name\n                          icon\n                      }\n                      fields {\n                          slug\n                      }\n                  }\n              }\n          }\n        }\n      `}\n      render={data => {\n        const categories = data.categories.edges.map(edge => edge.node);\n        return (\n          <div className={classnames('content-list', className)}>\n            <h2 className=\"title--header small primary-colour mb-3\">Categories</h2>\n            <ul>\n              {\n                categories.map((cat, idx) => (\n                  <li key={idx}>\n                    <CategoryIcon path={cat.fields.slug} name={cat.frontmatter.name}\n                                  icon={cat.frontmatter.icon}/><a href={cat.fields.slug}\n                                                                   className=\"link\"> {cat.frontmatter.name}\n                  </a></li>\n                ))\n              }\n            </ul>\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nexport default Categories;","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}