{"version":3,"sources":["webpack:///./src/components/listing-summary.js","webpack:///./src/components/templates/listing-list.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/layouts/standalone.js","webpack:///./src/components/category-icon.js"],"names":["ListingSummary","_ref","title","description","url","icons","react_default","a","createElement","className","gatsby_browser_entry","to","map","ic","idx","category_icon","icon","name","path","key","ListingList","props","_props$data$thisCateg","data","thisCategory","frontmatter","type","tag","commonKeywords","site","siteMetadata","listings","edges","edge","node","allCategories","categories","standalone","seo","keywords","concat","filter","tags","indexOf","i","listingIcons","tg","find","catNode","fields","slug","listing_summary","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","Header","siteTitle","_useState","useState","isOpen","setOpen","expand","href","onClick","navbar","defaultProps","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","Standalone","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","_header__WEBPACK_IMPORTED_MODULE_2__","_public_static_d_1948935994_json__WEBPACK_IMPORTED_MODULE_0__","CategoryIcon","react__WEBPACK_IMPORTED_MODULE_2___default","dangerouslySetInnerHTML","__html","replace"],"mappings":"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","file":"component---src-components-templates-listing-list-js-ba226605f17aec4dd844.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby'\nimport CategoryIcon from './category-icon'\n\nconst ListingSummary = ({title, description, url, icons}) => (\n  <div className=\"row listing\">\n    <div className=\"col-md\">\n      <div className=\"card mb-3\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title title--header dark small\"><Link className=\"link\" to={url}>{ title }</Link></h5>\n          <p className=\"card-text\">{ description }</p>\n          <p>\n            {\n              icons.map((ic, idx) => (\n                <CategoryIcon icon={ic.icon} name={ic.name} path={ic.path} key={idx}/>\n              ))\n            }\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default ListingSummary;","import React from 'react';\nimport Standalone from '../layouts/standalone'\nimport SEO from '../seo'\nimport ListingSummary from '../listing-summary'\n\nconst ListingList = (props) => {\n  const { type, name, tag } = props.data.thisCategory.frontmatter;\n  const { commonKeywords } = props.data.site.siteMetadata;\n  const listings = props.data.listings.edges.map(edge => edge.node);\n  const allCategories = props.data.categories.edges.map(edge => edge.node);\n  return (\n    <Standalone>\n      <SEO\n        title={ `Expatty ${ type === 'category' ? 'category' : 'areas'} | ${name}` }\n        description={ `Attractions, events, businesses and services in Andalusia, Spain, related to: ${name}` }\n        keywords={[name, ...commonKeywords]}/>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md\">\n            <main>\n              <h1 className=\"title--header\">{ name }</h1>\n              {\n                listings\n                  .filter(({ frontmatter }) => frontmatter.tags.indexOf(tag) >= 0)\n                  .map((node, i) => {\n                    const listingIcons =\n                      node.frontmatter.tags\n                        .map(tg => allCategories.find(catNode => catNode.frontmatter.tag === tg))\n                        .filter(catNode => catNode)\n                        .map(catNode => ({\n                          icon: catNode.frontmatter.icon,\n                          name: catNode.frontmatter.name,\n                          path: catNode.fields.slug\n                        }));\n                    return (\n                    <ListingSummary\n                      key={ i }\n                      description={ node.frontmatter.description }\n                      title={ node.frontmatter.title }\n                      url={ node.fields.slug }\n                      icons={ listingIcons }/>\n                  )\n                })\n              }\n            </main>\n          </div>\n        </div>\n      </div>\n    </Standalone>\n  );\n};\n\nexport default ListingList;\n\nexport const pageQuery = graphql`\n    query CategoryOrArea($type: String!, $name: String!) {\n        site {\n            siteMetadata {\n                commonKeywords\n            }\n        }\n        thisCategory: markdownRemark(frontmatter: { type: { eq: $type }, name: { eq: $name } }) {\n            frontmatter {\n                type\n                name\n                tag\n            }\n        }\n        listings: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"listing\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        description\n                        tags\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Collapse\n} from 'reactstrap';\n\nconst Header = ({siteTitle}) => {\n\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <header>\n      <Navbar expand=\"md\" className=\"navbar-dark bg-transparent\">\n        <NavbarBrand href=\"/\"><h1 className=\"title--header brand\">{siteTitle}</h1></NavbarBrand>\n        <NavbarToggler className=\"link light\" onClick={() => setOpen(!isOpen)} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/about/\">About</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\n\nconst Standalone = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery2 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n  render={data => (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      {children}\n      <div>Footer</div>\n    </>\n    )}\n  />\n);\n\nexport default Standalone;","import React from 'react';\nimport { Link } from 'gatsby'\n\nconst CategoryIcon = ({ path, icon, name }) => {\n  return (\n    <Link className=\"link\" to={path}><span title={name} className=\"tag-icons pr-2\" dangerouslySetInnerHTML={{__html: icon.map(i => `&#x${i.replace('U+','')}`).join('')}}></span></Link>\n  );\n};\n\nexport default CategoryIcon;"],"sourceRoot":""}