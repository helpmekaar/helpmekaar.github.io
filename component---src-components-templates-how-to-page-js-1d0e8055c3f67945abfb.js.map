{"version":3,"sources":["webpack:///./src/components/how-to.js","webpack:///./src/components/templates/how-to-page.js","webpack:///./src/components/layouts/standalone.js","webpack:///./src/components/share.js"],"names":["HowTo","_ref","source","title","howToIframe","useRef","resizeIframe","current","style","height","contentWindow","document","body","scrollHeight","useEffect","window","addEventListener","removeEventListener","react_default","a","createElement","ref","className","src","scrolling","frameBorder","onLoad","__webpack_require__","d","__webpack_exports__","pageQuery","HowToPage","data","_data$markdownRemark$","markdownRemark","frontmatter","description","tags","commonKeywords","site","siteMetadata","standalone","seo","keywords","concat","how_to","share","lib_default","DiscussionEmbed","shortname","Standalone","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","Fragment","_header__WEBPACK_IMPORTED_MODULE_2__","showTitle","siteTitle","hideFacebook","_footer__WEBPACK_IMPORTED_MODULE_4__","_fixed_chat__WEBPACK_IMPORTED_MODULE_5__","_public_static_d_1948935994_json__WEBPACK_IMPORTED_MODULE_0__","Share"],"mappings":"qHAoBeA,EAlBD,SAAAC,GAAuB,IAApBC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,MAEjBC,EAAcC,iBAAO,MAErBC,EAAe,WACnBF,EAAYG,QAAQC,MAAMC,OAASL,EAAYG,QAAQG,cAAcC,SAASC,KAAKC,aAAe,MAQpG,OALAC,oBAAU,WAER,OADAC,OAAOC,iBAAiB,SAAUV,GAC3B,kBAAMS,OAAOE,oBAAoB,SAAUX,MAIlDY,EAAAC,EAAAC,cAAA,UAAQC,IAAMjB,EAAckB,UAAU,gBAAgBC,IAAMrB,EAASsB,UAAU,KAAKC,YAAc,EAAItB,MAAQA,EAAQuB,OAASpB,kDChBnIqB,EAAAC,EAAAC,EAAA,8BAAAC,IAuDeC,UA/CG,SAAA9B,GAAc,IAAX+B,EAAW/B,EAAX+B,KAAWC,EACeD,EAAKE,eAAeC,YAAzDhC,EADsB8B,EACtB9B,MAAOiC,EADeH,EACfG,YAAaC,EADEJ,EACFI,KAAMnC,EADJ+B,EACI/B,OAC1BoC,EAAmBN,EAAKO,KAAKC,aAA7BF,eAGR,OACEpB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACEvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKvC,MAAQA,EAAQiC,YAAcA,EAAcO,SAAQ,GAAAC,OAAMP,EAASC,KACxEpB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAkBnB,GAChCe,EAAAC,EAAAC,cAACyB,EAAD,CAAO3C,OAASA,EAASC,MAAQA,IACjCe,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,MACA5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAO6B,gBAAR,CAAwBC,UAAU,aAEpC/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAjB3B,IAiDaQ,EAAS,gHC9BPoB,IArBI,SAAAjD,GAAA,IAAEkD,EAAFlD,EAAEkD,SAAF,OACjBC,EAAAjC,EAAAC,cAACiC,EAAA,YAAD,CAAaC,MAAK,aASlBC,OAAQ,SAAAvB,GAAI,OACVoB,EAAAjC,EAAAC,cAAAgC,EAAAjC,EAAAqC,SAAA,KACEJ,EAAAjC,EAAAC,cAACqC,EAAA,EAAD,CAAQC,WAAY,EAAOC,UAAW3B,EAAKO,KAAKC,aAAarC,MAAOyD,cAAe,IAClFT,EACDC,EAAAjC,EAAAC,cAACyC,EAAA,EAAD,MACAT,EAAAjC,EAAAC,cAAC0C,EAAA,EAAD,QAdJ9B,KAAA+B,wHCPFpC,EAAA,GAAAA,EAAA,KAmEeqC,IAFD,kBAAM","file":"component---src-components-templates-how-to-page-js-1d0e8055c3f67945abfb.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\n\nconst HowTo = ({ source, title }) => {\n\n  const howToIframe = useRef(null);\n\n  const resizeIframe = () => {\n    howToIframe.current.style.height = howToIframe.current.contentWindow.document.body.scrollHeight + 'px';\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', resizeIframe);\n    return () => window.removeEventListener('resize', resizeIframe);\n  });\n\n  return (\n    <iframe ref={ howToIframe } className=\"how-to-iframe\" src={ source } scrolling=\"no\" frameBorder={ 0 } title={ title } onLoad={ resizeIframe } />\n  );\n};\n\nexport default HowTo;","import React from 'react'\nimport HowTo from '../how-to'\nimport Standalone from '../layouts/standalone'\nimport { graphql } from 'gatsby'\nimport SEO from '../seo'\nimport Share from '../share'\nimport Disqus from 'disqus-react'\n\nconst HowToPage = ({ data }) => {\n  const { title, description, tags, source } = data.markdownRemark.frontmatter;\n  const { commonKeywords } = data.site.siteMetadata;\n  // const allCategories = data.categories.edges.map(edge => edge.node);\n\n  return (\n    <Standalone>\n      <SEO title={ title } description={ description } keywords={[...tags, ...commonKeywords]}/>\n      <main>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-8\">\n              <h1 className=\"title--header\">{ title }</h1>\n              <HowTo source={ source } title={ title } />\n              <Share/>\n              <Disqus.DiscussionEmbed shortname=\"expatty\" />\n            </div>\n            <div className=\"col-md-4\">\n              {/*{\n                data.related.edges.map(({ node }, i) => {\n                  const listingIcons =\n                    node.frontmatter.tags\n                      .map(tg => allCategories.find(catNode => catNode.frontmatter.tag === tg))\n                      .filter(catNode => catNode)\n                      .map(catNode => ({\n                        icon: catNode.frontmatter.icon,\n                        name: catNode.frontmatter.name,\n                        path: catNode.fields.slug\n                      }));\n                  return (\n                    <ListingSummary\n                      key={ i }\n                      description={ node.frontmatter.description }\n                      title={ node.frontmatter.title }\n                      url={ node.fields.slug }\n                      icons={ listingIcons }/>\n                  )\n                })\n              }*/}\n            </div>\n          </div>\n        </div>\n      </main>\n    </Standalone>\n  );\n};\n\nexport default HowToPage;\n\nexport const pageQuery = graphql`\n  query HowToPages($slug: String!, $related: [String!]!) {\n      site {\n          siteMetadata {\n              commonKeywords\n          }\n      }\n      markdownRemark(fields: { slug: { eq: $slug } }) {\n          frontmatter {\n              title\n              description\n              tags\n              source\n          }\n      }\n      related: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"listing\"}, tags: {in: $related}}}) {\n          edges {\n              node {\n                  frontmatter {\n                      title\n                      description\n                      icon\n                      tags\n                  }\n                  fields {\n                      slug\n                  }\n              }\n          }\n      }\n      categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n          edges {\n              node {\n                  frontmatter {\n                      tag\n                      name\n                      icon\n                  }\n                  fields {\n                      slug\n                  }\n              }\n          }\n      }\n  }\n`;","import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\nimport FixedChat from '../fixed-chat'\n\nconst Standalone = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery2 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n  render={data => (\n    <>\n      <Header showTitle={ true } siteTitle={data.site.siteMetadata.title} hideFacebook={ true } />\n      {children}\n      <Footer />\n      <FixedChat />\n    </>\n    )}\n  />\n);\n\nexport default Standalone;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\n\n/*const Share = ({ callToAction }) => <StaticQuery query={shareQuery} render={\n  data => (\n    <div className=\"share-bar mt-5\">\n\n      <h4 className=\"title--header small\">{ callToAction || 'Deel op:'}</h4>\n\n      <div className=\"share-buttons\">\n        <a href={`https://www.facebook.com/sharer/sharer.php?u=${ data.site.url }}${ data.site.baseurl }}${ data.sitePage.path }}`}\n           onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n           title=\"Deel op Facebook\">\n          <i className=\"fa fa-facebook-official share-button\"> facebook</i>\n        </a>\n\n        <a\n          href=\"https://twitter.com/intent/tweet?text={{ page.title }}&url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n          onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n          title=\"Deel op Twitter\">\n          <i className=\"fa fa-twitter share-button\"> twitter</i>\n        </a>\n\n        <a href=\"https://plus.google.com/share?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n           onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n           title=\"Deel op Google+\">\n          <i className=\"fa fa-google-plus share-button\"> google</i>\n        </a>\n\n        <a href=\"http://pinterest.com/pin/create/button/?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n           onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n           title=\"Deel op Pinterest\">\n          <i className=\"fa fa-pinterest-p share-button\"> pinterest</i>\n        </a>\n\n        <a href=\"http://www.tumblr.com/share/link?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n           onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n           title=\"Deel op Tumblr\">\n          <i className=\"fa fa-tumblr share-button\"> tumblr</i>\n        </a>\n\n        <a href=\"http://www.reddit.com/submit?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n           onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n           title=\"Deel op Reddit\">\n          <i className=\"fa fa-reddit-alien share-button\"> reddit</i>\n        </a>\n\n        <a\n          href=\"https://www.linkedin.com/shareArticle?mini=true&url={{ site.url }}{{ site.baseurl }}{{ page.url }}&title={{ page.title }}&summary={{ page.description }}&source={{ site.title }}\"\n          onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n          title=\"Deel op LinkedIn\">\n          <i className=\"fa fa-linkedin share-button\"> linkedin</i>\n        </a>\n\n        <a\n          href=\"mailto:?subject={{ page.title }}&amp;body=Check out this site {{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n          title=\"Deel met e-pos\">\n          <i className=\"fa fa-envelope share-button\"> email</i>\n        </a>\n      </div>\n\n    </div>\n  )\n} />*/\n\nconst Share = () => null;\n\nexport default Share;\n\n/*\nconst shareQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        },\n        sitePage {\n            path\n        }\n    }\n`*/\n"],"sourceRoot":""}