{"version":3,"sources":["webpack:///./src/components/layouts/home.js","webpack:///./src/chat/use-chat-state.js","webpack:///./src/components/chat.js","webpack:///./src/components/search-result.js","webpack:///./src/components/search.js","webpack:///./src/components/hero.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/category-icon.js","webpack:///./src/components/listing-summary.js"],"names":["Home","_ref","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","Fragment","header","showTitle","siteTitle","site","siteMetadata","title","_2559738656","useChatState","_useState","useState","messageQueue","setMessageQueue","_useState2","dataSource","setDataSource","_useState3","isTyping","setTyping","_useState4","lexRuntime","setLexRuntime","_useState5","sessionAttributes","setSessionAttributes","userId","Date","now","_useState7","typeTimer","setTypeTimer","_useState8","inputText","setInputText","dataSourceRef","useRef","current","typeTimerRef","processSystemMessages","msgList","concat","getSystemMessageFromText","text","avatar","withPrefix","position","type","date","useEffect","AWS","region","credentials","IdentityPoolId","params","botAlias","botName","postText","err","console","error","log","responseArray","message","startsWith","JSON","parse","messages","map","m","value","response","length","nextMessage","rest","slice","thisTimer","setTimeout","clearTimeout","filter","t","forEach","clearInterval","processQueue","processInput","Chat","onSearch","nbResults","_useChatState","isSearchTipOpen","setSearchTipOpen","isChatTipOpen","setChatTipOpen","inputEl","messageList","onUserMessage","node","document","querySelector","remove","newNode","setAttribute","mlistRef","appendChild","searchTerms","className","main","ref","lockable","toBottomHeight","onKeyPress","e","shiftKey","charCode","preventDefault","placeholder","aria-label","aria-describedby","onClick","id","index_es","icon","faSearch","Tooltip","delay","show","hide","placement","isOpen","target","toggle","faComment","SearchResult","description","icons","url","href","ic","iconIndex","category_icon","name","path","key","Search","onResults","index","setIndex","content","setContent","page","setPage","searchContainerRef","client","algoliasearch","initIndex","search","hitsPerPage","scrollTop","nbHits","hits","h","idx","listingIcons","tags","tg","categories","edges","edge","find","catNode","frontmatter","tag","fields","slug","search_result","nbPages","Math","max","aria-hidden","Array","fill","link","disabled","min","undefined","_2696684912","Hero","slogan","setQuery","setNbResults","style","fontSize","chat","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","props","_props$data$site$site","home","seo","keywords","hero","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","Error","propTypes","PropTypes","object","string","isRequired","func","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","Header","setOpen","expand","navbar","defaultProps","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","property","author","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","CategoryIcon","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","dangerouslySetInnerHTML","__html","i","replace","ListingSummary","gatsby__WEBPACK_IMPORTED_MODULE_2__","_category_icon__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"yJAwBeA,EApBF,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,SAAF,OACXC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CAAaC,MAAK,aASfC,OAAQ,SAAAC,GAAI,OACVN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,WAAW,EAAOC,UAAWJ,EAAKK,KAAKC,aAAaC,QAC3Dd,EACDC,EAAAC,EAAAC,cAAA,uBAbPI,KAAAQ,+DCyHaC,EA1HM,WAAM,IAAAC,EAEeC,mBAAS,IAA1CC,EAFkBF,EAAA,GAEJG,EAFIH,EAAA,GAAAI,EAGWH,mBAAS,IAAtCI,EAHkBD,EAAA,GAGNE,EAHMF,EAAA,GAAAG,EAIKN,oBAAS,GAAhCO,EAJkBD,EAAA,GAIRE,EAJQF,EAAA,GAAAG,EAKWT,mBAAS,MAAtCU,EALkBD,EAAA,GAKNE,EALMF,EAAA,GAAAG,EAMyBZ,mBAAS,IAApDa,EANkBD,EAAA,GAMCE,EANDF,EAAA,GAOlBG,EAAUf,mBAAQ,eAAgBgB,KAAKC,OAPrB,GAAAC,EAQSlB,mBAAS,IAApCmB,EARkBD,EAAA,GAQPE,EAROF,EAAA,GAAAG,EASSrB,mBAAS,MAApCsB,EATkBD,EAAA,GASPE,EATOF,EAAA,GAWnBG,EAAgBC,iBAAOrB,GAC7BoB,EAAcE,QAAUtB,EAExB,IAAMuB,EAAeF,iBAAON,GAC5BQ,EAAaD,QAAUP,EAEvB,IAwBMS,EAAwB,SAACC,GAC7B3B,EAAe,GAAA4B,OAAK7B,EAAiB4B,KAGjCE,EAA2B,SAAAC,GAAI,MAAK,CACxCC,OAAQC,qBAAW,+BACnBC,SAAU,OACVvC,MAAO,SACPwC,KAAM,OACNJ,OACAK,KAAM,IAAIrB,OA8DZ,OA7CAsB,oBAAU,WACRV,EAAsB,CACpBG,EAAwB,oBACxBA,EAAwB,0EACxBA,EAAwB,mDACxBA,EAAwB,mCAG1BQ,SAAWC,OAAS,YACpBD,SAAWE,YAAc,IAAIF,6BAA+B,CAC1DG,eAAgB,mDAElB/B,EAAc,IAAI4B,eAEjB,IAEHD,oBAAU,WACR,GAAKhB,EAAL,CAGA,IAAMqB,EAAS,CACbC,SAAU,UACVC,QAAS,YACTvB,YACAP,SACAF,qBAGFH,EAAWoC,SAASH,EAAQ,SAACI,EAAK1D,GAIhC,GAHI0D,GACFC,QAAQC,MAAMF,GAEZ1D,EAAM,CACR2D,QAAQE,IAAI7D,GACZyB,EAAqBzB,EAAKwB,mBAC1B,IAAMsC,EAAgB9D,EAAK+D,QAAQC,WAAW,KAAOC,KAAKC,MAAMlE,EAAK+D,SAASI,SAASC,IAAI,SAAAC,GAAC,OAAIA,EAAEC,QAAS,CAACtE,EAAK+D,SACjHxB,EAAsBuB,EAAcM,IAAI,SAAAG,GAAQ,OAAI7B,EAAyB6B,WAGhF,CAACtC,IAEArB,EAAa4D,QA5FI,WAAM,IAClBC,EAAwB7D,EADN,GACF8D,EAAQ9D,EADN+D,MAAA,GAEzB,GAA6B,SAAzBF,EAAY3B,SAAqB,CACnC,GAAI5B,EACF,OAEFL,EAAgB6D,GAChBvD,GAAU,GACV,IAAMyD,EAAYC,WAAW,WAC3B7D,EAAa,GAAAyB,OAAKN,EAAcE,QAAnB,CAA4BoC,KACzCtD,GAAU,GACV2D,aAAaF,GACb7C,EAAaO,EAAaD,QAAQ0C,OAAO,SAAAC,GAAC,OAAIA,IAAMJ,MACnDH,EAAY9B,KAAiC,GAA1B8B,EAAY9B,KAAK6B,OAAc,KACrDzC,EAAY,GAAAU,OAAKX,EAAL,CAAgB8C,UAE5B/D,EAAgB6D,GAChBvD,GAAU,GACVW,EAAUmD,QAAQ,SAAAD,GAAC,OAAIE,cAAcF,KACrChE,EAAa,GAAAyB,OAAK1B,EAAL,CAAiB0D,KAC9BvC,EAAauC,EAAY9B,MAyE3BwC,GAGK,CACLpE,aACAqE,aA7DmB,SAAAzC,GACdA,GAGL9B,EAAgB,CAAC,CACf+B,OAAQ,oEACRE,SAAU,QACVvC,MAAO,OACPwC,KAAM,OACNJ,WAqDFzB,WACAM,+BC7BW6D,EApFF,SAAA7F,GAA6B,IAA1B8F,EAA0B9F,EAA1B8F,SAAUC,EAAgB/F,EAAhB+F,UAAgBC,EAE0B/E,IAA1DM,EAFgCyE,EAEhCzE,WAAYqE,EAFoBI,EAEpBJ,aAAclE,EAFMsE,EAENtE,SAAUM,EAFJgE,EAEIhE,kBAFJd,EAGIC,oBAAS,GAA9C8E,EAHiC/E,EAAA,GAGhBgF,EAHgBhF,EAAA,GAAAI,EAIAH,oBAAS,GAA1CgF,EAJiC7E,EAAA,GAIlB8E,EAJkB9E,EAAA,GAMlC+E,EAAUzD,iBAAO,MACjB0D,EAAc1D,iBAAO,MAiBrB2D,EAAgB,WACpBX,EAAaS,EAAQxD,QAAQiC,OAC7BuB,EAAQxD,QAAQiC,MAAQ,IA0B1B,OAvBArB,oBAAU,WACR,IAAM+C,EAAOC,SAASC,cAAc,cAIpC,GAHIF,GACFA,EAAKG,SAEHjF,IACmB+E,SAASC,cAAc,cACzB,CACjB,IAAME,EAAUH,SAASrG,cAAc,OACvCwG,EAAQC,aAAa,KAAM,aAC3BD,EAAQC,aAAa,QAAS,WAC9BP,EAAYzD,QAAQiE,SAASC,YAAYH,MAK/CnD,oBAAU,WACHzB,EAAkBgF,aAGvBlB,EAAS9D,EAAkBgF,cAC1B,CAAChF,EAAkBgF,cAGpB9G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,QACb/G,EAAAC,EAAAC,cAAC8G,EAAA,YAAD,CACEC,IAAKb,EACLW,UAAU,qBACVG,UAAW,EACXC,eAAe,OACf9F,WAAaA,KAIjBrB,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,cACb/G,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,oBACb/G,EAAAC,EAAAC,cAAA,SAAO+G,IAAMd,EAAUiB,WAzDZ,SAACC,GAClB,SAAIA,EAAEC,UAA2B,KAAfD,EAAEE,YAGD,KAAfF,EAAEE,UACJlB,IACAgB,EAAEG,kBACK,QAHT,IAqDqDnE,KAAK,OAAO0D,UAAU,eAAeU,YAAY,8BAA8BC,aAAW,2BAA2BC,mBAAiB,iBACnL3H,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,sBACb/G,EAAAC,EAAAC,cAAA,UAAQW,MAAM,cAAc+G,QAhDnB,WACnBzB,EAAQxD,QAAQiC,OAASgB,EAASO,EAAQxD,QAAQiC,QA+CamC,UAAU,MAAM1D,KAAK,SAASwE,GAAG,aAAY7H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAiBC,KAAOC,OAC1HhI,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAASC,MAAO,CAACC,KAAM,EAAGC,KAAM,GAAIC,UAAU,SAASC,OAAQvC,EAAiBwC,OAAO,YAAYC,OAAQ,kBAAMxC,GAAkBD,KAAnI,eAGA/F,EAAAC,EAAAC,cAAA,UAAQW,MAAM,YAAY+G,QAASvB,EAAeU,UAAU,MAAM1D,KAAK,SAASwE,GAAG,WAAU7H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAiBC,KAAOU,OACrHzI,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAASC,MAAO,CAACC,KAAM,EAAGC,KAAM,GAAIC,UAAU,SAASC,OAAQrC,EAAesC,OAAO,UAAUC,OAAQ,kBAAMtC,GAAgBD,KAA7H,qBAKQ,MAAbJ,GAAqB7F,EAAAC,EAAAC,cAAA,SAAO6G,UAAU,kCAAqClB,EAAtD,KAAiF,IAAdA,EAAkB,UAAY,UAAjG,sFCnEf6C,EAhBM,SAAA5I,GAAwC,IAArCe,EAAqCf,EAArCe,MAAO8H,EAA8B7I,EAA9B6I,YAAaC,EAAiB9I,EAAjB8I,MAAOC,EAAU/I,EAAV+I,IACjD,OACE7I,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,YACb/G,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,UACb/G,EAAAC,EAAAC,cAAA,MAAI6G,UAAU,uBAAsB/G,EAAAC,EAAAC,cAAA,KAAG6G,UAAU,aAAa+B,KAAOD,GAAQhI,IAC7Eb,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,aAASyI,IACZ3I,EAAAC,EAAAC,cAAA,SACE0I,GAASA,EAAMlE,IAAI,SAACqE,EAAIC,GAAL,OACjBhJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAclB,KAAOgB,EAAGhB,KAAOmB,KAAOH,EAAGG,KAAOC,KAAOJ,EAAGI,KAAOC,IAAMJ,UCoGpEK,EAxGA,SAAAvJ,GAA0B,IAAvBM,EAAuBN,EAAvBM,MAAOkJ,EAAgBxJ,EAAhBwJ,UAAgBtI,EAEbC,mBAAS,MAA5BsI,EAFgCvI,EAAA,GAEzBwI,EAFyBxI,EAAA,GAAAI,EAGTH,mBAAS,IAAhCwI,EAHgCrI,EAAA,GAGvBsI,EAHuBtI,EAAA,GAAAG,EAIfN,mBAAS,GAA1B0I,EAJgCpI,EAAA,GAI1BqI,EAJ0BrI,EAAA,GAKjCsI,EAAqBnH,iBAAO,MAsBlC,OApBAa,oBAAU,WACR,IAAMuG,EAASC,EAAc,aAAc,oCAC3CP,EAASM,EAAOE,UAAU,aACzB,IAEHzG,oBAAU,WACHgG,GAAUnJ,GAGfmJ,EAAMU,OAAO,CAAE7J,QAAOuJ,OAAMO,YAAa,IAAM,SAAClG,EAAKyF,GAC/CzF,EACFC,QAAQC,MAAMF,IAEd6F,EAAmBlH,QAAQwH,UAAY,EACvCT,EAAWD,GACXH,EAAUG,EAAQW,YAGrB,CAAChK,EAAOuJ,IAGT3J,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACFC,MAAK,aAkBLC,OACE,SAAAC,GACE,OACEN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,SAASE,IAAM4C,GAE1BJ,EAAQY,MAAQZ,EAAQY,KAAK3F,IAAI,SAAC4F,EAAGC,GACnC,IAAMC,EAAeF,EAAEG,KACpB/F,IAAI,SAAAgG,GAAE,OAAIpK,EAAKqK,WAAWC,MAAMlG,IAAI,SAAAmG,GAAI,OAAIA,EAAKvE,OAAMwE,KAAK,SAAAC,GAAO,OAAIA,EAAQC,YAAYC,MAAQP,MACnGrF,OAAO,SAAA0F,GAAO,OAAIA,IAClBrG,IAAI,SAAAqG,GAAO,MAAK,CACfhD,KAAMgD,EAAQC,YAAYjD,KAC1BmB,KAAM6B,EAAQC,YAAY9B,KAC1BC,KAAM4B,EAAQG,OAAOC,QAEzB,OACInL,EAAAC,EAAAC,cAACkL,EAAD,CAAchC,IAAMmB,EAAM5B,YAAc2B,EAAE3B,YAAcC,MAAQ4B,EAAe3B,IAAMyB,EAAEzB,IAAMhI,MAAQyJ,EAAEzJ,WAM5G4I,EAAQ4B,SAAW5B,EAAQ4B,QAAU,EAAKrL,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,qBACxD/G,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,OAAOW,aAAW,2BAC/B1H,EAAAC,EAAAC,cAAA,MAAI6G,UAAU,qCACX4C,EAAO,GAAK3J,EAAAC,EAAAC,cAAA,MAAI6G,UAAU,aACzB/G,EAAAC,EAAAC,cAAA,UAAQ6G,UAAU,0BAA0BW,aAAW,WAAWE,QAAS,kBAAMgC,EAAQ0B,KAAKC,IAAI,EAAG5B,EAAO,MAC1G3J,EAAAC,EAAAC,cAAA,QAAMsL,cAAY,QAAlB,KACAxL,EAAAC,EAAAC,cAAA,QAAM6G,UAAU,WAAhB,cAIF,IAAI0E,MAAMhC,EAAQ4B,SACfK,KAAK,MACLhH,IAAI,SAACiH,EAAMpB,GAAP,OACHvK,EAAAC,EAAAC,cAAA,MAAIkJ,IAAKmB,EAAKxD,UAAU,aACtB/G,EAAAC,EAAAC,cAAA,UAAQ0L,SAAUjC,IAASY,EAAKxD,UAAS,aAAc4C,IAASY,EAAM,uBAAyB,kBAAoB3C,QAAS,kBAAMgC,EAAQW,KAAQA,EAAM,MAI9JZ,EAAOF,EAAQ4B,QAAU,GAAKrL,EAAAC,EAAAC,cAAA,MAAI6G,UAAU,aAC5C/G,EAAAC,EAAAC,cAAA,UAAQ6G,UAAU,0BAA0BW,aAAW,OAAOE,QAAS,kBAAMgC,EAAQ0B,KAAKO,IAAIlC,EAAO,EAAGF,EAAQ4B,QAAU,MACxHrL,EAAAC,EAAAC,cAAA,QAAMsL,cAAY,QAAlB,KACAxL,EAAAC,EAAAC,cAAA,QAAM6G,UAAU,WAAhB,kBAKD+E,IAnEnBxL,KAAAyL,KCAWC,EA/BF,SAAAlM,GAAuB,IAApBe,EAAoBf,EAApBe,MAAOoL,EAAanM,EAAbmM,OAAajL,EAERC,mBAAS,MAA5Bb,EAF2BY,EAAA,GAEpBkL,EAFoBlL,EAAA,GAAAI,EAGAH,mBAAS,MAApC4E,EAH2BzE,EAAA,GAGhB+K,EAHgB/K,EAAA,GAKlC,OAAQpB,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,mBACrB/G,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,YACb/G,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,wBACb/G,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,gBACb/G,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,OACb/G,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,8BACb/G,EAAAC,EAAAC,cAAA,MAAIkM,MAAO,CAAEC,SAAU,UAAvB,MAEFrM,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,aACb/G,EAAAC,EAAAC,cAAA,MAAI6G,UAAU,gCAAgClG,GAC9Cb,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,QAAQkF,OAK/BjM,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,YACb/G,EAAAC,EAAAC,cAACoM,EAAD,CAAM1G,SAAUsG,EAAUrG,UAAWA,KAEvC7F,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,YACb/G,EAAAC,EAAAC,cAAC+J,EAAD,CAAQ7J,MAAOA,EAAOkJ,UAAW6C,QC5BzCI,EAAAC,EAAAC,EAAA,8BAAAC,IAgBeC,UAVG,SAACC,GAAU,IAAAC,EACDD,EAAMtM,KAAKK,KAAKC,aAAlCC,EADmBgM,EACnBhM,MAAOoL,EADYY,EACZZ,OACf,OAAQjM,EAAAC,EAAAC,cAAC4M,EAAD,KACN9M,EAAAC,EAAAC,cAAC6M,EAAA,EAAD,CAAKlM,MAAM,OAAOmM,SAAU,mCAC5BhN,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC+M,EAAD,CAAMpM,MAAOA,EAAOoL,OAAQA,OALlC,IAYaS,EAAS,8CClBtBH,EAAAW,EAAAT,GAAAF,EAAAC,EAAAC,EAAA,4BAAAU,IAAAZ,EAAAC,EAAAC,EAAA,uCAAAW,IAAAb,EAAAC,EAAAC,EAAA,gCAAAY,IAAA,IAAAC,EAAAf,EAAA,GAAAgB,EAAAhB,EAAAiB,EAAAF,GAAAG,EAAAlB,EAAA,GAAAmB,EAAAnB,EAAAiB,EAAAC,GAAAE,EAAApB,EAAA,KAAAqB,EAAArB,EAAAiB,EAAAG,GAAApB,EAAAC,EAAAC,EAAA,yBAAAmB,EAAA3N,IAAAsM,EAAAC,EAAAC,EAAA,+BAAAkB,EAAA,aAAApB,EAAAC,EAAAC,EAAA,6BAAAkB,EAAA,WAAApB,EAAAC,EAAAC,EAAA,yBAAAkB,EAAA,OAAApB,EAAAC,EAAAC,EAAA,4BAAAkB,EAAA,UAAApB,EAAAC,EAAAC,EAAA,+BAAAkB,EAAA,iBAAAE,EAAAtB,EAAA,KAAAuB,EAAAvB,EAAAiB,EAAAK,GAAAtB,EAAAC,EAAAC,EAAA,iCAAAqB,EAAA7N,IAAA,IAAA8N,EAAAxB,EAAA,IAAAA,EAAAC,EAAAC,EAAA,8BAAAsB,EAAA,IAYA,IAAMX,EAAqBY,IAAMC,cAAc,IAEzCZ,EAAc,SAAAT,GAAK,OACvBW,EAAAtN,EAAAC,cAACkN,EAAmBc,SAApB,KACG,SAAAC,GACC,OACEvB,EAAMtM,MACL6N,EAAgBvB,EAAMxM,QAAU+N,EAAgBvB,EAAMxM,OAAOE,MAEtDsM,EAAMvM,QAAUuM,EAAM7M,UAC5B6M,EAAMtM,KAAOsM,EAAMtM,KAAKA,KAAO6N,EAAgBvB,EAAMxM,OAAOE,MAGvDiN,EAAAtN,EAAAC,cAAA,uCAaf,SAASiN,IACP,MAAM,IAAIiB,MACR,gVATJf,EAAYgB,UAAY,CACtB/N,KAAMgO,IAAUC,OAChBnO,MAAOkO,IAAUE,OAAOC,WACxBpO,OAAQiO,IAAUI,KAClB3O,SAAUuO,IAAUI,2BCnCtB,IAAsB/J,EAKpBgK,EAAOC,SALajK,EAKWkK,EAAQ,OALRlK,EAAEmK,SAAYnK,oCCA/C,IAAAoK,EAAAxC,EAAA,GAAAyC,EAAAzC,EAAAiB,EAAAuB,GAAAE,EAAA1C,EAAA,GAAA2C,EAAA3C,EAAAiB,EAAAyB,GAAAE,EAAA5C,EAAA,KAAA6C,EAAA7C,EAAA,KAAA8C,EAAA9C,EAAA,KAAA+C,EAAA/C,EAAA,KAAAgD,EAAAhD,EAAA,KAAAiD,EAAAjD,EAAA,KAAAkD,EAAAlD,EAAA,KAYMmD,EAAS,SAAA5P,GAA4B,IAA1BY,EAA0BZ,EAA1BY,UAAWD,EAAeX,EAAfW,UAAeO,EAEfC,oBAAS,GAA5BqH,EAFkCtH,EAAA,GAE1B2O,EAF0B3O,EAAA,GAIzC,OACEkO,EAAAjP,EAAAC,cAAA,cACEgP,EAAAjP,EAAAC,cAACiP,EAAA,EAAD,CAAQS,OAAO,KAAK7I,UAAU,8BAC1BtG,GAAayO,EAAAjP,EAAAC,cAACkP,EAAA,EAAD,CAAatG,KAAK,KAAIoG,EAAAjP,EAAAC,cAAA,MAAI6G,UAAU,uBAAuBrG,IAC1EwO,EAAAjP,EAAAC,cAACmP,EAAA,EAAD,CAAetI,UAAU,aAAaa,QAAS,kBAAM+H,GAASrH,MAC9D4G,EAAAjP,EAAAC,cAACoP,EAAA,EAAD,CAAUhH,OAAQA,EAAQuH,QAAM,GAC9BX,EAAAjP,EAAAC,cAACqP,EAAA,EAAD,CAAKxI,UAAU,UAAU8I,QAAM,GAC7BX,EAAAjP,EAAAC,cAACsP,EAAA,EAAD,KACEN,EAAAjP,EAAAC,cAACuP,EAAA,EAAD,CAAS1I,UAAU,aAAa+B,KAAK,WAArC,eASd4G,EAAOrB,UAAY,CACjB3N,UAAW4N,IAAUE,QAGvBkB,EAAOI,aAAe,CACpBpP,UAAS,IAGIgP,wGCnCTK,EAAmB,SAAAjQ,GAAkB,IAAfkQ,EAAelQ,EAAfkQ,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOpC,IAAM9N,cAAcmQ,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiB1B,UAAY,CAC3B2B,SAAU1B,IAAUmC,MAAM,CACxBL,SAAU9B,IAAUE,OAAOC,aAC1BA,YAGUsB,sHChBf,SAASW,EAAT5Q,GAA2D,IAA5C6I,EAA4C7I,EAA5C6I,YAAagI,EAA+B7Q,EAA/B6Q,KAAMC,EAAyB9Q,EAAzB8Q,KAAM5D,EAAmBlN,EAAnBkN,SAAUnM,EAASf,EAATe,MAChD,OACEqO,EAAAjP,EAAAC,cAAC2Q,EAAA,YAAD,CACEzQ,MAAO0Q,EACPzQ,OAAQ,SAAAC,GACN,IAAMyQ,EACJpI,GAAerI,EAAKK,KAAKC,aAAa+H,YACxC,OACEuG,EAAAjP,EAAAC,cAAC8Q,EAAA/Q,EAAD,CACEgR,eAAgB,CACdN,QAEF9P,MAAOA,EACPqQ,cAAa,QAAU5Q,EAAKK,KAAKC,aAAaC,MAC9C+P,KAAM,CACJ,CACE1H,KAAI,cACJO,QAASsH,GAEX,CACEI,SAAQ,WACR1H,QAAS5I,GAEX,CACEsQ,SAAQ,iBACR1H,QAASsH,GAEX,CACEI,SAAQ,UACR1H,QAAO,WAET,CACEP,KAAI,eACJO,QAAO,WAET,CACEP,KAAI,kBACJO,QAASnJ,EAAKK,KAAKC,aAAawQ,QAElC,CACElI,KAAI,gBACJO,QAAS5I,GAEX,CACEqI,KAAI,sBACJO,QAASsH,IAGVhO,OACCiK,EAASlI,OAAS,EACd,CACEoE,KAAI,WACJO,QAASuD,EAASqE,KAAT,OAEX,IAELtO,OAAO6N,MAtDlBtQ,KAAAgR,IA8DJZ,EAAIZ,aAAe,CACjBa,KAAI,KACJC,KAAM,GACN5D,SAAU,IAGZ0D,EAAIrC,UAAY,CACd1F,YAAa2F,IAAUE,OACvBmC,KAAMrC,IAAUE,OAChBoC,KAAMtC,IAAUiD,MAChBvE,SAAUsB,IAAUkD,QAAQlD,IAAUE,QACtC3N,MAAOyN,IAAUE,OAAOC,YAGXiC,MAEf,IAAMI,EAAY,mVCtEHW,IAZM,SAAA3R,GAA0B,IAAvBqJ,EAAuBrJ,EAAvBqJ,KAAMpB,EAAiBjI,EAAjBiI,KAAMmB,EAAWpJ,EAAXoJ,KAClC,OACEwI,EAAAzR,EAAAC,cAACyR,EAAA,KAAD,CAAM5K,UAAU,OAAO6K,GAAIzI,GACzBuI,EAAAzR,EAAAC,cAAA,QACEW,MAAOqI,EACPnC,UAAU,iBACV8K,wBAAyB,CAAEC,OAAQ/J,EAAKrD,IAAI,SAAAqN,GAAC,YAAUA,EAAEC,QAAQ,KAAM,MAAOX,KAAK,wFCe5EY,IApBQ,SAAAnS,GAAA,IAAEe,EAAFf,EAAEe,MAAO8H,EAAT7I,EAAS6I,YAAaE,EAAtB/I,EAAsB+I,IAAKD,EAA3B9I,EAA2B8I,MAA3B,OACrBsG,EAAAjP,EAAAC,cAAA,OAAK6G,UAAU,eACbmI,EAAAjP,EAAAC,cAAA,OAAK6G,UAAU,UACbmI,EAAAjP,EAAAC,cAAA,OAAK6G,UAAU,aACbmI,EAAAjP,EAAAC,cAAA,OAAK6G,UAAU,aACbmI,EAAAjP,EAAAC,cAAA,MAAI6G,UAAU,uCAAsCmI,EAAAjP,EAAAC,cAACgS,EAAA,KAAD,CAAMnL,UAAU,OAAO6K,GAAI/I,GAAOhI,IACtFqO,EAAAjP,EAAAC,cAAA,KAAG6G,UAAU,aAAc4B,GAC3BuG,EAAAjP,EAAAC,cAAA,SAEI0I,GAASA,EAAMlE,IAAI,SAACqE,EAAIwB,GAAL,OACjB2E,EAAAjP,EAAAC,cAACiS,EAAA,EAAD,CAAcpK,KAAMgB,EAAGhB,KAAMmB,KAAMH,EAAGG,KAAMC,KAAMJ,EAAGI,KAAMC,IAAKmB","file":"component---src-pages-index-js-758c1fb8d87cd121cdcb.js","sourcesContent":["import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\n\nconst Home = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery1 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n     render={data => (\n       <>\n         <Header showTitle={false} siteTitle={data.site.siteMetadata.title} />\n         {children}\n         <div>Footer</div>\n       </>\n     )}\n  />\n);\n\nexport default Home;","import { useEffect, useRef, useState } from 'react';\nimport * as AWS from 'aws-sdk';\nimport { withPrefix } from 'gatsby';\n\nconst useChatState = () => {\n\n  const [messageQueue, setMessageQueue] = useState([]);\n  const [dataSource, setDataSource] = useState([]);\n  const [isTyping, setTyping] = useState(false);\n  const [lexRuntime, setLexRuntime] = useState(null);\n  const [sessionAttributes, setSessionAttributes] = useState({});\n  const [userId] = useState(`pattybot-web${Date.now()}`);\n  const [typeTimer, setTypeTimer] = useState([]);\n  const [inputText, setInputText] = useState(null);\n\n  const dataSourceRef = useRef(dataSource);\n  dataSourceRef.current = dataSource;\n\n  const typeTimerRef = useRef(typeTimer);\n  typeTimerRef.current = typeTimer;\n\n  const processQueue = () => {\n    const [nextMessage, ...rest] = messageQueue;\n    if (nextMessage.position === 'left') {\n      if (isTyping) {\n        return;\n      }\n      setMessageQueue(rest);\n      setTyping(true);\n      const thisTimer = setTimeout(() => {\n        setDataSource([...dataSourceRef.current, nextMessage]);\n        setTyping(false);\n        clearTimeout(thisTimer);\n        setTypeTimer(typeTimerRef.current.filter(t => t !== thisTimer));\n      }, nextMessage.text ? nextMessage.text.length * 40 : 200);\n      setTypeTimer([...typeTimer, thisTimer]);\n    } else {\n      setMessageQueue(rest);\n      setTyping(false);\n      typeTimer.forEach(t => clearInterval(t));\n      setDataSource([...dataSource, nextMessage]);\n      setInputText(nextMessage.text);\n    }\n  };\n\n  const processSystemMessages = (msgList) => {\n    setMessageQueue([...messageQueue, ...msgList]);\n  }\n\n  const getSystemMessageFromText = text => ({\n    avatar: withPrefix('/img/patty_avatar_small.png'),\n    position: 'left',\n    title: 'Patty:',\n    type: 'text',\n    text,\n    date: new Date(),\n  });\n\n  const processInput = text => {\n    if (!text) {\n      return;\n    }\n    setMessageQueue([{\n      avatar: 'https://cdn.iconscout.com/icon/free/png-256/avatar-369-456321.png',\n      position: 'right',\n      title: 'You:',\n      type: 'text',\n      text\n    }]);\n\n  };\n\n  useEffect(() => {\n    processSystemMessages([\n      getSystemMessageFromText(`Hola! I'm Patty.`),\n      getSystemMessageFromText(`If you have questions about Andalusia, you've come to the right place.`),\n      getSystemMessageFromText(`You can ask me a question, or just do a search.`),\n      getSystemMessageFromText(`Just start typing in the box.`)\n    ]);\n\n    AWS.config.region = 'eu-west-1';\n    AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n      IdentityPoolId: 'eu-west-1:4dd4bbc0-1e62-4d33-bea9-386ed1873bbb',\n    });\n    setLexRuntime(new AWS.LexRuntime());\n\n  }, []);\n\n  useEffect(() => {\n    if (!inputText) {\n      return;\n    }\n    const params = {\n      botAlias: 'expatty',\n      botName: 'Expatty_A',\n      inputText,\n      userId,\n      sessionAttributes\n    };\n\n    lexRuntime.postText(params, (err, data) => {\n      if (err) {\n        console.error(err);\n      }\n      if (data) {\n        console.log(data);\n        setSessionAttributes(data.sessionAttributes);\n        const responseArray = data.message.startsWith('{') ? JSON.parse(data.message).messages.map(m => m.value) : [data.message];\n        processSystemMessages(responseArray.map(response => getSystemMessageFromText(response)));\n      }\n    });\n  }, [inputText]);\n\n  if (messageQueue.length) {\n    processQueue();\n  }\n\n  return {\n    dataSource,\n    processInput,\n    isTyping,\n    sessionAttributes\n  };\n\n};\n\nexport default useChatState;","import React, { useEffect, useRef, useState } from 'react'\nimport { MessageList } from 'react-chat-elements'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faComment } from '@fortawesome/free-solid-svg-icons'\nimport 'react-chat-elements/dist/main.css';\nimport useChatState from '../chat/use-chat-state'\nimport { Tooltip } from 'reactstrap'\n\nconst Chat = ({ onSearch, nbResults }) => {\n\n  const { dataSource, processInput, isTyping, sessionAttributes } = useChatState();\n  const [isSearchTipOpen, setSearchTipOpen] = useState(false);\n  const [isChatTipOpen, setChatTipOpen] = useState(false);\n\n  const inputEl = useRef(null);\n  const messageList = useRef(null);\n\n  const onKeyPress = (e) => {\n    if (e.shiftKey && e.charCode === 13) {\n      return true;\n    }\n    if (e.charCode === 13) {\n      onUserMessage();\n      e.preventDefault();\n      return false;\n    }\n  };\n\n  const handleSearch = () => {\n    inputEl.current.value && onSearch(inputEl.current.value);\n  }\n\n  const onUserMessage = () => {\n    processInput(inputEl.current.value);\n    inputEl.current.value = '';\n  }\n\n  useEffect(() => {\n    const node = document.querySelector('#is-typing');\n    if (node) {\n      node.remove();\n    }\n    if (isTyping) {\n      const existingNode = document.querySelector('#is-typing');\n      if (!existingNode) {\n        const newNode = document.createElement('div');\n        newNode.setAttribute('id', 'is-typing')\n        newNode.setAttribute('class', 'loading');\n        messageList.current.mlistRef.appendChild(newNode);\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (!sessionAttributes.searchTerms) {\n      return;\n    }\n    onSearch(sessionAttributes.searchTerms);\n  }, [sessionAttributes.searchTerms])\n\n  return (\n    <>\n      <div className=\"chat\">\n        <MessageList\n          ref={messageList}\n          className=\"message-list h-100\"\n          lockable={ true }\n          toBottomHeight=\"100%\"\n          dataSource={ dataSource }\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <div className=\"input-group mt-5\">\n          <input ref={ inputEl } onKeyPress={onKeyPress} type=\"text\" className=\"form-control\" placeholder=\"Do a search or ask Patty...\" aria-label=\"Do a search or ask Patty\" aria-describedby=\"basic-addon2\"/>\n            <div className=\"input-group-append\">\n              <button title=\"Just search\" onClick={ handleSearch } className=\"btn\" type=\"button\" id=\"searchBtn\"><FontAwesomeIcon icon={ faSearch } /></button>\n              <Tooltip delay={{show: 0, hide: 0}} placement=\"bottom\" isOpen={isSearchTipOpen} target=\"searchBtn\" toggle={() => setSearchTipOpen(!isSearchTipOpen)}>\n                Search only\n              </Tooltip>\n              <button title=\"Ask Patty\" onClick={onUserMessage} className=\"btn\" type=\"button\" id=\"chatBtn\"><FontAwesomeIcon icon={ faComment } /></button>\n              <Tooltip delay={{show: 0, hide: 0}} placement=\"bottom\" isOpen={isChatTipOpen} target=\"chatBtn\" toggle={() => setChatTipOpen(!isChatTipOpen)}>\n                Chat with Patty\n              </Tooltip>\n            </div>\n        </div>\n        {nbResults != null && <small className=\"form-text light-primary-colour\">{`${nbResults} ${nbResults !== 1 ? 'results' : 'result'} found (so far)`}</small>}\n      </div>\n    </>\n  );\n};\n\nexport default Chat;","import React from 'react';\nimport CategoryIcon from './category-icon'\n\nconst SearchResult = ({ title, description, icons, url }) => {\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col-md\">\n        <h1 className=\"title--header small\"><a className=\"link light\" href={ url }>{ title }</a></h1>\n        <p><small>{ description }</small></p>\n        <p>{\n          icons && icons.map((ic, iconIndex) => (\n            <CategoryIcon icon={ ic.icon } name={ ic.name } path={ ic.path } key={ iconIndex }/>\n          ))\n        }</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResult;","import React, { useEffect, useRef, useState } from 'react'\nimport * as algoliasearch from 'algoliasearch'\nimport ListingSummary from './listing-summary'\nimport { graphql, StaticQuery } from 'gatsby'\nimport CategoryIcon from './category-icon'\nimport SearchResult from './search-result'\n\nconst Search = ({ query, onResults }) => {\n\n  const [index, setIndex] = useState(null);\n  const [content, setContent] = useState({});\n  const [page, setPage] = useState(0);\n  const searchContainerRef = useRef(null);\n\n  useEffect(() => {\n    const client = algoliasearch('V2FZ8PQPU1', '53dfa38126e32c85b534b72c3830168d');\n    setIndex(client.initIndex('expatty'));\n  }, []);\n\n  useEffect(() => {\n    if (!index || !query) {\n      return;\n    }\n    index.search({ query, page, hitsPerPage: 10 }, (err, content) => {\n      if (err) {\n        console.error(err);\n      } else {\n        searchContainerRef.current.scrollTop = 0;\n        setContent(content);\n        onResults(content.nbHits);\n      }\n    });\n  }, [query, page]);\n\n  return (\n    <StaticQuery\n  query={graphql`\n      {\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n              edges {\n                  node {\n                      frontmatter {\n                          tag\n                          name\n                          icon\n                      }\n                      fields {\n                          slug\n                      }\n                  }\n              }\n          }\n        }\n    `}\n  render={\n    data => {\n      return (\n        <>\n          <div className=\"search\" ref={ searchContainerRef }>\n            {\n              content.hits && content.hits.map((h, idx) => {\n                const listingIcons = h.tags\n                  .map(tg => data.categories.edges.map(edge => edge.node).find(catNode => catNode.frontmatter.tag === tg))\n                  .filter(catNode => catNode)\n                  .map(catNode => ({\n                    icon: catNode.frontmatter.icon,\n                    name: catNode.frontmatter.name,\n                    path: catNode.fields.slug\n                  }));\n                return (\n                    <SearchResult key={ idx } description={ h.description } icons={ listingIcons } url={ h.url } title={ h.title }/>\n                );\n              })\n            }\n          </div>\n            {\n              (content.nbPages && content.nbPages > 1) ? <div className=\"search-pagination\">\n                <nav className=\"mt-5\" aria-label=\"Page navigation example\">\n                  <ul className=\"pagination justify-content-center\">\n                    {page > 0 && <li className=\"page-item\">\n                      <button className=\"page-link accent-colour\" aria-label=\"Previous\" onClick={() => setPage(Math.max(0, page - 1))}>\n                        <span aria-hidden=\"true\">&laquo;</span>\n                        <span className=\"sr-only\">Previous</span>\n                      </button>\n                    </li>}\n                    {\n                      new Array(content.nbPages)\n                        .fill(null)\n                        .map((link, idx) => (\n                          <li key={idx} className=\"page-item\">\n                            <button disabled={page === idx} className={`page-link${page === idx ? ' bold primary-colour' : ' accent-colour'}`} onClick={() => setPage(idx)}>{ idx + 1 }</button>\n                          </li>)\n                        )\n                    }\n                    { page < content.nbPages - 1 && <li className=\"page-item\">\n                      <button className=\"page-link accent-colour\" aria-label=\"Next\" onClick={() => setPage(Math.min(page + 1, content.nbPages - 1))}>\n                        <span aria-hidden=\"true\">&raquo;</span>\n                        <span className=\"sr-only\">Next</span>\n                      </button>\n                    </li>}\n                  </ul>\n                </nav>\n              </div> : undefined\n            }\n        </>\n    )\n    }}\n  />\n  )\n};\n\nexport default Search;","import React, { useState } from 'react'\nimport Chat from './chat';\nimport Search from './search'\n\nconst Hero = ({ title, slogan }) => {\n\n  const [query, setQuery] = useState(null);\n  const [nbResults, setNbResults] = useState(null);\n\n  return (<div className=\"container-fluid\">\n    <div className=\"row hero\">\n      <div className=\"col-lg-4 text-center\">\n        <div className=\"align-middle\">\n          <div className=\"row\">\n            <div className=\"col-xl-12 text-center mt-5\">\n              <h1 style={{ fontSize: '130px' }}>✈</h1>\n            </div>\n            <div className=\"col-xl-12\">\n              <h1 className=\"display-1 title--header hero\">{title}</h1>\n              <div className=\"lead\">{slogan}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-lg-4\">\n        <Chat onSearch={setQuery} nbResults={nbResults}/>\n      </div>\n      <div className=\"col-lg-4\">\n        <Search query={query} onResults={setNbResults}/>\n      </div>\n    </div>\n  </div>);\n\n}\n\nexport default Hero;","import React from 'react'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport Home from '../components/layouts/home'\nimport Hero from '../components/hero'\n\nconst IndexPage = (props) => {\n  const { title, slogan } = props.data.site.siteMetadata;\n  return (<Home>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <main>\n      <Hero title={title} slogan={slogan} />\n    </main>\n  </Home>)\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n    query SiteData {\n        site {\n            siteMetadata {\n                title\n                slogan\n            }\n        }\n    }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Collapse\n} from 'reactstrap';\n\nconst Header = ({siteTitle, showTitle}) => {\n\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <header>\n      <Navbar expand=\"md\" className=\"navbar-dark bg-transparent\">\n        { showTitle && <NavbarBrand href=\"/\"><h1 className=\"title--header brand\">{siteTitle}</h1></NavbarBrand> }\n        <NavbarToggler className=\"link light\" onClick={() => setOpen(!isOpen)} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/about/\">About</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst CategoryIcon = ({ path, icon, name }) => {\n  return (\n    <Link className=\"link\" to={path}>\n      <span\n        title={name}\n        className=\"tag-icons pr-2\"\n        dangerouslySetInnerHTML={{ __html: icon.map(i => `&#x${i.replace('U+', '')}`).join('') }}>\n      </span>\n    </Link>\n  )\n}\n\nexport default CategoryIcon","import React from 'react';\nimport { Link } from 'gatsby'\nimport CategoryIcon from './category-icon'\n\nconst ListingSummary = ({title, description, url, icons}) => (\n  <div className=\"row listing\">\n    <div className=\"col-md\">\n      <div className=\"card mb-3\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title title--header dark small\"><Link className=\"link\" to={url}>{ title }</Link></h5>\n          <p className=\"card-text\">{ description }</p>\n          <p>\n            {\n              icons && icons.map((ic, idx) => (\n                <CategoryIcon icon={ic.icon} name={ic.name} path={ic.path} key={idx}/>\n              ))\n            }\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default ListingSummary;"],"sourceRoot":""}