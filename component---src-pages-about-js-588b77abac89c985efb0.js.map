{"version":3,"sources":["webpack:///./src/components/layouts/standalone.js","webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/seo.js"],"names":["Standalone","_ref","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","Fragment","header","siteTitle","site","siteMetadata","title","_1948935994","About","standalone","seo","description","className","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","Header","_useState","useState","isOpen","setOpen","color","expand","href","onClick","defaultProps","SEO","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"gJAwBeA,EApBI,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,SAAF,OACjBC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CAAaC,MAAK,aASlBC,OAAQ,SAAAC,GAAI,OACVN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,UAAWH,EAAKI,KAAKC,aAAaC,QACzCb,EACDC,EAAAC,EAAAC,cAAA,uBAbJI,KAAAO,cCeaC,UAhBD,kBACZd,EAAAC,EAAAC,cAACa,EAAD,KACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAKJ,MAAK,QAAWK,YAAW,kBAChCjB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,mBACblB,EAAAC,EAAAC,cAAA,MAAIgB,UAAS,iBAAb,YACAlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,UACblB,EAAAC,EAAAC,cAAA,+ECZZiB,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAA/B,IAAAkB,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAE,EAAAd,EAAA,KAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAG,EAAAD,EAAA,iCAAAa,EAAAjC,IAAA,IAAAkC,EAAAhB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAc,EAAA,IAYA,IAAMX,EAAqBY,IAAMC,cAAc,IAEzCZ,EAAc,SAAAa,GAAK,OACvBX,EAAA1B,EAAAC,cAACsB,EAAmBe,SAApB,KACG,SAAAC,GACC,OACEF,EAAMhC,MACLkC,EAAgBF,EAAMlC,QAAUoC,EAAgBF,EAAMlC,OAAOE,MAEtDgC,EAAMjC,QAAUiC,EAAMvC,UAC5BuC,EAAMhC,KAAOgC,EAAMhC,KAAKA,KAAOkC,EAAgBF,EAAMlC,OAAOE,MAGvDqB,EAAA1B,EAAAC,cAAA,uCAaf,SAASqB,IACP,MAAM,IAAIkB,MACR,gVATJhB,EAAYiB,UAAY,CACtBpC,KAAMqC,IAAUC,OAChBxC,MAAOuC,IAAUE,OAAOC,WACxBzC,OAAQsC,IAAUI,KAClBhD,SAAU4C,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAvD,GAAkB,IAAfwD,EAAexD,EAAfwD,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOtB,IAAMlC,cAAcyD,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,8CCrBf,IAAAW,EAAA7C,EAAA,GAAA8C,EAAA9C,EAAAS,EAAAoC,GAAAE,EAAA/C,EAAA,GAAAgD,EAAAhD,EAAAS,EAAAsC,GAAAE,EAAAjD,EAAA,KAAAkD,EAAAlD,EAAA,KAAAmD,EAAAnD,EAAA,KASMoD,EAAS,SAAAzE,GAAiB,IAAfW,EAAeX,EAAfW,UAAe+D,EAEJC,oBAAS,GAA5BC,EAFuBF,EAAA,GAEfG,EAFeH,EAAA,GAI9B,OACEL,EAAAlE,EAAAC,cAAA,cACEiE,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAQQ,MAAM,OAAOC,OAAO,KAAK3D,UAAU,kBACzCiD,EAAAlE,EAAAC,cAACmE,EAAA,EAAD,CAAaS,KAAK,KAAIX,EAAAlE,EAAAC,cAAA,MAAIgB,UAAU,gBAAgBT,IACpD0D,EAAAlE,EAAAC,cAACoE,EAAA,EAAD,CAAeS,QAAS,kBAAMJ,GAASD,SAmC/CH,EAAO7B,UAAY,CACjBjC,UAAWkC,IAAUE,QAGvB0B,EAAOS,aAAe,CACpBvE,UAAS,IAGI8D,gHCvDf,SAASU,EAATnF,GAA2D,IAA5CmB,EAA4CnB,EAA5CmB,YAAaiE,EAA+BpF,EAA/BoF,KAAMC,EAAyBrF,EAAzBqF,KAAMC,EAAmBtF,EAAnBsF,SAAUxE,EAASd,EAATc,MAChD,OACEuD,EAAAlE,EAAAC,cAACmF,EAAA,YAAD,CACEjF,MAAOkF,EACPjF,OAAQ,SAAAC,GACN,IAAMiF,EACJtE,GAAeX,EAAKI,KAAKC,aAAaM,YACxC,OACEkD,EAAAlE,EAAAC,cAACsF,EAAAvF,EAAD,CACEwF,eAAgB,CACdP,QAEFtE,MAAOA,EACP8E,cAAa,QAAUpF,EAAKI,KAAKC,aAAaC,MAC9CuE,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAAShF,GAEX,CACEiF,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAStF,EAAKI,KAAKC,aAAamF,QAElC,CACEH,KAAI,gBACJC,QAAShF,GAEX,CACE+E,KAAI,sBACJC,QAASL,IAGVQ,OACCX,EAASY,OAAS,EACd,CACEL,KAAI,WACJC,QAASR,EAASa,KAAT,OAEX,IAELF,OAAOZ,MAtDlB7E,KAAA4F,IA8DJjB,EAAID,aAAe,CACjBE,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZH,EAAIvC,UAAY,CACdzB,YAAa0B,IAAUE,OACvBqC,KAAMvC,IAAUE,OAChBsC,KAAMxC,IAAUwD,MAChBf,SAAUzC,IAAUyD,QAAQzD,IAAUE,QACtCjC,MAAO+B,IAAUE,OAAOC,YAGXmC,MAEf,IAAMK,EAAY","file":"component---src-pages-about-js-588b77abac89c985efb0.js","sourcesContent":["import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\n\nconst Standalone = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery2 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n  render={data => (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      {children}\n      <div>Footer</div>\n    </>\n    )}\n  />\n);\n\nexport default Standalone;","import React from 'react';\nimport Standalone from '../components/layouts/standalone'\nimport SEO from '../components/seo'\n\nconst About = () => (\n  <Standalone>\n    <SEO title={`About`} description={`About Expatty`}/>\n    <main>\n      <div className=\"container-fluid\">\n        <h1 className={`title--header`}>About us</h1>\n        <div className=\"row\">\n          <div className=\"col-md\">\n            <p>This is the about us page.</p>\n          </div>\n        </div>\n      </div>\n    </main>\n  </Standalone>\n);\n\nexport default About;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler\n} from 'reactstrap';\n\n\nconst Header = ({siteTitle}) => {\n\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <header>\n      <Navbar color=\"dark\" expand=\"md\" className=\"bg-transparent\">\n        <NavbarBrand href=\"/\"><h1 className=\"title--brand\">{siteTitle}</h1></NavbarBrand>\n        <NavbarToggler onClick={() => setOpen(!isOpen)} />\n      </Navbar>\n    </header>\n  );\n};\n\n/*const Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)*/\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}