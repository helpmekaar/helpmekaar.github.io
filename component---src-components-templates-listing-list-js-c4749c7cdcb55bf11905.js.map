{"version":3,"sources":["webpack:///./src/components/listing-summary.js","webpack:///./src/components/templates/listing-list.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/category-icon.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/patty-working-at-desk.js","webpack:///./src/components/footer.js","webpack:///./src/components/layouts/standalone.js","webpack:///./src/components/seo.js"],"names":["ListingSummary","_ref","title","description","url","icons","react_default","a","createElement","className","gatsby_browser_entry","to","map","ic","idx","category_icon","icon","name","path","key","ListingList","data","_data$thisCategory$fr","thisCategory","frontmatter","type","tag","commonKeywords","site","siteMetadata","listings","edges","edge","node","allCategories","categories","standalone","seo","keywords","concat","filter","_ref2","tags","indexOf","i","listingIcons","tg","find","catNode","fields","slug","listing_summary","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","CategoryIcon","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","dangerouslySetInnerHTML","__html","replace","join","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","Header","siteTitle","showTitle","_useState","useState","isOpen","setOpen","expand","href","onClick","navbar","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","PattyWorkingAtDesk","gatsby_image_default","fixed","placeholderImage","childImageSharp","_1292776582","Footer","rel","patty_working_at_desk","moment","format","areas","action","method","id","target","noValidate","placeholder","required","style","position","left","aria-hidden","tabIndex","value","_3876790873","Standalone","react__WEBPACK_IMPORTED_MODULE_1___default","Fragment","_header__WEBPACK_IMPORTED_MODULE_2__","_footer__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_1948935994_json__WEBPACK_IMPORTED_MODULE_0__","SEO","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","length","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"sKAwBeA,EApBQ,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,MAAOC,EAATF,EAASE,YAAaC,EAAtBH,EAAsBG,IAAKC,EAA3BJ,EAA2BI,MAA3B,OACrBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uCAAsCH,EAAAC,EAAAC,cAACE,EAAA,KAAD,CAAMD,UAAU,OAAOE,GAAIP,GAAOF,IACtFI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAcN,GAC3BG,EAAAC,EAAAC,cAAA,SAEIH,GAASA,EAAMO,IAAI,SAACC,EAAIC,GAAL,OACjBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAcC,KAAMH,EAAGG,KAAMC,KAAMJ,EAAGI,KAAMC,KAAML,EAAGK,KAAMC,IAAKL,oDCuCjEM,UA/CK,SAAAnB,GAAc,IAAXoB,EAAWpB,EAAXoB,KAAWC,EACJD,EAAKE,aAAaC,YAAtCC,EADwBH,EACxBG,KAAMR,EADkBK,EAClBL,KAAMS,EADYJ,EACZI,IACZC,EAAmBN,EAAKO,KAAKC,aAA7BF,eACFG,EAAWT,EAAKS,SAASC,MAAMnB,IAAI,SAAAoB,GAAI,OAAIA,EAAKC,OAChDC,EAAgBb,EAAKc,WAAWJ,MAAMnB,IAAI,SAAAoB,GAAI,OAAIA,EAAKC,OAC7D,OACE3B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,KACE9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACEnC,MAAK,YAAwB,aAATuB,EAAsB,WAAa,SAAlD,MAA+DR,EACpEd,YAAW,iFAAoFc,EAC/FqB,SAAQ,CAAGrB,GAAHsB,OAAYZ,KACtBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAkBQ,GAE9Ba,EACGU,OAAO,SAAAC,GAAA,OAAAA,EAAGjB,YAA8BkB,KAAKC,QAAQjB,IAAQ,IAC7Dd,IAAI,SAACqB,EAAMW,GACV,IAAMC,EACJZ,EAAKT,YAAYkB,KACd9B,IAAI,SAAAkC,GAAE,OAAIZ,EAAca,KAAK,SAAAC,GAAO,OAAIA,EAAQxB,YAAYE,MAAQoB,MACpEN,OAAO,SAAAQ,GAAO,OAAIA,IAClBpC,IAAI,SAAAoC,GAAO,MAAK,CACfhC,KAAMgC,EAAQxB,YAAYR,KAC1BC,KAAM+B,EAAQxB,YAAYP,KAC1BC,KAAM8B,EAAQC,OAAOC,QAE3B,OACA5C,EAAAC,EAAAC,cAAC2C,EAAD,CACEhC,IAAMyB,EACNzC,YAAc8B,EAAKT,YAAYrB,YAC/BD,MAAQ+B,EAAKT,YAAYtB,MACzBE,IAAM6B,EAAKgB,OAAOC,KAClB7C,MAAQwC,YAnC9B,IAiDaO,EAAS,+CCvDtBC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAA3D,IAAA8C,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAE,EAAAd,EAAA,KAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAG,EAAAD,EAAA,iCAAAa,EAAA7D,IAAA,IAAA8D,EAAAhB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAc,EAAA,IAYA,IAAMX,EAAqBY,IAAMC,cAAc,IAEzCZ,EAAc,SAAAa,GAAK,OACvBX,EAAAtD,EAAAC,cAACkD,EAAmBe,SAApB,KACG,SAAAC,GACC,OACEF,EAAMnD,MACLqD,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAOtD,MAEtDmD,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMnD,KAAOmD,EAAMnD,KAAKA,KAAOqD,EAAgBF,EAAMG,OAAOtD,MAGvDwC,EAAAtD,EAAAC,cAAA,uCAaf,SAASiD,IACP,MAAM,IAAIqB,MACR,gVATJnB,EAAYoB,UAAY,CACtB1D,KAAM2D,IAAUC,OAChBN,MAAOK,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,8ECehCK,IAZM,SAAAzF,GAA0B,IAAvBiB,EAAuBjB,EAAvBiB,KAAMF,EAAiBf,EAAjBe,KAAMC,EAAWhB,EAAXgB,KAClC,OACE0E,EAAApF,EAAAC,cAACoF,EAAA,KAAD,CAAMnF,UAAU,OAAOE,GAAIO,GACzByE,EAAApF,EAAAC,cAAA,QACEN,MAAOe,EACPR,UAAU,iBACVoF,wBAAyB,CAAEC,OAAQ9E,EAAKJ,IAAI,SAAAgC,GAAC,YAAUA,EAAEmD,QAAQ,KAAM,MAAOC,KAAK,2CCT3F,IAAApC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAqC,EAAA5C,EAAA,KAAA6C,EAAA7C,EAAA,KAAA8C,EAAA9C,EAAA,KAAA+C,EAAA/C,EAAA,KAAAgD,EAAAhD,EAAA,KAAAiD,EAAAjD,EAAA,KAAAkD,EAAAlD,EAAA,KAsCemD,IA3BA,SAAAvG,GAA4B,IAA1BwG,EAA0BxG,EAA1BwG,UAAWC,EAAezG,EAAfyG,UAAeC,EAEfC,oBAAS,GAA5BC,EAFkCF,EAAA,GAE1BG,EAF0BH,EAAA,GAIzC,OACE9C,EAAAtD,EAAAC,cAAA,cACEqD,EAAAtD,EAAAC,cAACyF,EAAA,EAAD,CAAQc,OAAO,KAAKtG,UAAU,8BAC1BiG,GAAa7C,EAAAtD,EAAAC,cAAC0F,EAAA,EAAD,CAAac,KAAK,KAAInD,EAAAtD,EAAAC,cAAA,MAAIC,UAAU,uBAAwBgG,IAC3E5C,EAAAtD,EAAAC,cAAC2F,EAAA,EAAD,CAAe1F,UAAU,aAAawG,QAAS,kBAAMH,GAASD,MAC9DhD,EAAAtD,EAAAC,cAAC4F,EAAA,EAAD,CAAUS,OAAQA,EAAQK,QAAM,GAC9BrD,EAAAtD,EAAAC,cAAC6F,EAAA,EAAD,CAAK5F,UAAU,UAAUyG,QAAM,GAC7BrD,EAAAtD,EAAAC,cAAC8F,EAAA,EAAD,KACEzC,EAAAtD,EAAAC,cAAC+F,EAAA,EAAD,CAAS9F,UAAU,aAAauG,KAAK,WAArC,UAEFnD,EAAAtD,EAAAC,cAAC8F,EAAA,EAAD,KACEzC,EAAAtD,EAAAC,cAAC+F,EAAA,EAAD,CAAS9F,UAAU,aAAauG,KAAK,UAArC,SAEFnD,EAAAtD,EAAAC,cAAC8F,EAAA,EAAD,KACEzC,EAAAtD,EAAAC,cAAC+F,EAAA,EAAD,CAAS9F,UAAU,aAAauG,KAAK,aAArC,sHCvBRG,EAAmB,SAAAlH,GAAkB,IAAfmH,EAAenH,EAAfmH,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOlD,IAAM9D,cAAciH,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBpC,UAAY,CAC3BqC,SAAUpC,IAAU6C,MAAM,CACxBL,SAAUxC,IAAUE,OAAOC,aAC1BA,YAGUgC,i6TCWAW,EAjBY,kBACzBxH,EAAAC,EAAAC,cAACE,EAAA,YAAD,CACEiE,MAAK,aAWLC,OAAQ,SAAAvD,GAAI,OAAIf,EAAAC,EAAAC,cAACuH,EAAAxH,EAAD,CAAKyH,MAAO3G,EAAK4G,iBAAiBC,gBAAgBF,SAZpE3G,KAAA8G,cCmGaC,IA7GA,WACb,OACE9H,EAAAC,EAAAC,cAACE,EAAA,YAAD,CACEiE,MAAK,aAsCLC,OAAQ,SAAAvD,GACN,OACEf,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oCAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BAA2BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAa4H,IAAI,SAChCrB,KAAK,KAAK3F,EAAKO,KAAKC,aAAa3B,QACxEI,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,aAAQa,EAAKO,KAAKC,aAAa1B,cAEjCG,EAAAC,EAAAC,cAAC8H,EAAD,MACAhI,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,UACDF,EAAAC,EAAAC,cAAA,mDAAgD+H,MAASC,OAAO,YAGpElI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2CAAd,SACAH,EAAAC,EAAAC,cAAA,UAEIa,EAAKoH,MAAM1G,MAAMnB,IAAI,SAAAX,EAAWa,GAAX,IAAGmB,EAAHhC,EAAGgC,KAAH,OACnB3B,EAAAC,EAAAC,cAAA,MAAIW,IAAKL,GAAKR,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAA9B,IAAyCH,EAAAC,EAAAC,cAAA,KAAGwG,KAAM/E,EAAKgB,OAAOC,KAAMzC,UAAU,QAAQwB,EAAKT,YAAYP,WAK/GX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2CAAd,cACAH,EAAAC,EAAAC,cAAA,UAEIa,EAAKc,WAAWJ,MAAMnB,IAAI,SAAA6B,EAAW3B,GAAX,IAAGmB,EAAHQ,EAAGR,KAAH,OACxB3B,EAAAC,EAAAC,cAAA,MAAIW,IAAKL,GACPR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAcG,KAAMe,EAAKgB,OAAOC,KAAMjC,KAAMgB,EAAKT,YAAYP,KAC/CD,KAAMiB,EAAKT,YAAYR,OAAOV,EAAAC,EAAAC,cAAA,KAAGwG,KAAM/E,EAAKgB,OAAOC,KAClBzC,UAAU,QADb,IACsBwB,EAAKT,YAAYP,WAM7FX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2CAAd,+BACAH,EAAAC,EAAAC,cAAA,QACEkI,OAAO,+FACPC,OAAO,OAAOC,GAAG,6BAA6B3H,KAAK,6BAA6BR,UAAU,WAC1FoI,OAAO,SAASC,YAAU,GAC1BxI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,QAAQR,KAAK,QAAQR,UAAU,eAAemI,GAAG,YACtDG,YAAY,gBAAgBC,UAAQ,KAE7C1I,EAAAC,EAAAC,cAAA,OAAKyI,MAAO,CAAEC,SAAW,WAAYC,KAAM,WAAYC,cAAY,QACjE9I,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OACLR,KAAK,yCACLoI,SAAS,QAElB/I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,UAAQiB,KAAK,SAAS6H,MAAM,YAAYrI,KAAK,YAAY2H,GAAG,wBACpDnI,UAAU,OADlB,mBA9FhBY,KAAAkI,+FCiBWC,IApBI,SAAAvJ,GAAA,IAAE4E,EAAF5E,EAAE4E,SAAF,OACjB4E,EAAAlJ,EAAAC,cAACoF,EAAA,YAAD,CAAajB,MAAK,aASlBC,OAAQ,SAAAvD,GAAI,OACVoI,EAAAlJ,EAAAC,cAAAiJ,EAAAlJ,EAAAmJ,SAAA,KACED,EAAAlJ,EAAAC,cAACmJ,EAAA,EAAD,CAAQjD,WAAW,EAAMD,UAAWpF,EAAKO,KAAKC,aAAa3B,QAC1D2E,EACD4E,EAAAlJ,EAAAC,cAACoJ,EAAA,EAAD,QAbJvI,KAAAwI,yLCDF,SAASC,EAAT7J,GAA2D,IAA5CE,EAA4CF,EAA5CE,YAAa4J,EAA+B9J,EAA/B8J,KAAMC,EAAyB/J,EAAzB+J,KAAM1H,EAAmBrC,EAAnBqC,SAAUpC,EAASD,EAATC,MAChD,OACEuJ,EAAAlJ,EAAAC,cAACyJ,EAAA,YAAD,CACEtF,MAAOuF,EACPtF,OAAQ,SAAAvD,GACN,IAAM8I,EACJhK,GAAekB,EAAKO,KAAKC,aAAa1B,YACxC,OACEsJ,EAAAlJ,EAAAC,cAAC4J,EAAA7J,EAAD,CACE8J,eAAgB,CACdN,QAEF7J,MAAOA,EACPoK,cAAa,QAAUjJ,EAAKO,KAAKC,aAAa3B,MAC9C8J,KAAM,CACJ,CACE/I,KAAI,cACJsJ,QAASJ,GAEX,CACEK,SAAQ,WACRD,QAASrK,GAEX,CACEsK,SAAQ,iBACRD,QAASJ,GAEX,CACEK,SAAQ,UACRD,QAAO,WAET,CACEtJ,KAAI,eACJsJ,QAAO,WAET,CACEtJ,KAAI,kBACJsJ,QAASlJ,EAAKO,KAAKC,aAAa4I,QAElC,CACExJ,KAAI,gBACJsJ,QAASrK,GAEX,CACEe,KAAI,sBACJsJ,QAASJ,IAGV5H,OACCD,EAASoI,OAAS,EACd,CACEzJ,KAAI,WACJsJ,QAASjI,EAAS0D,KAAT,OAEX,IAELzD,OAAOyH,MAtDlB3I,KAAAsJ,IA8DJb,EAAIc,aAAe,CACjBb,KAAI,KACJC,KAAM,GACN1H,SAAU,IAGZwH,EAAI/E,UAAY,CACd5E,YAAa6E,IAAUE,OACvB6E,KAAM/E,IAAUE,OAChB8E,KAAMhF,IAAU6F,MAChBvI,SAAU0C,IAAU8F,QAAQ9F,IAAUE,QACtChF,MAAO8E,IAAUE,OAAOC,YAGX2E,MAEf,IAAMI,EAAY","file":"component---src-components-templates-listing-list-js-c4749c7cdcb55bf11905.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby'\nimport CategoryIcon from './category-icon'\n\nconst ListingSummary = ({title, description, url, icons}) => (\n  <div className=\"row listing\">\n    <div className=\"col-md\">\n      <div className=\"card mb-3\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title title--header dark small\"><Link className=\"link\" to={url}>{ title }</Link></h5>\n          <p className=\"card-text\">{ description }</p>\n          <p>\n            {\n              icons && icons.map((ic, idx) => (\n                <CategoryIcon icon={ic.icon} name={ic.name} path={ic.path} key={idx}/>\n              ))\n            }\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default ListingSummary;","import React from 'react';\nimport Standalone from '../layouts/standalone';\nimport SEO from '../seo';\nimport ListingSummary from '../listing-summary';\nimport { graphql} from 'gatsby';\n\nconst ListingList = ({ data }) => {\n  const { type, name, tag } = data.thisCategory.frontmatter;\n  const { commonKeywords } = data.site.siteMetadata;\n  const listings = data.listings.edges.map(edge => edge.node);\n  const allCategories = data.categories.edges.map(edge => edge.node);\n  return (\n    <Standalone>\n      <SEO\n        title={ `Expatty ${ type === 'category' ? 'category' : 'areas'} | ${name}` }\n        description={ `Attractions, events, businesses and services in Andalusia, Spain, related to: ${name}` }\n        keywords={[name, ...commonKeywords]}/>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md\">\n            <main>\n              <h1 className=\"title--header\">{ name }</h1>\n              {\n                listings\n                  .filter(({ frontmatter }) => frontmatter.tags.indexOf(tag) >= 0)\n                  .map((node, i) => {\n                    const listingIcons =\n                      node.frontmatter.tags\n                        .map(tg => allCategories.find(catNode => catNode.frontmatter.tag === tg))\n                        .filter(catNode => catNode)\n                        .map(catNode => ({\n                          icon: catNode.frontmatter.icon,\n                          name: catNode.frontmatter.name,\n                          path: catNode.fields.slug\n                        }));\n                    return (\n                    <ListingSummary\n                      key={ i }\n                      description={ node.frontmatter.description }\n                      title={ node.frontmatter.title }\n                      url={ node.fields.slug }\n                      icons={ listingIcons }/>\n                  )\n                })\n              }\n            </main>\n          </div>\n        </div>\n      </div>\n    </Standalone>\n  );\n};\n\nexport default ListingList;\n\nexport const pageQuery = graphql`\n    query CategoryOrArea($type: String!, $name: String!) {\n        site {\n            siteMetadata {\n                commonKeywords\n            }\n        }\n        thisCategory: markdownRemark(frontmatter: { type: { eq: $type }, name: { eq: $name } }) {\n            frontmatter {\n                type\n                name\n                tag\n            }\n        }\n        listings: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"listing\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        description\n                        tags\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst CategoryIcon = ({ path, icon, name }) => {\n  return (\n    <Link className=\"link\" to={path}>\n      <span\n        title={name}\n        className=\"tag-icons pr-2\"\n        dangerouslySetInnerHTML={{ __html: icon.map(i => `&#x${i.replace('U+', '')}`).join('') }}>\n      </span>\n    </Link>\n  )\n}\n\nexport default CategoryIcon","import React, { useState } from 'react';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Collapse\n} from 'reactstrap';\n\nconst Header = ({siteTitle, showTitle}) => {\n\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <header>\n      <Navbar expand=\"md\" className=\"navbar-dark bg-transparent\">\n        { showTitle && <NavbarBrand href=\"/\"><h1 className=\"title--header brand\">{ siteTitle }</h1></NavbarBrand> }\n        <NavbarToggler className=\"link light\" onClick={() => setOpen(!isOpen)} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/about/\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/blog/\">Blog</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/contact/\">Contact us</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst PattyWorkingAtDesk = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"patty-working-at-desk.png\" }) {\n          childImageSharp {\n            fixed(width: 200) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fixed={data.placeholderImage.childImageSharp.fixed} />}\n  />\n);\n\nexport default PattyWorkingAtDesk;\n","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport moment from 'moment'\nimport PattyWorkingAtDesk from './patty-working-at-desk'\nimport CategoryIcon from './category-icon'\n\nconst Footer = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          site {\n              siteMetadata {\n                  title\n                  description\n              }\n          }\n          areas: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"area\"}}}) {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n                excerpt(pruneLength: 500, format: HTML)\n                frontmatter {\n                  name\n                  tag\n                }\n              }\n            }\n          }\n          categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        }\n      `}\n      render={data => {\n        return (\n          <footer className=\"container-fluid mt-5 pb-3 footer\">\n            <div className=\"row pt-5\">\n              <div className=\"col-lg mb-5 pr-5\">\n                <h2 className=\"title--header small mb-4\"><a className=\"link brand\" rel=\"author\"\n                                                       href=\"/\">{data.site.siteMetadata.title}</a></h2>\n                <p>\n                  <small>{data.site.siteMetadata.description}</small>\n                </p>\n                <PattyWorkingAtDesk/>\n                <p><em>\n                  <small>All rights reserved. &copy; expatty.com {moment().format('YYYY')}</small>\n                </em></p>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Areas</h2>\n                <ul>\n                  {\n                    data.areas.edges.map(({ node }, idx) => (\n                      <li key={idx}><span className=\"spacer\"/> <a href={node.fields.slug} className=\"link\">{node.frontmatter.name}</a></li>\n                    ))\n                  }\n                </ul>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Categories</h2>\n                <ul>\n                  {\n                    data.categories.edges.map(({ node }, idx) => (\n                      <li key={idx}>\n                        <CategoryIcon path={node.fields.slug} name={node.frontmatter.name}\n                                      icon={node.frontmatter.icon}/><a href={node.fields.slug}\n                                                                       className=\"link\"> {node.frontmatter.name}\n                      </a></li>\n                    ))\n                  }\n                </ul>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Subscribe to our newsletter</h2>\n                <form\n                  action=\"https://expatty.us7.list-manage.com/subscribe/post?u=a6b6c49a554f762c8c4c8d495&amp;id=1eef58f2b5\"\n                  method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" className=\"validate\"\n                  target=\"_blank\" noValidate>\n                  <div className=\"form-group\">\n                    <input type=\"email\" name=\"EMAIL\" className=\"form-control\" id=\"mce-EMAIL\"\n                           placeholder=\"email address\" required/>\n                  </div>\n                  <div style={{ position : 'absolute', left: '-5000px'}} aria-hidden=\"true\">\n                    <input type=\"text\"\n                           name=\"b_a6b6c49a554f762c8c4c8d495_1eef58f2b5\"\n                           tabIndex=\"-1\"/>\n                  </div>\n                  <div className=\"clear\">\n                    <button type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\"\n                            className=\"btn\">Subscribe\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </footer>\n        )\n      }}/>\n  )\n}\n\nexport default Footer","import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\n\nconst Standalone = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery2 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n  render={data => (\n    <>\n      <Header showTitle={true} siteTitle={data.site.siteMetadata.title} />\n      {children}\n      <Footer />\n    </>\n    )}\n  />\n);\n\nexport default Standalone;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}