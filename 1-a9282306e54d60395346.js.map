{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/seo.js","webpack:///./src/components/chat-field.js","webpack:///./src/components/patty-bot-channels.js","webpack:///./src/chat/use-chat-state.js","webpack:///./src/components/chat.js","webpack:///./src/components/search-result.js","webpack:///./src/components/search.js","webpack:///./src/components/top-things.js","webpack:///./src/components/how-to-list.js","webpack:///./src/components/patty-bot.js","webpack:///./src/components/fixed-chat.js","webpack:///./src/components/footer.js","webpack:///./src/components/category-icon.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/areas.js","webpack:///./src/components/categories.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","Header","_ref","siteTitle","showTitle","hideFacebook","_useState","useState","isOpen","setOpen","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_13__","categories","edges","map","edge","node","areas","reactstrap__WEBPACK_IMPORTED_MODULE_3__","expand","className","reactstrap__WEBPACK_IMPORTED_MODULE_4__","href","reactstrap__WEBPACK_IMPORTED_MODULE_5__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_6__","navbar","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","nav","inNavbar","reactstrap__WEBPACK_IMPORTED_MODULE_11__","caret","reactstrap__WEBPACK_IMPORTED_MODULE_12__","right","area","i","reactstrap_es_DropdownItem__WEBPACK_IMPORTED_MODULE_14__","key","fields","slug","frontmatter","name","cat","target","title","rel","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_15__","icon","faFacebook","react_facebook__WEBPACK_IMPORTED_MODULE_17__","appId","colorScheme","showFaces","share","_public_static_d_1496510596_json__WEBPACK_IMPORTED_MODULE_1__","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","ChatField","onInput","inputValue","setInputValue","onUserMessage","msg","react_default","InputGroup","Input","onKeyPress","e","shiftKey","charCode","value","preventDefault","onChange","autoFocus","placeholder","InputGroupAddon","addonType","Button","index_es","faSearch","PattyBotChannels","activeTab","setActiveTab","newSearch","newChat","Nav","tabs","NavItem","Badge","NavLink","classnames","active","faThList","useChatState","windowGlobal","window","messageQueue","setMessageQueue","sessionStorage","getItem","JSON","parse","dataSource","setDataSource","_useState2","isTyping","setTyping","_ref2","sessionAttributes","setSessionAttributes","userId","Date","now","_useState4","typeTimer","setTypeTimer","_useState5","inputText","setInputText","_useState6","newChatCount","setNewChatCount","dataSourceRef","useRef","current","typeTimerRef","processSystemMessages","msgList","count","getSystemMessageFromText","text","avatar","withPrefix","position","type","date","useEffect","Cookies","get","set","axios","post","then","_ref3","setItem","stringify","responseArray","message","startsWith","messages","m","response","console","error","nextMessage","rest","slice","thisTimer","setTimeout","clearTimeout","filter","t","forEach","clearInterval","processQueue","processInput","Chat","userInput","onSearchResults","updateCount","setScrollToBottom","_useChatState","messageList","document","querySelector","remove","newNode","setAttribute","mlistRef","appendChild","searchResults","results","main","ref","lockable","toBottomHeight","SearchResult","icons","url","ic","iconIndex","category_icon","path","Search","searchContainerRef","scrollTop","gatsby_browser_entry","Fragment","h","idx","listingIcons","tags","tg","find","catNode","tag","search_result","Jumbotron","_2696684912","TopThings","topThings","topLists","top","_950903051","HowToList","howtos","how","_1827578978","PattyBot","close","setSearchResults","_useState3","setUserInput","setNewChat","setNewSearch","scrollToBottom","_useState7","scrollToTop","setScrollToTop","modalBody","scrollHeight","Modal","fade","ModalHeader","toggle","patty_bot_channels","tab","ModalBody","TabContent","TabPane","tabId","Row","Col","md","size","offset","chat","newCount","search","top_things","how_to_list","ModalFooter","chat_field","FixedChat","patty_bot","Container","fluid","Footer","moment","format","lib","width","showSocialContext","showMetaData","skin","_1955721241","CategoryIcon","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","dangerouslySetInnerHTML","__html","replace","module","exports","require","default","Areas","_public_static_d_4035855273_json__WEBPACK_IMPORTED_MODULE_1__","Categories","_category_icon__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_1824489638_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"1-a9282306e54d60395346.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React, { useState } from 'react';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Collapse, UncontrolledDropdown, DropdownToggle, DropdownMenu,\n} from 'reactstrap'\nimport { graphql, StaticQuery } from 'gatsby'\nimport DropdownItem from 'reactstrap/es/DropdownItem'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFacebook } from '@fortawesome/free-brands-svg-icons'\nimport { FacebookProvider, Like } from 'react-facebook'\n\nconst Header = ({siteTitle, showTitle, hideFacebook}) => {\n\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <StaticQuery  query={graphql`\n    {\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        topLists: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        howtos: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"howto\"}}}, sort: {fields: [frontmatter___title]}) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        areas: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"area\"}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n                frontmatter {\n                  name\n                  tag\n                }\n              }\n            }\n          }\n        }\n\n    `}\n      render={data => {\n        const categories = data.categories.edges.map(edge => edge.node);\n        const areas = data.areas.edges.map(edge => edge.node);\n\n        return (\n        <header>\n          <Navbar expand=\"lg\" className=\"navbar-dark bg-transparent\">\n            {showTitle && (\n              <NavbarBrand href=\"/\">\n                <h1 className=\"title--header brand\">{siteTitle}</h1>\n              </NavbarBrand>)}\n            <NavbarToggler className=\"link light\" onClick={() => setOpen(!isOpen)}/>\n            <Collapse isOpen={isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink className=\"link light\" href=\"/\">Tuis</NavLink>\n                </NavItem>\n\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret className=\"link light\">\n                    Areas\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {\n                      areas.map((area, i) => (\n                        <DropdownItem key={i} href={ area.fields.slug }>{ area.frontmatter.name }</DropdownItem>\n                      ))\n                    }\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret className=\"link light\">\n                    Kategorieë\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {\n                      categories.map((cat, i) => (\n                        <DropdownItem key={i} href={ cat.fields.slug }>{ cat.frontmatter.name }</DropdownItem>\n                      ))\n                    }\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n\n                <NavItem>\n                  <NavLink className=\"link light\" href=\"/contact/\">Kom op ons lys</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"link light\" href=\"https://facebook.com/groups/221643825770134\"\n                           target=\"_blank\" title=\"Our Facebook page\" rel=\"nofollow noopener noreferrer\"><FontAwesomeIcon icon={ faFacebook } /></NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n          {\n            showTitle && !hideFacebook && (\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-md facebook-wrapper\">\n                  <FacebookProvider appId=\"934192397029973\">\n                    <Like href=\"http://www.facebook.com/groups/221643825770134\" colorScheme=\"light\" showFaces share />\n                  </FacebookProvider>\n                </div>\n              </div>\n            </div>\n            )\n          }\n        </header>\n      );\n    }\n    }/>\n\n  );\n};\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport { Button, Input, InputGroup, InputGroupAddon } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nconst ChatField = ({ onInput }) => {\n\n  const [ inputValue, setInputValue ] = useState('');\n\n  const onKeyPress = (e) => {\n    if (e.shiftKey && e.charCode === 13) {\n      return true;\n    }\n    if (e.charCode === 13) {\n      onUserMessage(e.target.value);\n      e.preventDefault();\n      return false;\n    }\n  };\n\n  const onUserMessage = msg => {\n    if (!msg) {\n      return;\n    }\n    onInput(msg);\n    setInputValue('');\n  }\n\n  return (\n    <InputGroup>\n      <Input\n        onKeyPress={ onKeyPress }\n        value={ inputValue }\n        onChange={ e => setInputValue(e.target.value) }\n        autoFocus\n        placeholder=\"Soek in helpmekaar.org...\"\n      />\n      <InputGroupAddon addonType=\"append\">\n        <Button\n          title=\"Soek\"\n          onClick={ e => {e.preventDefault(); onUserMessage(inputValue) }}>\n          <FontAwesomeIcon icon={ faSearch } />\n        </Button>\n      </InputGroupAddon>\n    </InputGroup>\n  );\n};\n\nexport default ChatField;","import React from 'react'\nimport { Badge, Nav, NavItem, NavLink } from 'reactstrap'\nimport classnames from 'classnames'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { faThList } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst PattyBotChannels = ({ activeTab, setActiveTab, newChat, newSearch }) => {\n\n  return (\n    <Nav tabs>\n      <NavItem>\n        <div className=\"tab-container\">\n          { newSearch != null && newSearch !== 0 && <Badge className=\"notification-badge\"><small>{ newSearch }</small></Badge> }\n          <NavLink\n            className={classnames({ active: activeTab === '2' })}\n            onClick={() => { setActiveTab('2'); }}\n          >\n            <strong><FontAwesomeIcon icon={ faSearch } /> Soek</strong>\n          </NavLink>\n        </div>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          className={classnames({ active: activeTab === '3' })}\n          onClick={() => { setActiveTab('3'); }}\n        >\n          <strong><FontAwesomeIcon icon={ faThList } /> Inhoud</strong>\n        </NavLink>\n      </NavItem>\n    </Nav>\n  );\n};\n\nexport default PattyBotChannels;","import { useEffect, useRef, useState } from 'react';\nimport { withPrefix } from 'gatsby';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst useChatState = () => {\n\n  const windowGlobal = typeof window !== 'undefined' && window;\n  const sessionStorageChatKey = 'expatty-chat';\n  const sessionStorageSearchKey = 'expatty-search';\n  const [messageQueue, setMessageQueue] = useState([]);\n  const [dataSource, setDataSource] = windowGlobal && useState(windowGlobal.sessionStorage.getItem(sessionStorageChatKey)\n    ? JSON.parse(windowGlobal.sessionStorage.getItem(sessionStorageChatKey))\n    : []);\n  const [isTyping, setTyping] = useState(false);\n  const [sessionAttributes, setSessionAttributes] = windowGlobal && useState(windowGlobal.sessionStorage.getItem(sessionStorageSearchKey)\n    ? JSON.parse(windowGlobal.sessionStorage.getItem(sessionStorageSearchKey))\n    : {});\n  const [userId] = useState(`pattybot-web${Date.now()}`);\n  const [typeTimer, setTypeTimer] = useState([]);\n  const [inputText, setInputText] = useState(null);\n  const [newChatCount, setNewChatCount] = useState(null);\n\n  const dataSourceRef = useRef(dataSource);\n  dataSourceRef.current = dataSource;\n\n  const typeTimerRef = useRef(typeTimer);\n  typeTimerRef.current = typeTimer;\n\n  const processQueue = () => {\n    const [nextMessage, ...rest] = messageQueue;\n    if (nextMessage.position === 'left') {\n      if (isTyping) {\n        return;\n      }\n      setMessageQueue(rest);\n      setTyping(true);\n      const thisTimer = setTimeout(() => {\n        setDataSource([...dataSourceRef.current, nextMessage]);\n        windowGlobal && windowGlobal.sessionStorage.setItem(sessionStorageChatKey, JSON.stringify(dataSourceRef.current));\n        setTyping(false);\n        clearTimeout(thisTimer);\n        setTypeTimer(typeTimerRef.current.filter(t => t !== thisTimer));\n      }, nextMessage.text ? nextMessage.text.length * 5 : 200);\n      setTypeTimer([...typeTimer, thisTimer]);\n    } else {\n      setMessageQueue(rest);\n      setTyping(false);\n      typeTimer.forEach(t => clearInterval(t));\n      setDataSource([...dataSource, nextMessage]);\n      windowGlobal && windowGlobal.sessionStorage.setItem(sessionStorageChatKey, JSON.stringify(dataSourceRef.current));\n      setInputText(nextMessage.text);\n    }\n  };\n\n  const processSystemMessages = (msgList) => {\n    setMessageQueue([...messageQueue, ...msgList]);\n    setNewChatCount({\n      count: msgList.length\n    });\n  }\n\n  const getSystemMessageFromText = text => ({\n    avatar: withPrefix('/img/patty_avatar_small.png'),\n    position: 'left',\n    title: 'Patty:',\n    type: 'text',\n    text,\n    date: new Date(),\n  });\n\n  const processInput = text => {\n    if (!text) {\n      return;\n    }\n    setMessageQueue([{\n      avatar: 'img/you-avatar.png',\n      position: 'right',\n      title: 'You:',\n      type: 'text',\n      text\n    }]);\n\n  };\n\n  useEffect(() => {\n    if (!windowGlobal) {\n      return;\n    }\n    if (!windowGlobal.sessionStorage.getItem(sessionStorageChatKey)) {\n      if (Cookies.get('expatty-visited')) {\n        processSystemMessages([\n          getSystemMessageFromText(`Oh, you're back! Anything I can help you with?`)\n        ]);\n      } else {\n        processSystemMessages([\n          getSystemMessageFromText(`Hola! I'm Patty.`),\n          getSystemMessageFromText(`If you have questions about Andalusia, you've come to the right place.`),\n          getSystemMessageFromText(`You can ask me a question, or just do a search.`),\n          getSystemMessageFromText(`Just start typing in the box.`)\n        ]);\n      }\n      Cookies.set('expatty-visited', true);\n    }\n\n  }, []);\n\n  useEffect(() => {\n    if (!inputText) {\n      return;\n    }\n    axios.post('https://o1f9xnry71.execute-api.eu-west-1.amazonaws.com/prod/expattyChat', {\n      inputText,\n      userId,\n      sessionAttributes: {}\n    }).then(({ data }) => {\n      setSessionAttributes(data.sessionAttributes);\n      windowGlobal && windowGlobal.sessionStorage.setItem(sessionStorageSearchKey, JSON.stringify(data.sessionAttributes));\n      const responseArray = data.message.startsWith('{') ? JSON.parse(data.message).messages.map(m => m.value) : [data.message];\n      processSystemMessages(responseArray.map(response => getSystemMessageFromText(response)));\n    }, console.error);\n  }, [inputText]);\n\n  if (messageQueue.length) {\n    processQueue();\n  }\n\n  return {\n    dataSource,\n    processInput,\n    isTyping,\n    newChatCount,\n    sessionAttributes: sessionAttributes || {}\n  };\n\n};\n\nexport default useChatState;","import React, { useEffect, useRef } from 'react'\nimport { MessageList } from 'react-chat-elements'\nimport 'react-chat-elements/dist/main.css';\nimport useChatState from '../chat/use-chat-state'\n\nconst Chat = ({ userInput, onSearchResults, updateCount, setScrollToBottom }) => {\n\n  const { dataSource, processInput, isTyping, sessionAttributes, newChatCount } = useChatState();\n\n  const messageList = useRef(null);\n\n  useEffect(() => {\n    const node = document.querySelector('#is-typing');\n    if (node) {\n      node.remove();\n    }\n    if (isTyping) {\n      setScrollToBottom(true);\n      const existingNode = document.querySelector('#is-typing');\n      if (!existingNode) {\n        const newNode = document.createElement('div');\n        newNode.setAttribute('id', 'is-typing')\n        newNode.setAttribute('class', 'loading');\n        messageList.current.mlistRef.appendChild(newNode);\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (!sessionAttributes.searchResults) {\n      return;\n    }\n    onSearchResults(sessionAttributes.searchResults.results);\n    setScrollToBottom(true);\n  }, [sessionAttributes.searchResults])\n\n  useEffect(() => {\n    if (!userInput) {\n      return;\n    }\n    processInput(userInput);\n  }, [ userInput ]);\n\n  useEffect(() => {\n    if (!newChatCount) {\n      return;\n    }\n    updateCount(newChatCount.count);\n  }, [ newChatCount ]);\n\n  return (\n    <div className=\"chat\">\n      <MessageList\n        ref={messageList}\n        className=\"message-list h-100\"\n        lockable={ true }\n        toBottomHeight=\"100%\"\n        dataSource={ dataSource }\n      />\n    </div>\n  );\n};\n\nexport default Chat;","import React from 'react';\nimport CategoryIcon from './category-icon'\n\nconst SearchResult = ({ title, description, icons, url }) => {\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col-md\">\n        <h1 className=\"title--header small\"><a className=\"link\" href={ url } target=\"_blank\" rel=\"noopener noreferrer\">{ title }</a></h1>\n        <p><small>{ description }</small></p>\n        <p>{\n          icons && icons.map((ic, iconIndex) => (\n            <CategoryIcon icon={ ic.icon } name={ ic.name } path={ ic.path } key={ iconIndex }/>\n          ))\n        }</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResult;","import React, { useEffect, useRef } from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport SearchResult from './search-result'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport Jumbotron from 'reactstrap/es/Jumbotron'\n\nconst Search = ({ results }) => {\n\n  const searchContainerRef = useRef(null);\n\n  useEffect(() => {\n    searchContainerRef.current.scrollTop = 0;\n  }, [results]);\n\n  return (\n    <StaticQuery\n  query={graphql`\n      {\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n              edges {\n                  node {\n                      frontmatter {\n                          tag\n                          name\n                          icon\n                      }\n                      fields {\n                          slug\n                      }\n                  }\n              }\n          }\n        }\n    `}\n  render={\n    data => {\n      return (\n        <>\n          <div className=\"search\" ref={ searchContainerRef }>\n            {\n              results.length ? results.map((h, idx) => {\n                const listingIcons = h.tags ? h.tags\n                  .map(tg => data.categories.edges.map(edge => edge.node).find(catNode => catNode.frontmatter.tag === tg))\n                  .filter(catNode => catNode)\n                  .map(catNode => ({\n                    icon: catNode.frontmatter.icon,\n                    name: catNode.frontmatter.name,\n                    path: catNode.fields.slug\n                  })) : [];\n                return (\n                    <SearchResult key={ idx } description={ h.description } icons={ listingIcons } url={ h.url } title={ h.title }/>\n                );\n              }) : (\n                <div className=\"row text-center align-items-center h-100\">\n                  <div className=\"col-md\">\n                    <Jumbotron className=\"bg-transparent\">\n                      <FontAwesomeIcon className=\"display-1\" icon={ faSearch } />\n                    </Jumbotron>\n                  </div>\n                </div>\n              )\n            }\n          </div>\n        </>\n    )\n    }}\n  />\n  )\n};\n\nexport default Search;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport classnames from 'classnames'\n\nconst TopThings = ({ className }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n      {\n        topLists: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n      }\n      `}\n      render={data => {\n        const topThings = data.topLists.edges.map(edge => edge.node);\n        return (\n          <div className={classnames('content-list', className)}>\n            <h2 className=\"title--header small primary-colour mb-3\">Top things to do</h2>\n            <ul>\n              {\n                topThings.map((top, idx) => (\n                  <li key={idx}><span className=\"spacer\"/> <a href={top.fields.slug} className=\"link\"> {top.frontmatter.name}</a></li>\n                ))\n              }\n            </ul>\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nexport default TopThings;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport classnames from 'classnames'\n\nconst HowToList = ({ className }) => {\n  return (\n    <StaticQuery query={graphql`\n    {\n        howtos: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"howto\"}}}, , sort: {fields: [frontmatter___title]}) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        description\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n    `}\n     render={data => {\n       const howtos = data.howtos.edges.map(edge => edge.node);\n       return (\n         <div className={classnames('content-list', className)}>\n           <h2 className=\"title--header small primary-colour mb-3\">How to's</h2>\n           <ul>\n             {\n               howtos.map((how, idx) => (\n                 <li key={idx}><span className=\"spacer\"/> <a href={how.fields.slug} className=\"link\"> {how.frontmatter.title}</a></li>\n               ))\n             }\n           </ul>\n         </div>\n       );\n     }}\n    />\n  );\n};\n\nexport default HowToList;","import React, { useEffect, useState } from 'react'\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Row, TabContent, TabPane, Col } from 'reactstrap'\nimport ChatField from './chat-field'\nimport PattyBotChannels from './patty-bot-channels'\nimport Chat from './chat'\nimport Search from './search'\nimport Areas from './areas'\nimport Categories from './categories'\nimport TopThings from './top-things'\nimport HowToList from './how-to-list'\n\nconst PattyBot = ({ close }) => {\n\n  const [ activeTab, setActiveTab ] = useState('2');\n  const [ searchResults, setSearchResults ] = useState([]);\n  const [ userInput, setUserInput ] = useState(null);\n  const [ newChat, setNewChat ] = useState(null);\n  const [ newSearch, setNewSearch ] = useState(null);\n  const [ scrollToBottom, setScrollToBottom ] = useState(false);\n  const [ scrollToTop, setScrollToTop ] = useState(false);\n\n  const windowGlobal = typeof window !== 'undefined' && window;\n\n  const resetNotificationCountAndActiveTab = tab => {\n    if(tab === '2') {\n      setNewSearch(0);\n      setScrollToTop(true);\n    } else if(tab === '3') {\n      setScrollToTop(true);\n    }\n    setActiveTab(tab);\n  };\n\n  const updateChatCount = newCount => {\n    if (activeTab === '1') {\n      return;\n    }\n    setNewChat(newChat + newCount);\n  };\n\n  useEffect(() => {\n    if (!scrollToTop) {\n      return;\n    }\n    if (activeTab === '2') {\n      if (windowGlobal) {\n        windowGlobal.document.querySelector('.modal-body').scrollTop = 0;\n      }\n      setScrollToTop(false);\n    }\n  });\n\n  useEffect(() => {\n    if (!searchResults) {\n      return;\n    }\n    if (activeTab === '2') {\n      return;\n    }\n    setNewSearch(newSearch + searchResults.length);\n  }, [ searchResults ]);\n\n  useEffect(() => {\n    if (!scrollToBottom) {\n      return;\n    }\n    if (activeTab === '1') {\n      if (windowGlobal) {\n        const modalBody = windowGlobal.document.querySelector('.modal-body');\n        modalBody.scrollTop = modalBody.scrollHeight + 150;\n      }\n      setScrollToBottom(false);\n    }\n  });\n\n  return (\n    <Modal isOpen={ true } className=\"patty-bot\" fade={ false } autoFocus={ false }>\n      <ModalHeader className=\"pb-0\" toggle={ () => close() }>\n        <PattyBotChannels\n          activeTab={ activeTab }\n          setActiveTab={ resetNotificationCountAndActiveTab }\n          newChat={ newChat }\n          newSearch={ newSearch } />\n      </ModalHeader>\n      <ModalBody>\n        <TabContent activeTab={ activeTab }>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col md={{ size: 6, offset: 3}}>\n                <Chat\n                  onSearchResults={ setSearchResults }\n                  userInput={ userInput }\n                  updateCount={ updateChatCount }\n                  setScrollToBottom={ setScrollToBottom }\n                />\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col md={{ size: 6, offset: 3}}>\n                <Search results={ searchResults }/>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"3\">\n            <Row>\n              <Col md=\"3\">\n                <TopThings className=\"pb-5\"/>\n              </Col>\n              <Col md=\"3\">\n                <HowToList className=\"pb-5\"/>\n              </Col>\n              <Col md=\"3\">\n                <Areas className=\"pb-5\"/>\n              </Col>\n              <Col md=\"3\">\n                <Categories className=\"pb-5\"/>\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </ModalBody>\n      <ModalFooter className=\"search-shadow-bottom\">\n        <ChatField onInput={ setUserInput } />\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default PattyBot;","import React, { useState } from 'react'\nimport { Container, Row, Col, InputGroup, InputGroupAddon, Button } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport PattyBot from './patty-bot'\n\nconst FixedChat = () => {\n\n  const [ isOpen, setOpen ] = useState(false);\n\n  return (\n    <>\n      { isOpen && <PattyBot close={() => setOpen(false)} /> }\n      <Container fluid={ true } className=\"fixed-search p-3 m-0 bg-white search-shadow\">\n        <Row>\n          <Col>\n            <InputGroup>\n              <div className=\"form-control pointer\" onClick={ (e) => {e.preventDefault(); setOpen(true)} }>Soek in helpmekaar.org...</div>\n              <InputGroupAddon addonType=\"append\">\n                <Button title=\"Soek\" onClick={ (e) => {e.preventDefault(); setOpen(true)} }><FontAwesomeIcon icon={ faSearch } /></Button>\n              </InputGroupAddon>\n            </InputGroup>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default FixedChat;","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport moment from 'moment'\nimport PattyWorkingAtDesk from './patty-working-at-desk'\nimport Areas from './areas'\nimport Categories from './categories'\nimport { FacebookProvider, Group } from 'react-facebook'\n\nconst Footer = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          site {\n              siteMetadata {\n                  title\n                  description\n              }\n          }\n        }\n      `}\n      render={data => {\n        return (\n          <footer className=\"container-fluid mt-5 pb-5 footer\">\n            <div className=\"row pt-5\">\n              <div className=\"col-lg mb-5 pr-5\">\n                <h2 className=\"title--header small mb-4\"><a className=\"link brand\" rel=\"author\"\n                                                       href=\"/\">{data.site.siteMetadata.title}</a></h2>\n                <p>\n                  <small>{data.site.siteMetadata.description}</small>\n                </p>\n                <p><em>\n                  <small>Alle regte voorbehou. &copy; helpmekaar.org {moment().format('YYYY')}</small>\n                </em></p>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <Areas />\n              </div>\n              <div className=\"col-lg mb-5\">\n                <Categories />\n              </div>\n              <div className=\"col-lg mb-5\">\n\n                <FacebookProvider appId=\"934192397029973\">\n                  <Group\n                    href=\"https://www.facebook.com/groups/221643825770134\"\n                    width=\"280\"\n                    showSocialContext={true}\n                    showMetaData={true}\n                    skin=\"dark\"\n                  />\n                </FacebookProvider>\n              </div>\n            </div>\n          </footer>\n        )\n      }}/>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst CategoryIcon = ({ path, icon, name }) => {\n  return (\n    <Link className=\"link\" to={path}>\n      <span\n        title={name}\n        className=\"tag-icons pr-2\"\n        dangerouslySetInnerHTML={{ __html: icon.map(i => `&#x${i.replace('U+', '')}`).join('') }}>\n      </span>\n    </Link>\n  )\n}\n\nexport default CategoryIcon","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport classnames from 'classnames'\n\nconst Areas = ({ className }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n      {\n      areas: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"area\"}}}, sort: {fields: [frontmatter___name]}) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              frontmatter {\n                name\n                tag\n              }\n            }\n          }\n        }\n      }\n      `\n      }\n      render={data => {\n        const areas = data.areas.edges.map(edge => edge.node);\n        return (<div className={classnames('content-list', className)}>\n          <h2 className=\"title--header small primary-colour mb-3\">Areas</h2>\n          <ul>\n            {\n              areas.map((area, idx) => (\n                <li key={idx}><span className=\"spacer\"/> <a href={area.fields.slug} className=\"link\">{area.frontmatter.name}</a></li>\n              ))\n            }\n          </ul>\n        </div>);\n      }}\n    />\n  );\n};\n\nexport default Areas;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport CategoryIcon from './category-icon'\nimport classnames from 'classnames'\n\nconst Categories = ({ className }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n      {\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}, sort: {fields: [frontmatter___name]}) {\n              edges {\n                  node {\n                      frontmatter {\n                          tag\n                          name\n                          icon\n                      }\n                      fields {\n                          slug\n                      }\n                  }\n              }\n          }\n        }\n      `}\n      render={data => {\n        const categories = data.categories.edges.map(edge => edge.node);\n        return (\n          <div className={classnames('content-list', className)}>\n            <h2 className=\"title--header small primary-colour mb-3\">Kategorieë</h2>\n            <ul>\n              {\n                categories.map((cat, idx) => (\n                  <li key={idx}>\n                    <CategoryIcon path={cat.fields.slug} name={cat.frontmatter.name}\n                                  icon={cat.frontmatter.icon}/><a href={cat.fields.slug}\n                                                                   className=\"link\"> {cat.frontmatter.name}\n                  </a></li>\n                ))\n              }\n            </ul>\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nexport default Categories;","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}