{"version":3,"sources":["webpack:///./src/components/layouts/home.js","webpack:///./src/components/patty-thumbs-up.js","webpack:///./src/components/patty-thumbs-up-small.js","webpack:///./src/components/hero.js","webpack:///./src/components/picks.js","webpack:///./src/components/blog-list.js","webpack:///./src/pages/index.js","webpack:///./src/components/pick.js","webpack:///./src/components/blog-summary.js"],"names":["Home","_ref","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","Fragment","header","showTitle","siteTitle","site","siteMetadata","title","footer","fixed_chat","_2559738656","PattyThumbsUp","gatsby_image_default","fixed","placeholderImage","childImageSharp","_1302177638","PattyThumbsUpSmall","_353391793","Hero","Container","fluid","className","Row","Col","md","size","order","patty_thumbs_up","patty_thumbs_up_small","Picks","picks","edges","map","edge","node","idx","listingIcons","frontmatter","tags","tg","categories","find","catNode","tag","filter","icon","name","path","fields","slug","pick","key","url","icons","description","content","html","image","_922999384","BlogList","now","moment","bloglist","isAfter","date","_ref2","blog_summary","excerpt","author","_3199158587","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","props","_props$data$site$site","commonKeywords","home","seo","keywords","hero","blog_list","Pick","react__WEBPACK_IMPORTED_MODULE_2___default","href","src","replace","alt","dangerouslySetInnerHTML","__html","ic","_category_icon__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","BlogSummary","dateTime","itemProp","format","itemScope","itemType"],"mappings":"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","file":"component---src-pages-index-js-66aafd2d681eef890632.js","sourcesContent":["import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\nimport FixedChat from '../fixed-chat'\n\nconst Home = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery1 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n     render={data => (\n       <>\n         <Header showTitle={ true } siteTitle={data.site.siteMetadata.title} />\n         {children}\n         <Footer />\n         <FixedChat />\n       </>\n     )}\n  />\n);\n\nexport default Home;","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst PattyThumbsUp = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"patty-thumbs-up.png\" }) {\n          childImageSharp {\n            fixed(width: 500) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fixed={data.placeholderImage.childImageSharp.fixed} />}\n  />\n);\n\nexport default PattyThumbsUp;\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst PattyThumbsUpSmall = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"patty-thumbs-up.png\" }) {\n          childImageSharp {\n            fixed(width: 100) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fixed={data.placeholderImage.childImageSharp.fixed} />}\n  />\n);\n\nexport default PattyThumbsUpSmall;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap'\nimport PattyThumbsUp from './patty-thumbs-up'\nimport PattyThumbsUpSmall from './patty-thumbs-up-small'\n\nconst Hero = () => {\n\n  return (\n    <Container fluid={ true } className=\"hero\">\n      <Row className=\"h-100 align-items-center\">\n        <Col md={{ size: 4, order: 1}} className=\"d-none d-sm-block h-100 text-center\">\n          <PattyThumbsUp />\n        </Col>\n        <Col md={{ size: 4, order: 1}} className=\"d-sm-block d-md-none h-50 text-center\">\n          <PattyThumbsUpSmall />\n        </Col>\n        <Col md={{ size: 3, order: 2}} className=\"h-50 mx-auto text-center animated fadeIn\">\n          <h1 className=\"title--header slogan\">Your personal expert assistant in Andalusia</h1>\n        </Col>\n      </Row>\n    </Container>\n);\n}\n\nexport default Hero;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport Pick from './pick'\n\nconst Picks = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n    {\n      categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n      picks: allMarkdownRemark(filter: {frontmatter: {pick: {eq: true}}}) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n              image\n              tags\n            }\n            html\n          }\n        }\n      }\n    }\n    `}\n      render={data => {\n\n        return (\n          <div className=\"container-fluid\">\n            <div className=\"row mt-5 pb-5 picks\">\n              <div className=\"col-md\">\n                <div className=\"row\">\n                  <div className=\"col-md\">\n                    <h2 className=\"title--header small\">Patty's Picks</h2>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"card-columns\">\n                      {\n                        data.picks.edges.map(edge => edge.node).map((node, idx) => {\n                          const listingIcons = node.frontmatter.tags\n                              .map(tg => data.categories.edges.map(edge => edge.node).find(catNode => catNode.frontmatter.tag === tg))\n                              .filter(catNode => catNode)\n                              .map(catNode => ({\n                                icon: catNode.frontmatter.icon,\n                                name: catNode.frontmatter.name,\n                                path: catNode.fields.slug\n                              }));\n                          return (\n                            <Pick\n                              key={ idx }\n                              title={ node.frontmatter.title }\n                              url={ node.fields.slug }\n                              icons={ listingIcons }\n                              description={ node.frontmatter.description }\n                              content={ node.html }\n                              image={ node.frontmatter.image }/>\n                          );\n                        })\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n};\n\nexport default Picks;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport BlogSummary from './blog-summary'\nimport moment from 'moment';\n\nconst BlogList = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n      {\n        bloglist: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC},\n            filter: {frontmatter: {type: {eq: \"blog\"}}}, limit: 10) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              excerpt(pruneLength: 500, format: HTML)\n              frontmatter {\n                title\n                image\n                date\n                author\n              }\n            }\n          }\n        }\n      }\n      `}\n      render={data => {\n        const now = moment();\n        return (\n          <div className=\"container-fluid blog\">\n            <h2 className=\"title--header small\">Patty's Blog</h2>\n            {\n              data.bloglist.edges.filter(({ node }) => now.isAfter(node.frontmatter.date)).map(({ node }, idx) => (\n                <BlogSummary\n                  key={ idx }\n                  excerpt={ node.excerpt }\n                  image={ node.frontmatter.image }\n                  url={ node.fields.slug }\n                  title={ node.frontmatter.title }\n                  author={ node.frontmatter.author }\n                  date={ node.frontmatter.date }/>\n              ))\n            }\n          </div>\n        );\n      }} />\n  );\n};\n\nexport default BlogList;","import React from 'react'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport Home from '../components/layouts/home'\nimport Hero from '../components/hero'\nimport Picks from '../components/picks'\nimport BlogList from '../components/blog-list'\n\nconst IndexPage = (props) => {\n  const { commonKeywords, description } = props.data.site.siteMetadata;\n  return (<Home>\n    <SEO title=\"Home\" keywords={ commonKeywords } description={ description } />\n    <main>\n      <Hero />\n      <Picks />\n      <BlogList />\n    </main>\n  </Home>)\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n    query SiteData {\n        site {\n            siteMetadata {\n                description\n                commonKeywords\n            }\n        }\n    }\n`","import React from 'react';\nimport CategoryIcon from './category-icon'\n\nconst Pick = ({ title, description, image, url, icons, content }) => {\n  return (\n    <div className=\"card\">\n      {image && (\n        <a href={ url }>\n          <img src={ image.replace('x400', 'x800') } alt={ title } className=\"card-img-top\" />\n        </a>)\n        }\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">\n          <a className=\"link\" href={ url }>\n            { title }\n          </a>\n        </h3>\n        <div className=\"card-text dark-colour\" dangerouslySetInnerHTML={{__html: content}} />\n        <p>\n          {\n            icons && icons.map((ic, idx) => (\n              <CategoryIcon icon={ic.icon} name={ic.name} path={ic.path} key={idx}/>\n            ))\n          }\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Pick;","import React from 'react'\nimport moment from 'moment'\n\nconst BlogSummary = ({ title, excerpt, image, url, author, date }) => (\n  <a className=\"link light\" href={url}>\n    <div className=\"card bg-transparent mb-5\">\n      {image && <img src={image} alt={title} className=\"card-img-top\"/>}\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{title}</h4>\n        <p><small>\n            <time className=\"light-primary-colour pt-2\" dateTime={moment(date)} itemProp=\"datePublished\">\n              {moment(date).format('dddd, D MMMM YYYY')}\n            </time>\n            <span itemProp=\"author\" itemScope itemType=\"http://schema.org/Person\">  • <span\n              className=\"light-primary-colour\" itemProp=\"name\">{author}</span>\n                      </span>\n          </small>\n        </p>\n        <div className=\"card-text primary-text-colour\" dangerouslySetInnerHTML={{ __html: excerpt }}/>\n      </div>\n    </div>\n  </a>\n);\n\nexport default BlogSummary;"],"sourceRoot":""}