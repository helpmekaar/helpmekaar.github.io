{"version":3,"sources":["webpack:///./src/components/our-story.js","webpack:///./src/pages/our-story.js","webpack:///./src/components/layouts/standalone.js","webpack:///./src/components/seo.js"],"names":["OurStoryPicture","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fixed","placeholderImage","childImageSharp","_4163959492","OurStory","standalone","seo","title","description","className","our_story","Standalone","_ref","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","_header__WEBPACK_IMPORTED_MODULE_2__","showTitle","siteTitle","site","siteMetadata","_footer__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_1948935994_json__WEBPACK_IMPORTED_MODULE_0__","SEO","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"qLAgCeA,EAjBS,kBACtBC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAWLC,OAAQ,SAAAC,GAAI,OAAIN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAKO,MAAOF,EAAKG,iBAAiBC,gBAAgBF,SAZpEF,KAAAK,KCmBaC,UA9BE,kBACfZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAKC,MAAK,sBAAyBC,YAAW,kBAC9ChB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKe,UAAU,mBACbjB,EAAAC,EAAAC,cAAA,MAAIe,UAAS,iBAAb,aACAjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,0BACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,wBACbjB,EAAAC,EAAAC,cAACgB,EAAD,OAEFlB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,YACbjB,EAAAC,EAAAC,cAAA,sgBAMAF,EAAAC,EAAAC,cAAA,2VAIAF,EAAAC,EAAAC,cAAA,8OCDGiB,IApBI,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,SAAF,OACjBC,EAAArB,EAAAC,cAACqB,EAAA,YAAD,CAAanB,MAAK,aASlBC,OAAQ,SAAAC,GAAI,OACVgB,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAuB,SAAA,KACEF,EAAArB,EAAAC,cAACuB,EAAA,EAAD,CAAQC,WAAW,EAAMC,UAAWrB,EAAKsB,KAAKC,aAAad,QAC1DM,EACDC,EAAArB,EAAAC,cAAC4B,EAAA,EAAD,QAbJxB,KAAAyB,yLCDF,SAASC,EAATZ,GAA2D,IAA5CJ,EAA4CI,EAA5CJ,YAAaiB,EAA+Bb,EAA/Ba,KAAMC,EAAyBd,EAAzBc,KAAMC,EAAmBf,EAAnBe,SAAUpB,EAASK,EAATL,MAChD,OACEO,EAAArB,EAAAC,cAACkC,EAAA,YAAD,CACEhC,MAAOiC,EACPhC,OAAQ,SAAAC,GACN,IAAMgC,EACJtB,GAAeV,EAAKsB,KAAKC,aAAab,YACxC,OACEM,EAAArB,EAAAC,cAACqC,EAAAtC,EAAD,CACEuC,eAAgB,CACdP,QAEFlB,MAAOA,EACP0B,cAAa,QAAUnC,EAAKsB,KAAKC,aAAad,MAC9CmB,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAAS5B,GAEX,CACE6B,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASrC,EAAKsB,KAAKC,aAAagB,QAElC,CACEH,KAAI,gBACJC,QAAS5B,GAEX,CACE2B,KAAI,sBACJC,QAASL,IAGVQ,OACCX,EAASY,OAAS,EACd,CACEL,KAAI,WACJC,QAASR,EAASa,KAAT,OAEX,IAELF,OAAOZ,MAtDlB5B,KAAA2C,IA8DJjB,EAAIkB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZH,EAAImB,UAAY,CACdnC,YAAaoC,IAAUC,OACvBpB,KAAMmB,IAAUC,OAChBnB,KAAMkB,IAAUE,MAChBnB,SAAUiB,IAAUG,QAAQH,IAAUC,QACtCtC,MAAOqC,IAAUC,OAAOG,YAGXxB,MAEf,IAAMK,EAAY","file":"component---src-pages-our-story-js-f2e0f576e2e9c5d61ab4.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst OurStoryPicture = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"patty-duckface.png\" }) {\n          childImageSharp {\n            fixed(width: 200) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fixed={data.placeholderImage.childImageSharp.fixed} />}\n  />\n);\n\nexport default OurStoryPicture;\n","import React from 'react';\nimport Standalone from '../components/layouts/standalone'\nimport SEO from '../components/seo'\nimport OurStoryPicture from '../components/our-story'\n\nconst OurStory = () => (\n  <Standalone>\n    <SEO title={`Expatty | Our story`} description={`About Expatty`}/>\n    <main>\n      <div className=\"container-fluid\">\n        <h1 className={`title--header`}>Our story</h1>\n        <div className=\"row align-items-center\">\n          <div className=\"col-md-3 text-center\">\n            <OurStoryPicture />\n          </div>\n          <div className=\"col-md-6\">\n            <p>Less than a year ago our family moved to Spain after living in the UK for 10 years. We are originally\n              from South Africa but have lived in a few countries over the last 15 years. We became fascinated by the\n              idea of helping other new and existing expats to discover their new home and what it has to offer through a\n              website that has all the information they need presented in an easy way. We have enough experience through\n            living in 5 different countries to know what a wonderful friend the Internet can be.</p>\n\n            <p>We have a vision of creating an online assistant who can answer all your questions about every facet of expat\n            life in a factually correct and informed way. This is the idea that helped us invent Patty, the personal expert\n              who becomes more and more knowledgeable about Andalusia and Spain every day as you feed her with your questions.</p>\n\n            <p>We have sympathy with people living far from their familiar home countries, family and friends. We try to make it easier for you.</p>\n\n          </div>\n        </div>\n      </div>\n    </main>\n  </Standalone>\n);\n\nexport default OurStory;","import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\n\nconst Standalone = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery2 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n  render={data => (\n    <>\n      <Header showTitle={true} siteTitle={data.site.siteMetadata.title} />\n      {children}\n      <Footer />\n    </>\n    )}\n  />\n);\n\nexport default Standalone;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}