{"version":3,"sources":["webpack:///./src/components/layouts/home.js","webpack:///./src/chat/use-chat-state.js","webpack:///./src/components/chat.js","webpack:///./src/components/search-result.js","webpack:///./src/components/search.js","webpack:///./src/components/logo.js","webpack:///./src/components/hero.js","webpack:///./src/components/picks.js","webpack:///./src/components/blog-list.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/category-icon.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/patty-working-at-desk.js","webpack:///./src/components/footer.js","webpack:///./src/components/seo.js","webpack:///./src/components/pick.js","webpack:///./src/components/blog-summary.js"],"names":["Home","_ref","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","Fragment","header","showTitle","siteTitle","site","siteMetadata","title","footer","_2559738656","useChatState","_useState","useState","messageQueue","setMessageQueue","_useState2","dataSource","setDataSource","_useState3","isTyping","setTyping","_useState4","sessionAttributes","setSessionAttributes","userId","Date","now","_useState6","typeTimer","setTypeTimer","_useState7","inputText","setInputText","dataSourceRef","useRef","current","typeTimerRef","processSystemMessages","msgList","concat","getSystemMessageFromText","text","avatar","withPrefix","position","type","date","useEffect","axios","post","then","responseArray","message","startsWith","JSON","parse","messages","map","m","value","response","console","error","length","nextMessage","rest","slice","thisTimer","setTimeout","clearTimeout","filter","t","forEach","clearInterval","processQueue","processInput","Chat","onSearchResults","_useChatState","isChatTipOpen","setChatTipOpen","numberOfResults","setNumberofResults","inputEl","messageList","onUserMessage","node","document","querySelector","remove","newNode","setAttribute","mlistRef","appendChild","searchResults","results","number","className","main","ref","lockable","toBottomHeight","onKeyPress","e","shiftKey","charCode","preventDefault","placeholder","aria-label","aria-describedby","onClick","id","index_es","icon","faComment","Tooltip","delay","show","hide","placement","isOpen","target","toggle","SearchResult","description","icons","url","href","rel","ic","iconIndex","category_icon","name","path","key","Search","searchContainerRef","scrollTop","h","idx","listingIcons","tags","tg","categories","edges","edge","find","catNode","frontmatter","tag","fields","slug","search_result","_2696684912","Logo","gatsby_image_default","fixed","placeholderImage","childImageSharp","_3744433833","Hero","setResults","nbResults","logo","chat","search","Picks","picks","pick","content","html","image","_922999384","BlogList","moment","bloglist","isAfter","_ref2","blog_summary","excerpt","author","_3199158587","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","props","_props$data$site$site","commonKeywords","home","seo","keywords","hero","blog_list","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","Error","propTypes","PropTypes","object","string","isRequired","func","module","exports","require","default","CategoryIcon","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","dangerouslySetInnerHTML","__html","i","replace","join","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","Header","setOpen","expand","navbar","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","PattyWorkingAtDesk","_1292776582","Footer","patty_working_at_desk","format","areas","action","method","noValidate","required","style","left","aria-hidden","tabIndex","_2824076944","SEO","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","property","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Pick","src","alt","_category_icon__WEBPACK_IMPORTED_MODULE_3__","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","BlogSummary","dateTime","itemProp","itemScope","itemType"],"mappings":"mKAyBeA,EApBF,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,SAAF,OACXC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CAAaC,MAAK,aASfC,OAAQ,SAAAC,GAAI,OACVN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,WAAW,EAAOC,UAAWJ,EAAKK,KAAKC,aAAaC,QAC3Dd,EACDC,EAAAC,EAAAC,cAACY,EAAA,EAAD,QAbPR,KAAAS,wECuGaC,EAzGM,WAAM,IAAAC,EAEeC,mBAAS,IAA1CC,EAFkBF,EAAA,GAEJG,EAFIH,EAAA,GAAAI,EAGWH,mBAAS,IAAtCI,EAHkBD,EAAA,GAGNE,EAHMF,EAAA,GAAAG,EAIKN,oBAAS,GAAhCO,EAJkBD,EAAA,GAIRE,EAJQF,EAAA,GAAAG,EAKyBT,mBAAS,IAApDU,EALkBD,EAAA,GAKCE,EALDF,EAAA,GAMlBG,EAAUZ,mBAAQ,eAAgBa,KAAKC,OANrB,GAAAC,EAOSf,mBAAS,IAApCgB,EAPkBD,EAAA,GAOPE,EAPOF,EAAA,GAAAG,EAQSlB,mBAAS,MAApCmB,EARkBD,EAAA,GAQPE,EAROF,EAAA,GAUnBG,EAAgBC,iBAAOlB,GAC7BiB,EAAcE,QAAUnB,EAExB,IAAMoB,EAAeF,iBAAON,GAC5BQ,EAAaD,QAAUP,EAEvB,IAwBMS,EAAwB,SAACC,GAC7BxB,EAAe,GAAAyB,OAAK1B,EAAiByB,KAGjCE,EAA2B,SAAAC,GAAI,MAAK,CACxCC,OAAQC,qBAAW,+BACnBC,SAAU,OACVrC,MAAO,SACPsC,KAAM,OACNJ,OACAK,KAAM,IAAIrB,OA8CZ,OA7BAsB,oBAAU,WACRV,EAAsB,CACpBG,EAAwB,oBACxBA,EAAwB,0EACxBA,EAAwB,mDACxBA,EAAwB,oCAGzB,IAEHO,oBAAU,WACHhB,GAGLiB,IAAMC,KAAK,0EAA2E,CACpFlB,YACAP,SACAF,kBAAmB,KAClB4B,KAAK,SAAA1D,GAAc,IAAXQ,EAAWR,EAAXQ,KACTuB,EAAqBvB,EAAKsB,mBAC1B,IAAM6B,EAAgBnD,EAAKoD,QAAQC,WAAW,KAAOC,KAAKC,MAAMvD,EAAKoD,SAASI,SAASC,IAAI,SAAAC,GAAC,OAAIA,EAAEC,QAAS,CAAC3D,EAAKoD,SACjHf,EAAsBc,EAAcM,IAAI,SAAAG,GAAQ,OAAIpB,EAAyBoB,OAC5EC,QAAQC,QACV,CAAC/B,IAEAlB,EAAakD,QA5EI,WAAM,IAClBC,EAAwBnD,EADN,GACFoD,EAAQpD,EADNqD,MAAA,GAEzB,GAA6B,SAAzBF,EAAYpB,SAAqB,CACnC,GAAIzB,EACF,OAEFL,EAAgBmD,GAChB7C,GAAU,GACV,IAAM+C,EAAYC,WAAW,WAC3BnD,EAAa,GAAAsB,OAAKN,EAAcE,QAAnB,CAA4B6B,KACzC5C,GAAU,GACViD,aAAaF,GACbtC,EAAaO,EAAaD,QAAQmC,OAAO,SAAAC,GAAC,OAAIA,IAAMJ,MACnDH,EAAYvB,KAAiC,GAA1BuB,EAAYvB,KAAKsB,OAAc,KACrDlC,EAAY,GAAAU,OAAKX,EAAL,CAAgBuC,UAE5BrD,EAAgBmD,GAChB7C,GAAU,GACVQ,EAAU4C,QAAQ,SAAAD,GAAC,OAAIE,cAAcF,KACrCtD,EAAa,GAAAsB,OAAKvB,EAAL,CAAiBgD,KAC9BhC,EAAagC,EAAYvB,MAyD3BiC,GAGK,CACL1D,aACA2D,aA7CmB,SAAAlC,GACdA,GAGL3B,EAAgB,CAAC,CACf4B,OAAQ,qBACRE,SAAU,QACVrC,MAAO,OACPsC,KAAM,OACNJ,WAqCFtB,WACAG,+BClBWsD,EA9EF,SAAApF,GAAyB,IAAtBqF,EAAsBrF,EAAtBqF,gBAAsBC,EAE8BpE,IAA1DM,EAF4B8D,EAE5B9D,WAAY2D,EAFgBG,EAEhBH,aAAcxD,EAFE2D,EAEF3D,SAAUG,EAFRwD,EAEQxD,kBAFRX,EAGIC,oBAAS,GAA1CmE,EAH6BpE,EAAA,GAGdqE,EAHcrE,EAAA,GAAAI,EAIUH,mBAAS,GAAhDqE,EAJ6BlE,EAAA,GAIZmE,EAJYnE,EAAA,GAM9BoE,EAAUjD,iBAAO,MACjBkD,EAAclD,iBAAO,MAarBmD,EAAgB,WACpBV,EAAaQ,EAAQhD,QAAQwB,OAC7BwB,EAAQhD,QAAQwB,MAAQ,IA4B1B,OAzBAZ,oBAAU,WACR,IAAMuC,EAAOC,SAASC,cAAc,cAIpC,GAHIF,GACFA,EAAKG,SAEHtE,IACmBoE,SAASC,cAAc,cACzB,CACjB,IAAME,EAAUH,SAAS3F,cAAc,OACvC8F,EAAQC,aAAa,KAAM,aAC3BD,EAAQC,aAAa,QAAS,WAC9BP,EAAYjD,QAAQyD,SAASC,YAAYH,MAK/C3C,oBAAU,WACHzB,EAAkBwE,gBAIvBjB,EAAgBvD,EAAkBwE,cAAcC,SAChDb,EAAmB5D,EAAkBwE,cAAcE,UAClD,CAAC1E,EAAkBwE,gBAGpBpG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,QACbvG,EAAAC,EAAAC,cAACsG,EAAA,YAAD,CACEC,IAAKf,EACLa,UAAU,qBACVG,UAAW,EACXC,eAAe,OACfrF,WAAaA,KAIjBtB,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,cACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,oBACbvG,EAAAC,EAAAC,cAAA,SAAOuG,IAAMhB,EAAUmB,WAvDZ,SAACC,GAClB,SAAIA,EAAEC,UAA2B,KAAfD,EAAEE,YAGD,KAAfF,EAAEE,UACJpB,IACAkB,EAAEG,kBACK,QAHT,IAmDqD7D,KAAK,OAAOoD,UAAU,eAAeU,YAAY,8BAA8BC,aAAW,2BAA2BC,mBAAiB,iBACnLnH,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,sBACbvG,EAAAC,EAAAC,cAAA,UAAQW,MAAM,YAAYuG,QAASzB,EAAeY,UAAU,MAAMpD,KAAK,SAASkE,GAAG,WAAUrH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAiBC,KAAOC,OACrHxH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAASC,MAAO,CAACC,KAAM,EAAGC,KAAM,GAAIC,UAAU,SAASC,OAAQzC,EAAe0C,OAAO,UAAUC,OAAQ,kBAAM1C,GAAgBD,KAA7H,qBAKJE,EAAkB,GAAKvF,EAAAC,EAAAC,cAAA,SAAOqG,UAAU,kCAAsChB,EAAvD,KAAgG,IAApBA,EAAwB,UAAY,UAAhH,uDC7DlB0C,EAhBM,SAAAnI,GAAwC,IAArCe,EAAqCf,EAArCe,MAAOqH,EAA8BpI,EAA9BoI,YAAaC,EAAiBrI,EAAjBqI,MAAOC,EAAUtI,EAAVsI,IACjD,OACEpI,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,YACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,UACbvG,EAAAC,EAAAC,cAAA,MAAIqG,UAAU,uBAAsBvG,EAAAC,EAAAC,cAAA,KAAGqG,UAAU,aAAa8B,KAAOD,EAAML,OAAO,SAASO,IAAI,uBAAwBzH,IACvHb,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,aAASgI,IACZlI,EAAAC,EAAAC,cAAA,SACEiI,GAASA,EAAMpE,IAAI,SAACwE,EAAIC,GAAL,OACjBxI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAclB,KAAOgB,EAAGhB,KAAOmB,KAAOH,EAAGG,KAAOC,KAAOJ,EAAGI,KAAOC,IAAMJ,UC4DpEK,EAnEA,SAAA/I,GAAiB,IAAduG,EAAcvG,EAAduG,QAEVyC,EAAqBtG,iBAAO,MAMlC,OAJAa,oBAAU,WACRyF,EAAmBrG,QAAQsG,UAAY,GACtC,CAAC1C,IAGFrG,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACFC,MAAK,aAkBLC,OACE,SAAAC,GACE,OACEN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,SAASE,IAAMqC,GAE1BzC,EAAUA,EAAQtC,IAAI,SAACiF,EAAGC,GACxB,IAAMC,EAAeF,EAAEG,KAAOH,EAAEG,KAC7BpF,IAAI,SAAAqF,GAAE,OAAI9I,EAAK+I,WAAWC,MAAMvF,IAAI,SAAAwF,GAAI,OAAIA,EAAK3D,OAAM4D,KAAK,SAAAC,GAAO,OAAIA,EAAQC,YAAYC,MAAQP,MACnGxE,OAAO,SAAA6E,GAAO,OAAIA,IAClB1F,IAAI,SAAA0F,GAAO,MAAK,CACflC,KAAMkC,EAAQC,YAAYnC,KAC1BmB,KAAMe,EAAQC,YAAYhB,KAC1BC,KAAMc,EAAQG,OAAOC,QACjB,GACR,OACI7J,EAAAC,EAAAC,cAAC4J,EAAD,CAAclB,IAAMK,EAAMf,YAAcc,EAAEd,YAAcC,MAAQe,EAAed,IAAMY,EAAEZ,IAAMvH,MAAQmI,EAAEnI,UAG3Gb,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,4CACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,UACbvG,EAAAC,EAAAC,cAAA,MAAIqG,UAAU,4BAAd,yCACAvG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,kDACHF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,6CACHF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,mDACHF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,4BACHF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,wCA7CnBI,KAAAyJ,yCCmBWC,EAjBF,kBACXhK,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAWLC,OAAQ,SAAAC,GAAI,OAAIN,EAAAC,EAAAC,cAAC+J,EAAAhK,EAAD,CAAKiK,MAAO5J,EAAK6J,iBAAiBC,gBAAgBF,SAZpE5J,KAAA+J,KCmBaC,EA9BF,WAAM,IAAArJ,EAEaC,mBAAS,MAAhCmF,EAFUpF,EAAA,GAEDsJ,EAFCtJ,EAAA,GAGVuJ,EAAatJ,mBAAS,MAHZ,GAKjB,OAAQlB,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,mBACrBvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,YACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,wBACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,gBACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,OACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,yBACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,kBACbvG,EAAAC,EAAAC,cAACuK,EAAD,OAEFzK,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,QAAOvG,EAAAC,EAAAC,cAAA,+CAAsCF,EAAAC,EAAAC,cAAA,UAAQqG,UAAU,SAAlB,mBAKpEvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,YACbvG,EAAAC,EAAAC,cAACwK,EAAD,CAAMvF,gBAAkBoF,EAAaC,UAAYA,KAEnDxK,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,YACbvG,EAAAC,EAAAC,cAACyK,EAAD,CAAQtE,QAAUA,0BC6DXuE,EArFD,WACZ,OACE5K,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,YAkCLC,OAAQ,SAAAC,GAEN,OACEN,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,mBACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,uBACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,UACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,OACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,UACbvG,EAAAC,EAAAC,cAAA,MAAIqG,UAAU,uBAAd,mBAGJvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,OACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,aACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,gBAEXjG,EAAKuK,MAAMvB,MAAMvF,IAAI,SAAAwF,GAAI,OAAIA,EAAK3D,OAAM7B,IAAI,SAAC6B,EAAMqD,GACjD,IAAMC,EAAetD,EAAK8D,YAAYP,KACjCpF,IAAI,SAAAqF,GAAE,OAAI9I,EAAK+I,WAAWC,MAAMvF,IAAI,SAAAwF,GAAI,OAAIA,EAAK3D,OAAM4D,KAAK,SAAAC,GAAO,OAAIA,EAAQC,YAAYC,MAAQP,MACnGxE,OAAO,SAAA6E,GAAO,OAAIA,IAClB1F,IAAI,SAAA0F,GAAO,MAAK,CACflC,KAAMkC,EAAQC,YAAYnC,KAC1BmB,KAAMe,EAAQC,YAAYhB,KAC1BC,KAAMc,EAAQG,OAAOC,QAE3B,OACE7J,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CACElC,IAAMK,EACNpI,MAAQ+E,EAAK8D,YAAY7I,MACzBuH,IAAMxC,EAAKgE,OAAOC,KAClB1B,MAAQe,EACRhB,YAActC,EAAK8D,YAAYxB,YAC/B6C,QAAUnF,EAAKoF,KACfC,MAAQrF,EAAK8D,YAAYuB,iBAnEnD3K,KAAA4K,yCC8CWC,EA/CE,WACf,OACEnL,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAqBLC,OAAQ,SAAAC,GACN,IAAM0B,EAAMoJ,MACZ,OACEpL,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,wBACbvG,EAAAC,EAAAC,cAAA,MAAIqG,UAAU,uBAAd,gBAEEjG,EAAK+K,SAAS/B,MAAM1E,OAAO,SAAA9E,GAAA,IAAG8F,EAAH9F,EAAG8F,KAAH,OAAc5D,EAAIsJ,QAAQ1F,EAAK8D,YAAYtG,QAAOW,IAAI,SAAAwH,EAAWtC,GAAX,IAAGrD,EAAH2F,EAAG3F,KAAH,OAC/E5F,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CACE5C,IAAMK,EACNwC,QAAU7F,EAAK6F,QACfR,MAAQrF,EAAK8D,YAAYuB,MACzB7C,IAAMxC,EAAKgE,OAAOC,KAClBhJ,MAAQ+E,EAAK8D,YAAY7I,MACzB6K,OAAS9F,EAAK8D,YAAYgC,OAC1BtI,KAAOwC,EAAK8D,YAAYtG,WApCtC9C,KAAAqL,KCPJC,EAAAC,EAAAC,EAAA,8BAAAC,IAoBeC,UAZG,SAACC,GAAU,IAAAC,EACaD,EAAM3L,KAAKK,KAAKC,aAAhDuL,EADmBD,EACnBC,eAAgBjE,EADGgE,EACHhE,YACxB,OAAQlI,EAAAC,EAAAC,cAACkM,EAAD,KACNpM,EAAAC,EAAAC,cAACmM,EAAA,EAAD,CAAKxL,MAAM,OAAOyL,SAAWH,EAAiBjE,YAAcA,IAC5DlI,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACqM,EAAD,MACAvM,EAAAC,EAAAC,cAAC2K,EAAD,MACA7K,EAAAC,EAAAC,cAACsM,EAAD,SAPN,IAcaT,EAAS,8CCtBtBH,EAAAa,EAAAX,GAAAF,EAAAC,EAAAC,EAAA,4BAAAY,IAAAd,EAAAC,EAAAC,EAAA,uCAAAa,IAAAf,EAAAC,EAAAC,EAAA,gCAAAc,IAAA,IAAAC,EAAAjB,EAAA,GAAAkB,EAAAlB,EAAAmB,EAAAF,GAAAG,EAAApB,EAAA,GAAAqB,EAAArB,EAAAmB,EAAAC,GAAAE,EAAAtB,EAAA,KAAAuB,EAAAvB,EAAAmB,EAAAG,GAAAtB,EAAAC,EAAAC,EAAA,yBAAAqB,EAAAlN,IAAA2L,EAAAC,EAAAC,EAAA,+BAAAoB,EAAA,aAAAtB,EAAAC,EAAAC,EAAA,6BAAAoB,EAAA,WAAAtB,EAAAC,EAAAC,EAAA,yBAAAoB,EAAA,OAAAtB,EAAAC,EAAAC,EAAA,4BAAAoB,EAAA,UAAAtB,EAAAC,EAAAC,EAAA,+BAAAoB,EAAA,iBAAAE,EAAAxB,EAAA,KAAAyB,EAAAzB,EAAAmB,EAAAK,GAAAxB,EAAAC,EAAAC,EAAA,iCAAAuB,EAAApN,IAAA,IAAAqN,EAAA1B,EAAA,IAAAA,EAAAC,EAAAC,EAAA,8BAAAwB,EAAA,IAYA,IAAMX,EAAqBY,IAAMC,cAAc,IAEzCZ,EAAc,SAAAX,GAAK,OACvBa,EAAA7M,EAAAC,cAACyM,EAAmBc,SAApB,KACG,SAAAC,GACC,OACEzB,EAAM3L,MACLoN,EAAgBzB,EAAM7L,QAAUsN,EAAgBzB,EAAM7L,OAAOE,MAEtD2L,EAAM5L,QAAU4L,EAAMlM,UAC5BkM,EAAM3L,KAAO2L,EAAM3L,KAAKA,KAAOoN,EAAgBzB,EAAM7L,OAAOE,MAGvDwM,EAAA7M,EAAAC,cAAA,uCAaf,SAASwM,IACP,MAAM,IAAIiB,MACR,gVATJf,EAAYgB,UAAY,CACtBtN,KAAMuN,IAAUC,OAChB1N,MAAOyN,IAAUE,OAAOC,WACxB3N,OAAQwN,IAAUI,KAClBlO,SAAU8N,IAAUI,2BCnCtB,IAAsBjK,EAKpBkK,EAAOC,SALanK,EAKWoK,EAAQ,OALRpK,EAAEqK,SAAYrK,8ECehCsK,IAZM,SAAAxO,GAA0B,IAAvB6I,EAAuB7I,EAAvB6I,KAAMpB,EAAiBzH,EAAjByH,KAAMmB,EAAW5I,EAAX4I,KAClC,OACE6F,EAAAtO,EAAAC,cAACsO,EAAA,KAAD,CAAMjI,UAAU,OAAOkI,GAAI9F,GACzB4F,EAAAtO,EAAAC,cAAA,QACEW,MAAO6H,EACPnC,UAAU,iBACVmI,wBAAyB,CAAEC,OAAQpH,EAAKxD,IAAI,SAAA6K,GAAC,YAAUA,EAAEC,QAAQ,KAAM,MAAOC,KAAK,2CCT3F,IAAAjC,EAAAjB,EAAA,GAAAkB,EAAAlB,EAAAmB,EAAAF,GAAAkC,EAAAnD,EAAA,KAAAoD,EAAApD,EAAA,KAAAqD,EAAArD,EAAA,KAAAsD,EAAAtD,EAAA,KAAAuD,EAAAvD,EAAA,KAAAwD,EAAAxD,EAAA,KAAAyD,EAAAzD,EAAA,KAsCe0D,IA3BA,SAAAxP,GAA4B,IAA1BY,EAA0BZ,EAA1BY,UAAWD,EAAeX,EAAfW,UAAeQ,EAEfC,oBAAS,GAA5B4G,EAFkC7G,EAAA,GAE1BsO,EAF0BtO,EAAA,GAIzC,OACE6L,EAAA7M,EAAAC,cAAA,cACE4M,EAAA7M,EAAAC,cAAC6O,EAAA,EAAD,CAAQS,OAAO,KAAKjJ,UAAU,8BAC1B9F,GAAaqM,EAAA7M,EAAAC,cAAC8O,EAAA,EAAD,CAAa3G,KAAK,KAAIyE,EAAA7M,EAAAC,cAAA,MAAIqG,UAAU,uBAAwB7F,IAC3EoM,EAAA7M,EAAAC,cAAC+O,EAAA,EAAD,CAAe1I,UAAU,aAAaa,QAAS,kBAAMmI,GAASzH,MAC9DgF,EAAA7M,EAAAC,cAACgP,EAAA,EAAD,CAAUpH,OAAQA,EAAQ2H,QAAM,GAC9B3C,EAAA7M,EAAAC,cAACiP,EAAA,EAAD,CAAK5I,UAAU,UAAUkJ,QAAM,GAC7B3C,EAAA7M,EAAAC,cAACkP,EAAA,EAAD,KACEtC,EAAA7M,EAAAC,cAACmP,EAAA,EAAD,CAAS9I,UAAU,aAAa8B,KAAK,eAArC,cAEFyE,EAAA7M,EAAAC,cAACkP,EAAA,EAAD,KACEtC,EAAA7M,EAAAC,cAACmP,EAAA,EAAD,CAAS9I,UAAU,aAAa8B,KAAK,UAArC,SAEFyE,EAAA7M,EAAAC,cAACkP,EAAA,EAAD,KACEtC,EAAA7M,EAAAC,cAACmP,EAAA,EAAD,CAAS9I,UAAU,aAAa8B,KAAK,aAArC,iICvBRqH,EAAmB,SAAA5P,GAAkB,IAAf6P,EAAe7P,EAAf6P,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOxC,IAAMrN,cAAc8P,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiB9B,UAAY,CAC3B+B,SAAU9B,IAAUuC,MAAM,CACxBL,SAAUlC,IAAUE,OAAOC,aAC1BA,YAGU0B,sjTCWAW,EAjBY,kBACzBrQ,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAWLC,OAAQ,SAAAC,GAAI,OAAIN,EAAAC,EAAAC,cAAC+J,EAAAhK,EAAD,CAAKiK,MAAO5J,EAAK6J,iBAAiBC,gBAAgBF,SAZpE5J,KAAAgQ,cCkGaC,IA5GA,WACb,OACEvQ,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAqCLC,OAAQ,SAAAC,GACN,OACEN,EAAAC,EAAAC,cAAA,UAAQqG,UAAU,oCAChBvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,YACbvG,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,oBACbvG,EAAAC,EAAAC,cAAA,MAAIqG,UAAU,4BAA2BvG,EAAAC,EAAAC,cAAA,KAAGqG,UAAU,aAAa+B,IAAI,SAChCD,KAAK,KAAK/H,EAAKK,KAAKC,aAAaC,QACxEb,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,aAAQI,EAAKK,KAAKC,aAAasH,cAEjClI,EAAAC,EAAAC,cAACsQ,EAAD,MACAxQ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,UACDF,EAAAC,EAAAC,cAAA,mDAAgDkL,MAASqF,OAAO,YAGpEzQ,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,eACbvG,EAAAC,EAAAC,cAAA,MAAIqG,UAAU,2CAAd,SACAvG,EAAAC,EAAAC,cAAA,UAEII,EAAKoQ,MAAMpH,MAAMvF,IAAI,SAAAjE,EAAWmJ,GAAX,IAAGrD,EAAH9F,EAAG8F,KAAH,OACnB5F,EAAAC,EAAAC,cAAA,MAAI0I,IAAKK,GAAKjJ,EAAAC,EAAAC,cAAA,QAAMqG,UAAU,WAA9B,IAAyCvG,EAAAC,EAAAC,cAAA,KAAGmI,KAAMzC,EAAKgE,OAAOC,KAAMtD,UAAU,QAAQX,EAAK8D,YAAYhB,WAK/G1I,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,eACbvG,EAAAC,EAAAC,cAAA,MAAIqG,UAAU,2CAAd,cACAvG,EAAAC,EAAAC,cAAA,UAEII,EAAK+I,WAAWC,MAAMvF,IAAI,SAAAwH,EAAWtC,GAAX,IAAGrD,EAAH2F,EAAG3F,KAAH,OACxB5F,EAAAC,EAAAC,cAAA,MAAI0I,IAAKK,GACPjJ,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAcE,KAAM/C,EAAKgE,OAAOC,KAAMnB,KAAM9C,EAAK8D,YAAYhB,KAC/CnB,KAAM3B,EAAK8D,YAAYnC,OAAOvH,EAAAC,EAAAC,cAAA,KAAGmI,KAAMzC,EAAKgE,OAAOC,KAClBtD,UAAU,QADb,IACsBX,EAAK8D,YAAYhB,WAM7F1I,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,eACbvG,EAAAC,EAAAC,cAAA,MAAIqG,UAAU,2CAAd,+BACAvG,EAAAC,EAAAC,cAAA,QACEyQ,OAAO,+FACPC,OAAO,OAAOvJ,GAAG,6BAA6BqB,KAAK,6BAA6BnC,UAAU,WAC1FwB,OAAO,SAAS8I,YAAU,GAC1B7Q,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,cACbvG,EAAAC,EAAAC,cAAA,SAAOiD,KAAK,QAAQuF,KAAK,QAAQnC,UAAU,eAAec,GAAG,YACtDJ,YAAY,gBAAgB6J,UAAQ,KAE7C9Q,EAAAC,EAAAC,cAAA,OAAK6Q,MAAO,CAAE7N,SAAW,WAAY8N,KAAM,WAAYC,cAAY,QACjEjR,EAAAC,EAAAC,cAAA,SAAOiD,KAAK,OACLuF,KAAK,yCACLwI,SAAS,QAElBlR,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,SACbvG,EAAAC,EAAAC,cAAA,UAAQiD,KAAK,SAASc,MAAM,YAAYyE,KAAK,YAAYrB,GAAG,wBACpDd,UAAU,OADlB,mBA7FhBjG,KAAA6Q,+GCHJ,SAASC,EAATtR,GAA2D,IAA5CoI,EAA4CpI,EAA5CoI,YAAamJ,EAA+BvR,EAA/BuR,KAAMC,EAAyBxR,EAAzBwR,KAAMhF,EAAmBxM,EAAnBwM,SAAUzL,EAASf,EAATe,MAChD,OACE0Q,EAAAtR,EAAAC,cAACsR,EAAA,YAAD,CACEpR,MAAOqR,EACPpR,OAAQ,SAAAC,GACN,IAAMoR,EACJxJ,GAAe5H,EAAKK,KAAKC,aAAasH,YACxC,OACEqJ,EAAAtR,EAAAC,cAACyR,EAAA1R,EAAD,CACE2R,eAAgB,CACdP,QAEFxQ,MAAOA,EACPgR,cAAa,QAAUvR,EAAKK,KAAKC,aAAaC,MAC9CyQ,KAAM,CACJ,CACE5I,KAAI,cACJqC,QAAS2G,GAEX,CACEI,SAAQ,WACR/G,QAASlK,GAEX,CACEiR,SAAQ,iBACR/G,QAAS2G,GAEX,CACEI,SAAQ,UACR/G,QAAO,WAET,CACErC,KAAI,eACJqC,QAAO,WAET,CACErC,KAAI,kBACJqC,QAASzK,EAAKK,KAAKC,aAAa8K,QAElC,CACEhD,KAAI,gBACJqC,QAASlK,GAEX,CACE6H,KAAI,sBACJqC,QAAS2G,IAGV7O,OACCyJ,EAASjI,OAAS,EACd,CACEqE,KAAI,WACJqC,QAASuB,EAASwC,KAAT,OAEX,IAELjM,OAAOyO,MAtDlBhR,KAAAyR,IA8DJX,EAAIY,aAAe,CACjBX,KAAI,KACJC,KAAM,GACNhF,SAAU,IAGZ8E,EAAIxD,UAAY,CACd1F,YAAa2F,IAAUE,OACvBsD,KAAMxD,IAAUE,OAChBuD,KAAMzD,IAAUoE,MAChB3F,SAAUuB,IAAUqE,QAAQrE,IAAUE,QACtClN,MAAOgN,IAAUE,OAAOC,YAGXoD,MAEf,IAAMK,EAAY,mVC3DHU,IAvBF,SAAArS,GAAwD,IAArDe,EAAqDf,EAArDe,MAAoBoK,GAAiCnL,EAA9CoI,YAA8CpI,EAAjCmL,OAAO7C,EAA0BtI,EAA1BsI,IAAKD,EAAqBrI,EAArBqI,MAAO4C,EAAcjL,EAAdiL,QACrD,OACEwD,EAAAtO,EAAAC,cAAA,OAAKqG,UAAU,QACZ0E,GAASsD,EAAAtO,EAAAC,cAAA,OAAKkS,IAAMnH,EAAM4D,QAAQ,OAAQ,QAAUwD,IAAMxR,EAAQ0F,UAAU,iBAC7EgI,EAAAtO,EAAAC,cAAA,OAAKqG,UAAU,aACbgI,EAAAtO,EAAAC,cAAA,MAAIqG,UAAU,cACZgI,EAAAtO,EAAAC,cAAA,KAAGqG,UAAU,OAAO8B,KAAOD,GACvBvH,IAGN0N,EAAAtO,EAAAC,cAAA,OAAKqG,UAAU,wBAAwBmI,wBAAyB,CAACC,OAAQ5D,KACzEwD,EAAAtO,EAAAC,cAAA,SAEIiI,GAASA,EAAMpE,IAAI,SAACwE,EAAIU,GAAL,OACjBsF,EAAAtO,EAAAC,cAACoS,EAAA,EAAD,CAAc/K,KAAMgB,EAAGhB,KAAMmB,KAAMH,EAAGG,KAAMC,KAAMJ,EAAGI,KAAMC,IAAKK,4CCjB9E,IAAA4D,EAAAjB,EAAA,GAAAkB,EAAAlB,EAAAmB,EAAAF,GAAA0F,EAAA3G,EAAA,KAAA4G,EAAA5G,EAAAmB,EAAAwF,GAwBeE,IArBK,SAAA3S,GAAA,IAAGe,EAAHf,EAAGe,MAAO4K,EAAV3L,EAAU2L,QAASR,EAAnBnL,EAAmBmL,MAAO7C,EAA1BtI,EAA0BsI,IAAKsD,EAA/B5L,EAA+B4L,OAAQtI,EAAvCtD,EAAuCsD,KAAvC,OAClB0J,EAAA7M,EAAAC,cAAA,KAAGqG,UAAU,aAAa8B,KAAMD,GAC9B0E,EAAA7M,EAAAC,cAAA,OAAKqG,UAAU,4BACZ0E,GAAS6B,EAAA7M,EAAAC,cAAA,OAAKkS,IAAKnH,EAAOoH,IAAKxR,EAAO0F,UAAU,iBACjDuG,EAAA7M,EAAAC,cAAA,OAAKqG,UAAU,aACbuG,EAAA7M,EAAAC,cAAA,MAAIqG,UAAU,cAAc1F,GAC5BiM,EAAA7M,EAAAC,cAAA,SAAG4M,EAAA7M,EAAAC,cAAA,aACC4M,EAAA7M,EAAAC,cAAA,QAAMqG,UAAU,4BAA4BmM,SAAUtH,IAAOhI,GAAOuP,SAAS,iBAC1EvH,IAAOhI,GAAMqN,OAAO,sBAEvB3D,EAAA7M,EAAAC,cAAA,QAAMyS,SAAS,SAASC,WAAS,EAACC,SAAS,4BAA3C,OAA0E/F,EAAA7M,EAAAC,cAAA,QACxEqG,UAAU,uBAAuBoM,SAAS,QAAQjH,MAIxDoB,EAAA7M,EAAAC,cAAA,OAAKqG,UAAU,gCAAgCmI,wBAAyB,CAAEC,OAAQlD","file":"component---src-pages-index-js-3a6a4e917bc929cadf74.js","sourcesContent":["import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\n\nconst Home = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery1 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n     render={data => (\n       <>\n         <Header showTitle={false} siteTitle={data.site.siteMetadata.title} />\n         {children}\n         <Footer />\n       </>\n     )}\n  />\n);\n\nexport default Home;","import { useEffect, useRef, useState } from 'react';\nimport { withPrefix } from 'gatsby';\nimport axios from 'axios';\n\nconst useChatState = () => {\n\n  const [messageQueue, setMessageQueue] = useState([]);\n  const [dataSource, setDataSource] = useState([]);\n  const [isTyping, setTyping] = useState(false);\n  const [sessionAttributes, setSessionAttributes] = useState({});\n  const [userId] = useState(`pattybot-web${Date.now()}`);\n  const [typeTimer, setTypeTimer] = useState([]);\n  const [inputText, setInputText] = useState(null);\n\n  const dataSourceRef = useRef(dataSource);\n  dataSourceRef.current = dataSource;\n\n  const typeTimerRef = useRef(typeTimer);\n  typeTimerRef.current = typeTimer;\n\n  const processQueue = () => {\n    const [nextMessage, ...rest] = messageQueue;\n    if (nextMessage.position === 'left') {\n      if (isTyping) {\n        return;\n      }\n      setMessageQueue(rest);\n      setTyping(true);\n      const thisTimer = setTimeout(() => {\n        setDataSource([...dataSourceRef.current, nextMessage]);\n        setTyping(false);\n        clearTimeout(thisTimer);\n        setTypeTimer(typeTimerRef.current.filter(t => t !== thisTimer));\n      }, nextMessage.text ? nextMessage.text.length * 40 : 200);\n      setTypeTimer([...typeTimer, thisTimer]);\n    } else {\n      setMessageQueue(rest);\n      setTyping(false);\n      typeTimer.forEach(t => clearInterval(t));\n      setDataSource([...dataSource, nextMessage]);\n      setInputText(nextMessage.text);\n    }\n  };\n\n  const processSystemMessages = (msgList) => {\n    setMessageQueue([...messageQueue, ...msgList]);\n  }\n\n  const getSystemMessageFromText = text => ({\n    avatar: withPrefix('/img/patty_avatar_small.png'),\n    position: 'left',\n    title: 'Patty:',\n    type: 'text',\n    text,\n    date: new Date(),\n  });\n\n  const processInput = text => {\n    if (!text) {\n      return;\n    }\n    setMessageQueue([{\n      avatar: 'img/you-avatar.png',\n      position: 'right',\n      title: 'You:',\n      type: 'text',\n      text\n    }]);\n\n  };\n\n  useEffect(() => {\n    processSystemMessages([\n      getSystemMessageFromText(`Hola! I'm Patty.`),\n      getSystemMessageFromText(`If you have questions about Andalusia, you've come to the right place.`),\n      getSystemMessageFromText(`You can ask me a question, or just do a search.`),\n      getSystemMessageFromText(`Just start typing in the box.`)\n    ]);\n\n  }, []);\n\n  useEffect(() => {\n    if (!inputText) {\n      return;\n    }\n    axios.post('https://o1f9xnry71.execute-api.eu-west-1.amazonaws.com/prod/expattyChat', {\n      inputText,\n      userId,\n      sessionAttributes: {}\n    }).then(({ data }) => {\n      setSessionAttributes(data.sessionAttributes);\n      const responseArray = data.message.startsWith('{') ? JSON.parse(data.message).messages.map(m => m.value) : [data.message];\n      processSystemMessages(responseArray.map(response => getSystemMessageFromText(response)));\n    }, console.error);\n  }, [inputText]);\n\n  if (messageQueue.length) {\n    processQueue();\n  }\n\n  return {\n    dataSource,\n    processInput,\n    isTyping,\n    sessionAttributes\n  };\n\n};\n\nexport default useChatState;","import React, { useEffect, useRef, useState } from 'react'\nimport { MessageList } from 'react-chat-elements'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\nimport 'react-chat-elements/dist/main.css';\nimport useChatState from '../chat/use-chat-state'\nimport { Tooltip } from 'reactstrap'\n\nconst Chat = ({ onSearchResults }) => {\n\n  const { dataSource, processInput, isTyping, sessionAttributes } = useChatState();\n  const [isChatTipOpen, setChatTipOpen] = useState(false);\n  const [numberOfResults, setNumberofResults] = useState(0);\n\n  const inputEl = useRef(null);\n  const messageList = useRef(null);\n\n  const onKeyPress = (e) => {\n    if (e.shiftKey && e.charCode === 13) {\n      return true;\n    }\n    if (e.charCode === 13) {\n      onUserMessage();\n      e.preventDefault();\n      return false;\n    }\n  };\n\n  const onUserMessage = () => {\n    processInput(inputEl.current.value);\n    inputEl.current.value = '';\n  }\n\n  useEffect(() => {\n    const node = document.querySelector('#is-typing');\n    if (node) {\n      node.remove();\n    }\n    if (isTyping) {\n      const existingNode = document.querySelector('#is-typing');\n      if (!existingNode) {\n        const newNode = document.createElement('div');\n        newNode.setAttribute('id', 'is-typing')\n        newNode.setAttribute('class', 'loading');\n        messageList.current.mlistRef.appendChild(newNode);\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (!sessionAttributes.searchResults) {\n      return;\n    }\n\n    onSearchResults(sessionAttributes.searchResults.results);\n    setNumberofResults(sessionAttributes.searchResults.number);\n  }, [sessionAttributes.searchResults])\n\n  return (\n    <>\n      <div className=\"chat\">\n        <MessageList\n          ref={messageList}\n          className=\"message-list h-100\"\n          lockable={ true }\n          toBottomHeight=\"100%\"\n          dataSource={ dataSource }\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <div className=\"input-group mt-5\">\n          <input ref={ inputEl } onKeyPress={onKeyPress} type=\"text\" className=\"form-control\" placeholder=\"Do a search or ask Patty...\" aria-label=\"Do a search or ask Patty\" aria-describedby=\"basic-addon2\"/>\n            <div className=\"input-group-append\">\n              <button title=\"Ask Patty\" onClick={onUserMessage} className=\"btn\" type=\"button\" id=\"chatBtn\"><FontAwesomeIcon icon={ faComment } /></button>\n              <Tooltip delay={{show: 0, hide: 0}} placement=\"bottom\" isOpen={isChatTipOpen} target=\"chatBtn\" toggle={() => setChatTipOpen(!isChatTipOpen)}>\n                Chat with Patty\n              </Tooltip>\n            </div>\n        </div>\n        { numberOfResults > 0 && <small className=\"form-text light-primary-colour\">{`${ numberOfResults } ${ numberOfResults !== 1 ? 'results' : 'result'} found (so far)`}</small>}\n      </div>\n    </>\n  );\n};\n\nexport default Chat;","import React from 'react';\nimport CategoryIcon from './category-icon'\n\nconst SearchResult = ({ title, description, icons, url }) => {\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col-md\">\n        <h1 className=\"title--header small\"><a className=\"link light\" href={ url } target=\"_blank\" rel=\"noopener noreferrer\">{ title }</a></h1>\n        <p><small>{ description }</small></p>\n        <p>{\n          icons && icons.map((ic, iconIndex) => (\n            <CategoryIcon icon={ ic.icon } name={ ic.name } path={ ic.path } key={ iconIndex }/>\n          ))\n        }</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResult;","import React, { useEffect, useRef } from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport SearchResult from './search-result'\n\nconst Search = ({ results }) => {\n\n  const searchContainerRef = useRef(null);\n\n  useEffect(() => {\n    searchContainerRef.current.scrollTop = 0;\n  }, [results]);\n\n  return (\n    <StaticQuery\n  query={graphql`\n      {\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n              edges {\n                  node {\n                      frontmatter {\n                          tag\n                          name\n                          icon\n                      }\n                      fields {\n                          slug\n                      }\n                  }\n              }\n          }\n        }\n    `}\n  render={\n    data => {\n      return (\n        <>\n          <div className=\"search\" ref={ searchContainerRef }>\n            {\n              results ? results.map((h, idx) => {\n                const listingIcons = h.tags ? h.tags\n                  .map(tg => data.categories.edges.map(edge => edge.node).find(catNode => catNode.frontmatter.tag === tg))\n                  .filter(catNode => catNode)\n                  .map(catNode => ({\n                    icon: catNode.frontmatter.icon,\n                    name: catNode.frontmatter.name,\n                    path: catNode.fields.slug\n                  })) : [];\n                return (\n                    <SearchResult key={ idx } description={ h.description } icons={ listingIcons } url={ h.url } title={ h.title }/>\n                );\n              }) : (\n                <div className=\"row text-center align-items-center h-100\">\n                  <div className=\"col-md\">\n                    <h2 className=\"title--header small mb-5\">Some things you can search or ask me:</h2>\n                    <p><em>\"How do I do my Spanish residency?\"</em></p>\n                    <p><em>\"things to do near Fuengirola\"</em></p>\n                    <p><em>\"Can I receive healthcare in Spain?\"</em></p>\n                    <p><em>\"windsurfing\"</em></p>\n                    <p><em>\"softplay in Malaga\"</em></p>\n                  </div>\n                </div>\n              )\n            }\n          </div>\n        </>\n    )\n    }}\n  />\n  )\n};\n\nexport default Search;","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst Logo = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"logo.png\" }) {\n          childImageSharp {\n            fixed(width: 350) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fixed={data.placeholderImage.childImageSharp.fixed} />}\n  />\n);\n\nexport default Logo;\n","import React, { useState } from 'react'\nimport Chat from './chat';\nimport Search from './search'\nimport Logo from './logo'\n\nconst Hero = () => {\n\n  const [results, setResults] = useState(null);\n  const [nbResults] = useState(null);\n\n  return (<div className=\"container-fluid\">\n    <div className=\"row hero\">\n      <div className=\"col-lg-4 text-center\">\n        <div className=\"align-middle\">\n          <div className=\"row\">\n            <div className=\"col-xl-12 text-center\">\n              <div className=\"logo-container\">\n                <Logo />\n              </div>\n              <div className=\"lead\"><em>Your personal expert assistant in <strong className=\"large\">Andalusia</strong></em></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-lg-4\">\n        <Chat onSearchResults={ setResults } nbResults={ nbResults }/>\n      </div>\n      <div className=\"col-lg-4\">\n        <Search results={ results }/>\n      </div>\n    </div>\n  </div>);\n\n}\n\nexport default Hero;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport Pick from './pick'\n\nconst Picks = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n    {\n      categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n      picks: allMarkdownRemark(filter: {frontmatter: {pick: {eq: true}}}) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n              image\n              tags\n            }\n            html\n          }\n        }\n      }\n    }\n    `}\n      render={data => {\n\n        return (\n          <div className=\"container-fluid\">\n            <div className=\"row mt-5 pb-5 picks\">\n              <div className=\"col-md\">\n                <div className=\"row\">\n                  <div className=\"col-md\">\n                    <h2 className=\"title--header small\">Patty's Picks</h2>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"card-columns\">\n                      {\n                        data.picks.edges.map(edge => edge.node).map((node, idx) => {\n                          const listingIcons = node.frontmatter.tags\n                              .map(tg => data.categories.edges.map(edge => edge.node).find(catNode => catNode.frontmatter.tag === tg))\n                              .filter(catNode => catNode)\n                              .map(catNode => ({\n                                icon: catNode.frontmatter.icon,\n                                name: catNode.frontmatter.name,\n                                path: catNode.fields.slug\n                              }));\n                          return (\n                            <Pick\n                              key={ idx }\n                              title={ node.frontmatter.title }\n                              url={ node.fields.slug }\n                              icons={ listingIcons }\n                              description={ node.frontmatter.description }\n                              content={ node.html }\n                              image={ node.frontmatter.image }/>\n                          );\n                        })\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n};\n\nexport default Picks;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport BlogSummary from './blog-summary'\nimport moment from 'moment';\n\nconst BlogList = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n      {\n        bloglist: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC},\n            filter: {frontmatter: {type: {eq: \"blog\"}}}, limit: 10) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              excerpt(pruneLength: 500, format: HTML)\n              frontmatter {\n                title\n                image\n                date\n                author\n              }\n            }\n          }\n        }\n      }\n      `}\n      render={data => {\n        const now = moment();\n        return (\n          <div className=\"container-fluid blog\">\n            <h2 className=\"title--header small\">Patty's Blog</h2>\n            {\n              data.bloglist.edges.filter(({ node }) => now.isAfter(node.frontmatter.date)).map(({ node }, idx) => (\n                <BlogSummary\n                  key={ idx }\n                  excerpt={ node.excerpt }\n                  image={ node.frontmatter.image }\n                  url={ node.fields.slug }\n                  title={ node.frontmatter.title }\n                  author={ node.frontmatter.author }\n                  date={ node.frontmatter.date }/>\n              ))\n            }\n          </div>\n        );\n      }} />\n  );\n};\n\nexport default BlogList;","import React from 'react'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport Home from '../components/layouts/home'\nimport Hero from '../components/hero'\nimport Picks from '../components/picks'\nimport BlogList from '../components/blog-list'\n\nconst IndexPage = (props) => {\n  const { commonKeywords, description } = props.data.site.siteMetadata;\n  return (<Home>\n    <SEO title=\"Home\" keywords={ commonKeywords } description={ description } />\n    <main>\n      <Hero />\n      <Picks />\n      <BlogList />\n    </main>\n  </Home>)\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n    query SiteData {\n        site {\n            siteMetadata {\n                description\n                commonKeywords\n            }\n        }\n    }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst CategoryIcon = ({ path, icon, name }) => {\n  return (\n    <Link className=\"link\" to={path}>\n      <span\n        title={name}\n        className=\"tag-icons pr-2\"\n        dangerouslySetInnerHTML={{ __html: icon.map(i => `&#x${i.replace('U+', '')}`).join('') }}>\n      </span>\n    </Link>\n  )\n}\n\nexport default CategoryIcon","import React, { useState } from 'react';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Collapse\n} from 'reactstrap';\n\nconst Header = ({siteTitle, showTitle}) => {\n\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <header>\n      <Navbar expand=\"md\" className=\"navbar-dark bg-transparent\">\n        { showTitle && <NavbarBrand href=\"/\"><h1 className=\"title--header brand\">{ siteTitle }</h1></NavbarBrand> }\n        <NavbarToggler className=\"link light\" onClick={() => setOpen(!isOpen)} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/our-story/\">Our Story</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/blog/\">Blog</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/contact/\">Free business listing</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst PattyWorkingAtDesk = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"patty-working-at-desk.png\" }) {\n          childImageSharp {\n            fixed(width: 200) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fixed={data.placeholderImage.childImageSharp.fixed} />}\n  />\n);\n\nexport default PattyWorkingAtDesk;\n","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport moment from 'moment'\nimport PattyWorkingAtDesk from './patty-working-at-desk'\nimport CategoryIcon from './category-icon'\n\nconst Footer = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          site {\n              siteMetadata {\n                  title\n                  description\n              }\n          }\n          areas: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"area\"}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n                frontmatter {\n                  name\n                  tag\n                }\n              }\n            }\n          }\n          categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        }\n      `}\n      render={data => {\n        return (\n          <footer className=\"container-fluid mt-5 pb-3 footer\">\n            <div className=\"row pt-5\">\n              <div className=\"col-lg mb-5 pr-5\">\n                <h2 className=\"title--header small mb-4\"><a className=\"link brand\" rel=\"author\"\n                                                       href=\"/\">{data.site.siteMetadata.title}</a></h2>\n                <p>\n                  <small>{data.site.siteMetadata.description}</small>\n                </p>\n                <PattyWorkingAtDesk/>\n                <p><em>\n                  <small>All rights reserved. &copy; expatty.com {moment().format('YYYY')}</small>\n                </em></p>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Areas</h2>\n                <ul>\n                  {\n                    data.areas.edges.map(({ node }, idx) => (\n                      <li key={idx}><span className=\"spacer\"/> <a href={node.fields.slug} className=\"link\">{node.frontmatter.name}</a></li>\n                    ))\n                  }\n                </ul>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Categories</h2>\n                <ul>\n                  {\n                    data.categories.edges.map(({ node }, idx) => (\n                      <li key={idx}>\n                        <CategoryIcon path={node.fields.slug} name={node.frontmatter.name}\n                                      icon={node.frontmatter.icon}/><a href={node.fields.slug}\n                                                                       className=\"link\"> {node.frontmatter.name}\n                      </a></li>\n                    ))\n                  }\n                </ul>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Subscribe to our newsletter</h2>\n                <form\n                  action=\"https://expatty.us7.list-manage.com/subscribe/post?u=a6b6c49a554f762c8c4c8d495&amp;id=1eef58f2b5\"\n                  method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" className=\"validate\"\n                  target=\"_blank\" noValidate>\n                  <div className=\"form-group\">\n                    <input type=\"email\" name=\"EMAIL\" className=\"form-control\" id=\"mce-EMAIL\"\n                           placeholder=\"email address\" required/>\n                  </div>\n                  <div style={{ position : 'absolute', left: '-5000px'}} aria-hidden=\"true\">\n                    <input type=\"text\"\n                           name=\"b_a6b6c49a554f762c8c4c8d495_1eef58f2b5\"\n                           tabIndex=\"-1\"/>\n                  </div>\n                  <div className=\"clear\">\n                    <button type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\"\n                            className=\"btn\">Subscribe\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </footer>\n        )\n      }}/>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react';\nimport CategoryIcon from './category-icon'\n\nconst Pick = ({ title, description, image, url, icons, content }) => {\n  return (\n    <div className=\"card\">\n      {image && <img src={ image.replace('x400', 'x800') } alt={ title } className=\"card-img-top\" />}\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">\n          <a className=\"link\" href={ url }>\n            { title }\n          </a>\n        </h3>\n        <div className=\"card-text dark-colour\" dangerouslySetInnerHTML={{__html: content}} />\n        <p>\n          {\n            icons && icons.map((ic, idx) => (\n              <CategoryIcon icon={ic.icon} name={ic.name} path={ic.path} key={idx}/>\n            ))\n          }\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Pick;","import React from 'react'\nimport moment from 'moment'\n\nconst BlogSummary = ({ title, excerpt, image, url, author, date }) => (\n  <a className=\"link light\" href={url}>\n    <div className=\"card bg-transparent mb-5\">\n      {image && <img src={image} alt={title} className=\"card-img-top\"/>}\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{title}</h4>\n        <p><small>\n            <time className=\"light-primary-colour pt-2\" dateTime={moment(date)} itemProp=\"datePublished\">\n              {moment(date).format('dddd, D MMMM YYYY')}\n            </time>\n            <span itemProp=\"author\" itemScope itemType=\"http://schema.org/Person\">  • <span\n              className=\"light-primary-colour\" itemProp=\"name\">{author}</span>\n                      </span>\n          </small>\n        </p>\n        <div className=\"card-text primary-text-colour\" dangerouslySetInnerHTML={{ __html: excerpt }}/>\n      </div>\n    </div>\n  </a>\n);\n\nexport default BlogSummary;"],"sourceRoot":""}