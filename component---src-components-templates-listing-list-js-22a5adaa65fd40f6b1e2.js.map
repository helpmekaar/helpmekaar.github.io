{"version":3,"sources":["webpack:///./src/components/listing-summary.js","webpack:///./src/components/listing-list-filters.js","webpack:///./src/components/templates/listing-list.js","webpack:///./src/components/layouts/standalone.js","webpack:///./src/components/share.js"],"names":["ListingSummary","_ref","title","description","url","tags","icons","react_default","a","createElement","className","data-tags","gatsby_browser_entry","to","map","ic","idx","category_icon","icon","name","path","key","ListingListFilters","filterObject","filterStates","setFilterStates","_useState","useState","isFiltersOpen","setFiltersOpen","Card","CardHeader","onClick","e","index_es","faFilter","Collapse","isOpen","CardBody","Row","Object","keys","sort","tag","Col","sm","md","lg","FormGroup","check","Label","Input","onChange","_Object$assign","assign","toggleFilterState","type","value","checked","Badge","color","ListingList","data","windowGlobal","window","_data$thisCategory$fr","thisCategory","frontmatter","commonKeywords","site","siteMetadata","listings","edges","edge","node","allCategories","categories","filterTags","flatten","filter","_ref2","indexOf","listing","reduce","_Object$assign2","undefined","filterStateObject","_Object$assign3","useEffect","values","applyFilters","document","querySelectorAll","forEach","dataset","split","showListing","trim","classList","remove","add","standalone","seo","keywords","concat","listing_list_filters","_ref3","i","listingIcons","tg","find","catNode","fields","slug","listing_summary","share","callToAction","pageQuery","Standalone","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","Fragment","_header__WEBPACK_IMPORTED_MODULE_2__","showTitle","siteTitle","hideFacebook","_footer__WEBPACK_IMPORTED_MODULE_4__","_fixed_chat__WEBPACK_IMPORTED_MODULE_5__","_public_static_d_1948935994_json__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","Share"],"mappings":"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","file":"component---src-components-templates-listing-list-js-22a5adaa65fd40f6b1e2.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby'\nimport CategoryIcon from './category-icon'\n\nconst ListingSummary = ({title, description, url, tags, icons}) => (\n  <div className=\"row listing\" data-tags={ tags }>\n    <div className=\"col-md\">\n      <div className=\"card mb-3\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title title--header dark small\"><Link className=\"link\" to={url}>{ title }</Link></h5>\n          <p className=\"card-text\">{ description }</p>\n          <p>\n            {\n              icons && icons.map((ic, idx) => (\n                <CategoryIcon icon={ic.icon} name={ic.name} path={ic.path} key={idx}/>\n              ))\n            }\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default ListingSummary;","import React, { useState } from 'react'\nimport { Card, CardBody, CardHeader, Col, Collapse, FormGroup, Input, Label, Row, Badge } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\n\nconst ListingListFilters = ({ filterObject, filterStates, setFilterStates }) => {\n\n  const [ isFiltersOpen, setFiltersOpen ] = useState(false);\n\n  const toggleFilterState = tag => {\n    setFilterStates({\n      ...filterStates,\n      [ tag ] : !filterStates[tag]\n    });\n  };\n\n  return (\n        <Card className=\"mb-3\">\n          <CardHeader className=\"pointer\" onClick={ e => setFiltersOpen(!isFiltersOpen)}>\n            <strong className=\"primary-colour\"><FontAwesomeIcon icon={ faFilter } /> Filters</strong>\n          </CardHeader>\n          <Collapse isOpen={ isFiltersOpen }>\n            <CardBody>\n              <Row>\n              {\n                Object.keys(filterObject).sort().map((tag, idx) => (\n                  <Col sm={ 6 } md={ 4 } lg={ 3 } className=\"card-text dark-colour\" key={ idx }>\n                    <FormGroup check>\n                      <Label check>\n                        <Input\n                          onChange={ e => toggleFilterState(tag) }\n                          type=\"checkbox\" value={ tag }\n                          checked={ filterStates[tag] } /> { tag } <Badge color=\"primary\"><small>{ filterObject[tag] }</small></Badge>\n                      </Label>\n                    </FormGroup>\n                  </Col>\n                ))\n              }\n              </Row>\n            </CardBody>\n          </Collapse>\n        </Card>\n  );\n};\n\nexport default ListingListFilters;","import React, { useEffect, useState } from 'react'\nimport Standalone from '../layouts/standalone';\nimport SEO from '../seo';\nimport ListingSummary from '../listing-summary';\nimport { graphql} from 'gatsby';\nimport Share from '../share'\nimport ListingListFilters from '../listing-list-filters'\nimport { flatten } from 'lodash';\n\nconst ListingList = ({ data }) => {\n  const windowGlobal = typeof window !== 'undefined' && window;\n  const { type, name, tag } = data.thisCategory.frontmatter;\n  const { commonKeywords } = data.site.siteMetadata;\n  const listings = data.listings.edges.map(edge => edge.node);\n  const allCategories = data.categories.edges.map(edge => edge.node);\n  const filterTags = flatten(\n    listings.filter(({ frontmatter }) => frontmatter.tags.indexOf(tag) >= 0).map(listing => listing.frontmatter.tags)\n  ).reduce((filterObject, tag) => filterObject[tag] === undefined ? {\n    ...filterObject,\n    [tag] : 1\n  } : {\n    ...filterObject,\n    [tag] : ++filterObject[tag]\n  }, {});\n\n  const [ filterStates, setFilterStates ] = useState(Object.keys(filterTags).sort().reduce((filterStateObject, tag) => ({\n    ...filterStateObject,\n    [ tag ] : false\n  }), filterTags));\n\n  useEffect(() => {\n    if (!filterStates) {\n      return;\n    }\n    const shouldApplyFilters = Object.values(filterStates).reduce((applyFilters, filter) => applyFilters ? applyFilters : filter, false);\n    if (shouldApplyFilters) {\n      windowGlobal.document.querySelectorAll('.listing').forEach(listing => {\n        const showListing = listing.dataset.tags.split(',').reduce((showListing, tag) => showListing ? showListing : filterStates[tag.trim()], false);\n        if (showListing) {\n          listing.classList.remove('d-none');\n        } else {\n          listing.classList.add('d-none');\n        }\n      });\n    } else {\n      windowGlobal.document.querySelectorAll('.listing').forEach(listing => listing.classList.remove('d-none'));\n    }\n  }, [ filterStates ])\n\n  return (\n    <Standalone>\n      <SEO\n        title={ `helpmekaar.org | ${ type === 'category' ? 'category' : 'areas'} | ${name}` }\n        description={ `helpmekaar.org besigheid: ${name}` }\n        keywords={[name, ...commonKeywords]}/>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md\">\n            <main>\n              <h1 className=\"title--header\">{ name }</h1>\n              <ListingListFilters\n                filterObject={ filterTags }\n                filterStates={ filterStates }\n                setFilterStates={ setFilterStates }\n              />\n              {\n                listings\n                  .filter(({ frontmatter }) => frontmatter.tags.indexOf(tag) >= 0)\n                  .map((node, i) => {\n                    const listingIcons =\n                      node.frontmatter.tags\n                        .map(tg => allCategories.find(catNode => catNode.frontmatter.tag === tg))\n                        .filter(catNode => catNode)\n                        .map(catNode => ({\n                          icon: catNode.frontmatter.icon,\n                          name: catNode.frontmatter.name,\n                          path: catNode.fields.slug\n                        }));\n                    return (\n                    <ListingSummary\n                      key={ i }\n                      tags={ node.frontmatter.tags }\n                      description={ node.frontmatter.description }\n                      title={ node.frontmatter.title }\n                      url={ node.fields.slug }\n                      icons={ listingIcons }/>\n                  )\n                })\n              }\n              <Share callToAction=\"Deel hierdie lys op:\" />\n            </main>\n          </div>\n        </div>\n      </div>\n    </Standalone>\n  );\n};\n\nexport default ListingList;\n\nexport const pageQuery = graphql`\n    query CategoryOrArea($type: String!, $name: String!) {\n        site {\n            siteMetadata {\n                commonKeywords\n            }\n        }\n        thisCategory: markdownRemark(frontmatter: { type: { eq: $type }, name: { eq: $name } }) {\n            frontmatter {\n                type\n                name\n                tag\n            }\n        }\n        listings: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"listing\"}}}, sort: {fields: [frontmatter___title]}) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        description\n                        tags\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`","import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\nimport FixedChat from '../fixed-chat'\n\nconst Standalone = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery2 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n  render={data => (\n    <>\n      <Header showTitle={ true } siteTitle={data.site.siteMetadata.title} hideFacebook={ true } />\n      {children}\n      <Footer />\n      <FixedChat />\n    </>\n    )}\n  />\n);\n\nexport default Standalone;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\n\n/*const Share = ({ callToAction }) => <StaticQuery query={shareQuery} render={\n  data => (\n    <div className=\"share-bar mt-5\">\n\n      <h4 className=\"title--header small\">{ callToAction || 'Deel op:'}</h4>\n\n      <div className=\"share-buttons\">\n        <a href={`https://www.facebook.com/sharer/sharer.php?u=${ data.site.url }}${ data.site.baseurl }}${ data.sitePage.path }}`}\n           onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n           title=\"Deel op Facebook\">\n          <i className=\"fa fa-facebook-official share-button\"> facebook</i>\n        </a>\n\n        <a\n          href=\"https://twitter.com/intent/tweet?text={{ page.title }}&url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n          onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n          title=\"Deel op Twitter\">\n          <i className=\"fa fa-twitter share-button\"> twitter</i>\n        </a>\n\n        <a href=\"https://plus.google.com/share?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n           onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n           title=\"Deel op Google+\">\n          <i className=\"fa fa-google-plus share-button\"> google</i>\n        </a>\n\n        <a href=\"http://pinterest.com/pin/create/button/?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n           onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n           title=\"Deel op Pinterest\">\n          <i className=\"fa fa-pinterest-p share-button\"> pinterest</i>\n        </a>\n\n        <a href=\"http://www.tumblr.com/share/link?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n           onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n           title=\"Deel op Tumblr\">\n          <i className=\"fa fa-tumblr share-button\"> tumblr</i>\n        </a>\n\n        <a href=\"http://www.reddit.com/submit?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n           onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n           title=\"Deel op Reddit\">\n          <i className=\"fa fa-reddit-alien share-button\"> reddit</i>\n        </a>\n\n        <a\n          href=\"https://www.linkedin.com/shareArticle?mini=true&url={{ site.url }}{{ site.baseurl }}{{ page.url }}&title={{ page.title }}&summary={{ page.description }}&source={{ site.title }}\"\n          onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n          title=\"Deel op LinkedIn\">\n          <i className=\"fa fa-linkedin share-button\"> linkedin</i>\n        </a>\n\n        <a\n          href=\"mailto:?subject={{ page.title }}&amp;body=Check out this site {{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n          title=\"Deel met e-pos\">\n          <i className=\"fa fa-envelope share-button\"> email</i>\n        </a>\n      </div>\n\n    </div>\n  )\n} />*/\n\nconst Share = () => null;\n\nexport default Share;\n\n/*\nconst shareQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        },\n        sitePage {\n            path\n        }\n    }\n`*/\n"],"sourceRoot":""}