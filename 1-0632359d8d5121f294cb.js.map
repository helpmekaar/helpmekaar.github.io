{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/seo.js","webpack:///./src/components/patty-working-at-desk.js","webpack:///./src/components/footer.js","webpack:///./src/components/category-icon.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","Header","_ref","siteTitle","showTitle","_useState","useState","isOpen","setOpen","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_13__","categories","edges","map","edge","node","areas","topLists","howtos","reactstrap__WEBPACK_IMPORTED_MODULE_3__","expand","className","reactstrap__WEBPACK_IMPORTED_MODULE_4__","href","reactstrap__WEBPACK_IMPORTED_MODULE_5__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_6__","navbar","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","nav","inNavbar","reactstrap__WEBPACK_IMPORTED_MODULE_11__","caret","reactstrap__WEBPACK_IMPORTED_MODULE_12__","right","area","i","reactstrap_es_DropdownItem__WEBPACK_IMPORTED_MODULE_14__","key","fields","slug","frontmatter","name","cat","top","how","title","target","rel","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_15__","icon","faFacebook","react_facebook__WEBPACK_IMPORTED_MODULE_17__","appId","colorScheme","showFaces","share","_public_static_d_205051259_json__WEBPACK_IMPORTED_MODULE_1__","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","PattyWorkingAtDesk","react_default","gatsby_browser_entry","gatsby_image_default","fixed","placeholderImage","childImageSharp","_1292776582","Footer","patty_working_at_desk","moment","format","idx","_ref2","category_icon","path","action","method","id","noValidate","type","placeholder","required","style","position","left","aria-hidden","tabIndex","value","_1331163629","CategoryIcon","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","dangerouslySetInnerHTML","__html","replace","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"1-0632359d8d5121f294cb.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React, { useState } from 'react';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Collapse, UncontrolledDropdown, DropdownToggle, DropdownMenu,\n} from 'reactstrap'\nimport { graphql, StaticQuery } from 'gatsby'\nimport DropdownItem from 'reactstrap/es/DropdownItem'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFacebook } from '@fortawesome/free-brands-svg-icons'\nimport { FacebookProvider, Like } from 'react-facebook'\n\nconst Header = ({siteTitle, showTitle}) => {\n\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <StaticQuery  query={graphql`\n    {\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}, exclude: {ne: true}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        topLists: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}, exclude: {eq: true}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        howtos: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"howto\"}}}, , sort: {fields: [frontmatter___title]}) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        areas: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"area\"}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n                frontmatter {\n                  name\n                  tag\n                }\n              }\n            }\n          }\n        }\n\n    `}\n      render={data => {\n        const categories = data.categories.edges.map(edge => edge.node);\n        const areas = data.areas.edges.map(edge => edge.node);\n        const topLists = data.topLists.edges.map(edge => edge.node);\n        const howtos = data.howtos.edges.map(edge => edge.node);\n\n        return (\n        <header>\n          <Navbar expand=\"md\" className=\"navbar-dark bg-transparent\">\n            {showTitle && (\n              <NavbarBrand href=\"/\">\n                <h1 className=\"title--header brand\">{siteTitle}</h1>\n              </NavbarBrand>)}\n            <NavbarToggler className=\"link light\" onClick={() => setOpen(!isOpen)}/>\n            <Collapse isOpen={isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink className=\"link light\" href=\"/\">Search &amp; Chat</NavLink>\n                </NavItem>\n\n                <NavItem>\n                  <NavLink className=\"link light\" href=\"/our-story/\">Our Story</NavLink>\n                </NavItem>\n\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret className=\"link light\">\n                    Areas\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {\n                      areas.map((area, i) => (\n                        <DropdownItem key={i} href={ area.fields.slug }>{ area.frontmatter.name }</DropdownItem>\n                      ))\n                    }\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret className=\"link light\">\n                    Categories\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {\n                      categories.map((cat, i) => (\n                        <DropdownItem key={i} href={ cat.fields.slug }>{ cat.frontmatter.name }</DropdownItem>\n                      ))\n                    }\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret className=\"link light\">\n                    Top Things To Do\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {\n                      topLists.map((top, i) => (\n                        <DropdownItem key={i} href={ top.fields.slug }>{ top.frontmatter.name }</DropdownItem>\n                      ))\n                    }\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret className=\"link light\">\n                    How To's\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {\n                      howtos.map((how, i) => (\n                        <DropdownItem key={i} href={ how.fields.slug }>{ how.frontmatter.title }</DropdownItem>\n                      ))\n                    }\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n\n                <NavItem>\n                  <NavLink className=\"link light\" href=\"/blog/\">Blog</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"link light\" href=\"/contact/\">Free business listing</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"link light\" href=\"https://facebook.com/expattydotcom/\"\n                           target=\"_blank\" title=\"Our Facebook page\" rel=\"nofollow noopener noreferrer\"><FontAwesomeIcon icon={ faFacebook } /></NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n          {\n            showTitle && (\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-md\">\n                  <FacebookProvider appId=\"282943012399294\">\n                    <Like href=\"http://www.facebook.com/expattydotcom\" colorScheme=\"light\" showFaces share />\n                  </FacebookProvider>\n                </div>\n              </div>\n            </div>\n            )\n          }\n        </header>\n      );\n    }\n    }/>\n\n  );\n};\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst PattyWorkingAtDesk = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"patty-working-at-desk.png\" }) {\n          childImageSharp {\n            fixed(width: 200) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fixed={data.placeholderImage.childImageSharp.fixed} />}\n  />\n);\n\nexport default PattyWorkingAtDesk;\n","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport moment from 'moment'\nimport PattyWorkingAtDesk from './patty-working-at-desk'\nimport CategoryIcon from './category-icon'\n\nconst Footer = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          site {\n              siteMetadata {\n                  title\n                  description\n              }\n          }\n          areas: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"area\"}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n                frontmatter {\n                  name\n                  tag\n                }\n              }\n            }\n          }\n          categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}, exclude: {ne: true}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        }\n      `}\n      render={data => {\n        return (\n          <footer className=\"container-fluid mt-5 pb-3 footer\">\n            <div className=\"row pt-5\">\n              <div className=\"col-lg mb-5 pr-5\">\n                <h2 className=\"title--header small mb-4\"><a className=\"link brand\" rel=\"author\"\n                                                       href=\"/\">{data.site.siteMetadata.title}</a></h2>\n                <p>\n                  <small>{data.site.siteMetadata.description}</small>\n                </p>\n                <PattyWorkingAtDesk/>\n                <p><em>\n                  <small>All rights reserved. &copy; expatty.com {moment().format('YYYY')}</small>\n                </em></p>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Areas</h2>\n                <ul>\n                  {\n                    data.areas.edges.map(({ node }, idx) => (\n                      <li key={idx}><span className=\"spacer\"/> <a href={node.fields.slug} className=\"link\">{node.frontmatter.name}</a></li>\n                    ))\n                  }\n                </ul>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Categories</h2>\n                <ul>\n                  {\n                    data.categories.edges.map(({ node }, idx) => (\n                      <li key={idx}>\n                        <CategoryIcon path={node.fields.slug} name={node.frontmatter.name}\n                                      icon={node.frontmatter.icon}/><a href={node.fields.slug}\n                                                                       className=\"link\"> {node.frontmatter.name}\n                      </a></li>\n                    ))\n                  }\n                </ul>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Subscribe to our newsletter</h2>\n                <form\n                  action=\"https://expatty.us7.list-manage.com/subscribe/post?u=a6b6c49a554f762c8c4c8d495&amp;id=1eef58f2b5\"\n                  method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" className=\"validate\"\n                  target=\"_blank\" noValidate>\n                  <div className=\"form-group\">\n                    <input type=\"email\" name=\"EMAIL\" className=\"form-control\" id=\"mce-EMAIL\"\n                           placeholder=\"email address\" required/>\n                  </div>\n                  <div style={{ position : 'absolute', left: '-5000px'}} aria-hidden=\"true\">\n                    <input type=\"text\"\n                           name=\"b_a6b6c49a554f762c8c4c8d495_1eef58f2b5\"\n                           tabIndex=\"-1\"/>\n                  </div>\n                  <div className=\"clear\">\n                    <button type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\"\n                            className=\"btn\">Subscribe\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </footer>\n        )\n      }}/>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst CategoryIcon = ({ path, icon, name }) => {\n  return (\n    <Link className=\"link\" to={path}>\n      <span\n        title={name}\n        className=\"tag-icons pr-2\"\n        dangerouslySetInnerHTML={{ __html: icon.map(i => `&#x${i.replace('U+', '')}`).join('') }}>\n      </span>\n    </Link>\n  )\n}\n\nexport default CategoryIcon","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}