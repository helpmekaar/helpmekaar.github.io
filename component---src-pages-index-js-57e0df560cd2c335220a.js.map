{"version":3,"sources":["webpack:///./src/components/layouts/home.js","webpack:///./src/chat/use-chat-state.js","webpack:///./src/components/chat.js","webpack:///./src/components/search-result.js","webpack:///./src/components/search.js","webpack:///./src/components/logo.js","webpack:///./src/components/hero.js","webpack:///./src/components/picks.js","webpack:///./src/components/blog-list.js","webpack:///./src/pages/index.js","webpack:///./src/components/pick.js","webpack:///./src/components/blog-summary.js"],"names":["Home","_ref","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","Fragment","header","showTitle","siteTitle","site","siteMetadata","title","footer","_2559738656","useChatState","windowGlobal","window","_useState","useState","messageQueue","setMessageQueue","_useState2","sessionStorage","getItem","JSON","parse","dataSource","setDataSource","_useState3","isTyping","setTyping","_useState4","sessionAttributes","setSessionAttributes","userId","Date","now","_useState6","typeTimer","setTypeTimer","_useState7","inputText","setInputText","dataSourceRef","useRef","current","typeTimerRef","processSystemMessages","msgList","concat","getSystemMessageFromText","text","avatar","withPrefix","position","type","date","useEffect","Cookies","get","set","axios","post","then","setItem","stringify","responseArray","message","startsWith","messages","map","m","value","response","console","error","length","nextMessage","rest","slice","thisTimer","setTimeout","clearTimeout","filter","t","forEach","clearInterval","processQueue","processInput","Chat","onSearchResults","_useChatState","isChatTipOpen","setChatTipOpen","numberOfResults","setNumberofResults","inputEl","messageList","onUserMessage","node","document","querySelector","remove","newNode","setAttribute","mlistRef","appendChild","searchResults","results","number","className","main","ref","lockable","toBottomHeight","onKeyPress","e","shiftKey","charCode","preventDefault","placeholder","aria-label","aria-describedby","onClick","id","index_es","icon","faComment","Tooltip","delay","show","hide","placement","isOpen","target","toggle","SearchResult","description","icons","url","href","rel","ic","iconIndex","category_icon","name","path","key","Search","searchContainerRef","scrollTop","h","idx","listingIcons","tags","tg","categories","edges","edge","find","catNode","frontmatter","tag","fields","slug","search_result","_2696684912","Logo","gatsby_image_default","fixed","placeholderImage","childImageSharp","_3744433833","Hero","setResults","nbResults","logo","chat","search","Picks","picks","pick","content","html","image","_922999384","BlogList","moment","bloglist","isAfter","_ref2","blog_summary","excerpt","author","_3199158587","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","props","_props$data$site$site","commonKeywords","home","seo","keywords","hero","blog_list","Pick","react__WEBPACK_IMPORTED_MODULE_2___default","src","replace","alt","dangerouslySetInnerHTML","__html","_category_icon__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","BlogSummary","dateTime","itemProp","format","itemScope","itemType"],"mappings":"mKAyBeA,EApBF,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,SAAF,OACXC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CAAaC,MAAK,aASfC,OAAQ,SAAAC,GAAI,OACVN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,WAAW,EAAOC,UAAWJ,EAAKK,KAAKC,aAAaC,QAC3Dd,EACDC,EAAAC,EAAAC,cAACY,EAAA,EAAD,QAbPR,KAAAS,0FC2HaC,EA5HM,WAEnB,IAAMC,EAAiC,oBAAXC,QAA0BA,OAF7BC,EAKeC,mBAAS,IAA1CC,EALkBF,EAAA,GAKJG,EALIH,EAAA,GAAAI,EAMWH,mBAASH,EAAaO,eAAeC,QAH3C,gBAI1BC,KAAKC,MAAMV,EAAaO,eAAeC,QAJb,iBAK1B,IAFGG,EANkBL,EAAA,GAMNM,EANMN,EAAA,GAAAO,EASKV,oBAAS,GAAhCW,EATkBD,EAAA,GASRE,EATQF,EAAA,GAAAG,EAUyBb,mBAASH,EAAaO,eAAeC,QANvD,kBAO5BC,KAAKC,MAAMV,EAAaO,eAAeC,QAPX,mBAQ5B,IAFGS,EAVkBD,EAAA,GAUCE,EAVDF,EAAA,GAalBG,EAAUhB,mBAAQ,eAAgBiB,KAAKC,OAbrB,GAAAC,EAcSnB,mBAAS,IAApCoB,EAdkBD,EAAA,GAcPE,EAdOF,EAAA,GAAAG,EAeStB,mBAAS,MAApCuB,EAfkBD,EAAA,GAePE,EAfOF,EAAA,GAiBnBG,EAAgBC,iBAAOlB,GAC7BiB,EAAcE,QAAUnB,EAExB,IAAMoB,EAAeF,iBAAON,GAC5BQ,EAAaD,QAAUP,EAEvB,IA0BMS,EAAwB,SAACC,GAC7B5B,EAAe,GAAA6B,OAAK9B,EAAiB6B,KAGjCE,EAA2B,SAAAC,GAAI,MAAK,CACxCC,OAAQC,qBAAW,+BACnBC,SAAU,OACV3C,MAAO,SACP4C,KAAM,OACNJ,OACAK,KAAM,IAAIrB,OAwDZ,OAvCAsB,oBAAU,WACH1C,EAAaO,eAAeC,QA1EL,kBA2EtBmC,IAAQC,IAAI,mBACdZ,EAAsB,CACpBG,EAAwB,oDAG1BH,EAAsB,CACpBG,EAAwB,oBACxBA,EAAwB,0EACxBA,EAAwB,mDACxBA,EAAwB,mCAG5BQ,IAAQE,IAAI,mBAAmB,KAGhC,IAEHH,oBAAU,WACHhB,GAGLoB,IAAMC,KAAK,0EAA2E,CACpFrB,YACAP,SACAF,kBAAmB,KAClB+B,KAAK,SAAAnE,GAAc,IAAXQ,EAAWR,EAAXQ,KACT6B,EAAqB7B,EAAK4B,mBAC1BjB,EAAaO,eAAe0C,QArGA,iBAqGiCxC,KAAKyC,UAAU7D,EAAK4B,oBACjF,IAAMkC,EAAgB9D,EAAK+D,QAAQC,WAAW,KAAO5C,KAAKC,MAAMrB,EAAK+D,SAASE,SAASC,IAAI,SAAAC,GAAC,OAAIA,EAAEC,QAAS,CAACpE,EAAK+D,SACjHpB,EAAsBmB,EAAcI,IAAI,SAAAG,GAAQ,OAAIvB,EAAyBuB,OAC5EC,QAAQC,QACV,CAAClC,IAEAtB,EAAayD,QAxFI,WAAM,IAClBC,EAAwB1D,EADN,GACF2D,EAAQ3D,EADN4D,MAAA,GAEzB,GAA6B,SAAzBF,EAAYvB,SAAqB,CACnC,GAAIzB,EACF,OAEFT,EAAgB0D,GAChBhD,GAAU,GACV,IAAMkD,EAAYC,WAAW,WAC3BtD,EAAa,GAAAsB,OAAKN,EAAcE,QAAnB,CAA4BgC,KACzC9D,EAAaO,eAAe0C,QA9BJ,eA8BmCxC,KAAKyC,UAAUtB,EAAcE,UACxFf,GAAU,GACVoD,aAAaF,GACbzC,EAAaO,EAAaD,QAAQsC,OAAO,SAAAC,GAAC,OAAIA,IAAMJ,MACnDH,EAAY1B,KAAiC,EAA1B0B,EAAY1B,KAAKyB,OAAa,KACpDrC,EAAY,GAAAU,OAAKX,EAAL,CAAgB0C,UAE5B5D,EAAgB0D,GAChBhD,GAAU,GACVQ,EAAU+C,QAAQ,SAAAD,GAAC,OAAIE,cAAcF,KACrCzD,EAAa,GAAAsB,OAAKvB,EAAL,CAAiBmD,KAC9B9D,EAAaO,eAAe0C,QAzCF,eAyCiCxC,KAAKyC,UAAUtB,EAAcE,UACxFH,EAAamC,EAAY1B,MAmE3BoC,GAGK,CACL7D,aACA8D,aAvDmB,SAAArC,GACdA,GAGL/B,EAAgB,CAAC,CACfgC,OAAQ,qBACRE,SAAU,QACV3C,MAAO,OACP4C,KAAM,OACNJ,WA+CFtB,WACAG,+BCtCWyD,EA9EF,SAAA7F,GAAyB,IAAtB8F,EAAsB9F,EAAtB8F,gBAAsBC,EAE8B7E,IAA1DY,EAF4BiE,EAE5BjE,WAAY8D,EAFgBG,EAEhBH,aAAc3D,EAFE8D,EAEF9D,SAAUG,EAFR2D,EAEQ3D,kBAFRf,EAGIC,oBAAS,GAA1C0E,EAH6B3E,EAAA,GAGd4E,EAHc5E,EAAA,GAAAI,EAIUH,mBAAS,GAAhD4E,EAJ6BzE,EAAA,GAIZ0E,EAJY1E,EAAA,GAM9B2E,EAAUpD,iBAAO,MACjBqD,EAAcrD,iBAAO,MAarBsD,EAAgB,WACpBV,EAAaQ,EAAQnD,QAAQ2B,OAC7BwB,EAAQnD,QAAQ2B,MAAQ,IA4B1B,OAzBAf,oBAAU,WACR,IAAM0C,EAAOC,SAASC,cAAc,cAIpC,GAHIF,GACFA,EAAKG,SAEHzE,IACmBuE,SAASC,cAAc,cACzB,CACjB,IAAME,EAAUH,SAASpG,cAAc,OACvCuG,EAAQC,aAAa,KAAM,aAC3BD,EAAQC,aAAa,QAAS,WAC9BP,EAAYpD,QAAQ4D,SAASC,YAAYH,MAK/C9C,oBAAU,WACHzB,EAAkB2E,gBAIvBjB,EAAgB1D,EAAkB2E,cAAcC,SAChDb,EAAmB/D,EAAkB2E,cAAcE,UAClD,CAAC7E,EAAkB2E,gBAGpB7G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,QACbhH,EAAAC,EAAAC,cAAC+G,EAAA,YAAD,CACEC,IAAKf,EACLa,UAAU,qBACVG,UAAW,EACXC,eAAe,OACfxF,WAAaA,KAIjB5B,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,cACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,oBACbhH,EAAAC,EAAAC,cAAA,SAAOgH,IAAMhB,EAAUmB,WAvDZ,SAACC,GAClB,SAAIA,EAAEC,UAA2B,KAAfD,EAAEE,YAGD,KAAfF,EAAEE,UACJpB,IACAkB,EAAEG,kBACK,QAHT,IAmDqDhE,KAAK,OAAOuD,UAAU,eAAeU,YAAY,8BAA8BC,aAAW,2BAA2BC,mBAAiB,iBACnL5H,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,sBACbhH,EAAAC,EAAAC,cAAA,UAAQW,MAAM,YAAYgH,QAASzB,EAAeY,UAAU,MAAMvD,KAAK,SAASqE,GAAG,WAAU9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAiBC,KAAOC,OACrHjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAASC,MAAO,CAACC,KAAM,EAAGC,KAAM,GAAIC,UAAU,SAASC,OAAQzC,EAAe0C,OAAO,UAAUC,OAAQ,kBAAM1C,GAAgBD,KAA7H,qBAKJE,EAAkB,GAAKhG,EAAAC,EAAAC,cAAA,SAAO8G,UAAU,kCAAsChB,EAAvD,KAAgG,IAApBA,EAAwB,UAAY,UAAhH,uDC7DlB0C,EAhBM,SAAA5I,GAAwC,IAArCe,EAAqCf,EAArCe,MAAO8H,EAA8B7I,EAA9B6I,YAAaC,EAAiB9I,EAAjB8I,MAAOC,EAAU/I,EAAV+I,IACjD,OACE7I,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,YACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,UACbhH,EAAAC,EAAAC,cAAA,MAAI8G,UAAU,uBAAsBhH,EAAAC,EAAAC,cAAA,KAAG8G,UAAU,aAAa8B,KAAOD,EAAML,OAAO,SAASO,IAAI,uBAAwBlI,IACvHb,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,aAASyI,IACZ3I,EAAAC,EAAAC,cAAA,SACE0I,GAASA,EAAMpE,IAAI,SAACwE,EAAIC,GAAL,OACjBjJ,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAclB,KAAOgB,EAAGhB,KAAOmB,KAAOH,EAAGG,KAAOC,KAAOJ,EAAGI,KAAOC,IAAMJ,UC4DpEK,EAnEA,SAAAxJ,GAAiB,IAAdgH,EAAchH,EAAdgH,QAEVyC,EAAqBzG,iBAAO,MAMlC,OAJAa,oBAAU,WACR4F,EAAmBxG,QAAQyG,UAAY,GACtC,CAAC1C,IAGF9G,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACFC,MAAK,aAkBLC,OACE,SAAAC,GACE,OACEN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,SAASE,IAAMqC,GAE1BzC,EAAUA,EAAQtC,IAAI,SAACiF,EAAGC,GACxB,IAAMC,EAAeF,EAAEG,KAAOH,EAAEG,KAC7BpF,IAAI,SAAAqF,GAAE,OAAIvJ,EAAKwJ,WAAWC,MAAMvF,IAAI,SAAAwF,GAAI,OAAIA,EAAK3D,OAAM4D,KAAK,SAAAC,GAAO,OAAIA,EAAQC,YAAYC,MAAQP,MACnGxE,OAAO,SAAA6E,GAAO,OAAIA,IAClB1F,IAAI,SAAA0F,GAAO,MAAK,CACflC,KAAMkC,EAAQC,YAAYnC,KAC1BmB,KAAMe,EAAQC,YAAYhB,KAC1BC,KAAMc,EAAQG,OAAOC,QACjB,GACR,OACItK,EAAAC,EAAAC,cAACqK,EAAD,CAAclB,IAAMK,EAAMf,YAAcc,EAAEd,YAAcC,MAAQe,EAAed,IAAMY,EAAEZ,IAAMhI,MAAQ4I,EAAE5I,UAG3Gb,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,4CACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,UACbhH,EAAAC,EAAAC,cAAA,MAAI8G,UAAU,4BAAd,yCACAhH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,kDACHF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,6CACHF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,mDACHF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,4BACHF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,wCA7CnBI,KAAAkK,yCCmBWC,EAjBF,kBACXzK,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAWLC,OAAQ,SAAAC,GAAI,OAAIN,EAAAC,EAAAC,cAACwK,EAAAzK,EAAD,CAAK0K,MAAOrK,EAAKsK,iBAAiBC,gBAAgBF,SAZpErK,KAAAwK,KCmBaC,EA9BF,WAAM,IAAA5J,EAEaC,mBAAS,MAAhC0F,EAFU3F,EAAA,GAED6J,EAFC7J,EAAA,GAGV8J,EAAa7J,mBAAS,MAHZ,GAKjB,OAAQpB,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,mBACrBhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,YACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,wBACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,gBACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,OACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,yBACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,kBACbhH,EAAAC,EAAAC,cAACgL,EAAD,OAEFlL,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,QAAOhH,EAAAC,EAAAC,cAAA,+CAAsCF,EAAAC,EAAAC,cAAA,UAAQ8G,UAAU,SAAlB,mBAKpEhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,YACbhH,EAAAC,EAAAC,cAACiL,EAAD,CAAMvF,gBAAkBoF,EAAaC,UAAYA,KAEnDjL,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,YACbhH,EAAAC,EAAAC,cAACkL,EAAD,CAAQtE,QAAUA,0BC6DXuE,EArFD,WACZ,OACErL,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,YAkCLC,OAAQ,SAAAC,GAEN,OACEN,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,mBACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,uBACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,UACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,OACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,UACbhH,EAAAC,EAAAC,cAAA,MAAI8G,UAAU,uBAAd,mBAGJhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,OACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,aACbhH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,gBAEX1G,EAAKgL,MAAMvB,MAAMvF,IAAI,SAAAwF,GAAI,OAAIA,EAAK3D,OAAM7B,IAAI,SAAC6B,EAAMqD,GACjD,IAAMC,EAAetD,EAAK8D,YAAYP,KACjCpF,IAAI,SAAAqF,GAAE,OAAIvJ,EAAKwJ,WAAWC,MAAMvF,IAAI,SAAAwF,GAAI,OAAIA,EAAK3D,OAAM4D,KAAK,SAAAC,GAAO,OAAIA,EAAQC,YAAYC,MAAQP,MACnGxE,OAAO,SAAA6E,GAAO,OAAIA,IAClB1F,IAAI,SAAA0F,GAAO,MAAK,CACflC,KAAMkC,EAAQC,YAAYnC,KAC1BmB,KAAMe,EAAQC,YAAYhB,KAC1BC,KAAMc,EAAQG,OAAOC,QAE3B,OACEtK,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CACElC,IAAMK,EACN7I,MAAQwF,EAAK8D,YAAYtJ,MACzBgI,IAAMxC,EAAKgE,OAAOC,KAClB1B,MAAQe,EACRhB,YAActC,EAAK8D,YAAYxB,YAC/B6C,QAAUnF,EAAKoF,KACfC,MAAQrF,EAAK8D,YAAYuB,iBAnEnDpL,KAAAqL,yCC8CWC,EA/CE,WACf,OACE5L,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAqBLC,OAAQ,SAAAC,GACN,IAAMgC,EAAMuJ,MACZ,OACE7L,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,wBACbhH,EAAAC,EAAAC,cAAA,MAAI8G,UAAU,uBAAd,gBAEE1G,EAAKwL,SAAS/B,MAAM1E,OAAO,SAAAvF,GAAA,IAAGuG,EAAHvG,EAAGuG,KAAH,OAAc/D,EAAIyJ,QAAQ1F,EAAK8D,YAAYzG,QAAOc,IAAI,SAAAwH,EAAWtC,GAAX,IAAGrD,EAAH2F,EAAG3F,KAAH,OAC/ErG,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CACE5C,IAAMK,EACNwC,QAAU7F,EAAK6F,QACfR,MAAQrF,EAAK8D,YAAYuB,MACzB7C,IAAMxC,EAAKgE,OAAOC,KAClBzJ,MAAQwF,EAAK8D,YAAYtJ,MACzBsL,OAAS9F,EAAK8D,YAAYgC,OAC1BzI,KAAO2C,EAAK8D,YAAYzG,WApCtCpD,KAAA8L,KCPJC,EAAAC,EAAAC,EAAA,8BAAAC,IAoBeC,UAZG,SAACC,GAAU,IAAAC,EACaD,EAAMpM,KAAKK,KAAKC,aAAhDgM,EADmBD,EACnBC,eAAgBjE,EADGgE,EACHhE,YACxB,OAAQ3I,EAAAC,EAAAC,cAAC2M,EAAD,KACN7M,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAKjM,MAAM,OAAOkM,SAAWH,EAAiBjE,YAAcA,IAC5D3I,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC8M,EAAD,MACAhN,EAAAC,EAAAC,cAACoL,EAAD,MACAtL,EAAAC,EAAAC,cAAC+M,EAAD,SAPN,IAcaT,EAAS,wFCQPU,IA3BF,SAAApN,GAAwD,IAArDe,EAAqDf,EAArDe,MAAoB6K,GAAiC5L,EAA9C6I,YAA8C7I,EAAjC4L,OAAO7C,EAA0B/I,EAA1B+I,IAAKD,EAAqB9I,EAArB8I,MAAO4C,EAAc1L,EAAd0L,QACrD,OACE2B,EAAAlN,EAAAC,cAAA,OAAK8G,UAAU,QACZ0E,GACCyB,EAAAlN,EAAAC,cAAA,KAAG4I,KAAOD,GACRsE,EAAAlN,EAAAC,cAAA,OAAKkN,IAAM1B,EAAM2B,QAAQ,OAAQ,QAAUC,IAAMzM,EAAQmG,UAAU,kBAGvEmG,EAAAlN,EAAAC,cAAA,OAAK8G,UAAU,aACbmG,EAAAlN,EAAAC,cAAA,MAAI8G,UAAU,cACZmG,EAAAlN,EAAAC,cAAA,KAAG8G,UAAU,OAAO8B,KAAOD,GACvBhI,IAGNsM,EAAAlN,EAAAC,cAAA,OAAK8G,UAAU,wBAAwBuG,wBAAyB,CAACC,OAAQhC,KACzE2B,EAAAlN,EAAAC,cAAA,SAEI0I,GAASA,EAAMpE,IAAI,SAACwE,EAAIU,GAAL,OACjByD,EAAAlN,EAAAC,cAACuN,EAAA,EAAD,CAAczF,KAAMgB,EAAGhB,KAAMmB,KAAMH,EAAGG,KAAMC,KAAMJ,EAAGI,KAAMC,IAAKK,4CCrB9E,IAAAgE,EAAArB,EAAA,GAAAsB,EAAAtB,EAAAuB,EAAAF,GAAAG,EAAAxB,EAAA,KAAAyB,EAAAzB,EAAAuB,EAAAC,GAwBeE,IArBK,SAAAjO,GAAA,IAAGe,EAAHf,EAAGe,MAAOqL,EAAVpM,EAAUoM,QAASR,EAAnB5L,EAAmB4L,MAAO7C,EAA1B/I,EAA0B+I,IAAKsD,EAA/BrM,EAA+BqM,OAAQzI,EAAvC5D,EAAuC4D,KAAvC,OAClBiK,EAAA1N,EAAAC,cAAA,KAAG8G,UAAU,aAAa8B,KAAMD,GAC9B8E,EAAA1N,EAAAC,cAAA,OAAK8G,UAAU,4BACZ0E,GAASiC,EAAA1N,EAAAC,cAAA,OAAKkN,IAAK1B,EAAO4B,IAAKzM,EAAOmG,UAAU,iBACjD2G,EAAA1N,EAAAC,cAAA,OAAK8G,UAAU,aACb2G,EAAA1N,EAAAC,cAAA,MAAI8G,UAAU,cAAcnG,GAC5B8M,EAAA1N,EAAAC,cAAA,SAAGyN,EAAA1N,EAAAC,cAAA,aACCyN,EAAA1N,EAAAC,cAAA,QAAM8G,UAAU,4BAA4BgH,SAAUnC,IAAOnI,GAAOuK,SAAS,iBAC1EpC,IAAOnI,GAAMwK,OAAO,sBAEvBP,EAAA1N,EAAAC,cAAA,QAAM+N,SAAS,SAASE,WAAS,EAACC,SAAS,4BAA3C,OAA0ET,EAAA1N,EAAAC,cAAA,QACxE8G,UAAU,uBAAuBiH,SAAS,QAAQ9B,MAIxDwB,EAAA1N,EAAAC,cAAA,OAAK8G,UAAU,gCAAgCuG,wBAAyB,CAAEC,OAAQtB","file":"component---src-pages-index-js-57e0df560cd2c335220a.js","sourcesContent":["import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\n\nconst Home = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery1 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n     render={data => (\n       <>\n         <Header showTitle={false} siteTitle={data.site.siteMetadata.title} />\n         {children}\n         <Footer />\n       </>\n     )}\n  />\n);\n\nexport default Home;","import { useEffect, useRef, useState } from 'react';\nimport { withPrefix } from 'gatsby';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst useChatState = () => {\n\n  const windowGlobal = typeof window !== 'undefined' && window;\n  const sessionStorageChatKey = 'expatty-chat';\n  const sessionStorageSearchKey = 'expatty-search';\n  const [messageQueue, setMessageQueue] = useState([]);\n  const [dataSource, setDataSource] = useState(windowGlobal.sessionStorage.getItem(sessionStorageChatKey)\n    ? JSON.parse(windowGlobal.sessionStorage.getItem(sessionStorageChatKey))\n    : []);\n  const [isTyping, setTyping] = useState(false);\n  const [sessionAttributes, setSessionAttributes] = useState(windowGlobal.sessionStorage.getItem(sessionStorageSearchKey)\n    ? JSON.parse(windowGlobal.sessionStorage.getItem(sessionStorageSearchKey))\n    : {});\n  const [userId] = useState(`pattybot-web${Date.now()}`);\n  const [typeTimer, setTypeTimer] = useState([]);\n  const [inputText, setInputText] = useState(null);\n\n  const dataSourceRef = useRef(dataSource);\n  dataSourceRef.current = dataSource;\n\n  const typeTimerRef = useRef(typeTimer);\n  typeTimerRef.current = typeTimer;\n\n  const processQueue = () => {\n    const [nextMessage, ...rest] = messageQueue;\n    if (nextMessage.position === 'left') {\n      if (isTyping) {\n        return;\n      }\n      setMessageQueue(rest);\n      setTyping(true);\n      const thisTimer = setTimeout(() => {\n        setDataSource([...dataSourceRef.current, nextMessage]);\n        windowGlobal.sessionStorage.setItem(sessionStorageChatKey, JSON.stringify(dataSourceRef.current));\n        setTyping(false);\n        clearTimeout(thisTimer);\n        setTypeTimer(typeTimerRef.current.filter(t => t !== thisTimer));\n      }, nextMessage.text ? nextMessage.text.length * 5 : 200);\n      setTypeTimer([...typeTimer, thisTimer]);\n    } else {\n      setMessageQueue(rest);\n      setTyping(false);\n      typeTimer.forEach(t => clearInterval(t));\n      setDataSource([...dataSource, nextMessage]);\n      windowGlobal.sessionStorage.setItem(sessionStorageChatKey, JSON.stringify(dataSourceRef.current));\n      setInputText(nextMessage.text);\n    }\n  };\n\n  const processSystemMessages = (msgList) => {\n    setMessageQueue([...messageQueue, ...msgList]);\n  }\n\n  const getSystemMessageFromText = text => ({\n    avatar: withPrefix('/img/patty_avatar_small.png'),\n    position: 'left',\n    title: 'Patty:',\n    type: 'text',\n    text,\n    date: new Date(),\n  });\n\n  const processInput = text => {\n    if (!text) {\n      return;\n    }\n    setMessageQueue([{\n      avatar: 'img/you-avatar.png',\n      position: 'right',\n      title: 'You:',\n      type: 'text',\n      text\n    }]);\n\n  };\n\n  useEffect(() => {\n    if (!windowGlobal.sessionStorage.getItem(sessionStorageChatKey)) {\n      if (Cookies.get('expatty-visited')) {\n        processSystemMessages([\n          getSystemMessageFromText(`Oh, you're back! Anything I can help you with?`)\n        ]);\n      } else {\n        processSystemMessages([\n          getSystemMessageFromText(`Hola! I'm Patty.`),\n          getSystemMessageFromText(`If you have questions about Andalusia, you've come to the right place.`),\n          getSystemMessageFromText(`You can ask me a question, or just do a search.`),\n          getSystemMessageFromText(`Just start typing in the box.`)\n        ]);\n      }\n      Cookies.set('expatty-visited', true);\n    }\n\n  }, []);\n\n  useEffect(() => {\n    if (!inputText) {\n      return;\n    }\n    axios.post('https://o1f9xnry71.execute-api.eu-west-1.amazonaws.com/prod/expattyChat', {\n      inputText,\n      userId,\n      sessionAttributes: {}\n    }).then(({ data }) => {\n      setSessionAttributes(data.sessionAttributes);\n      windowGlobal.sessionStorage.setItem(sessionStorageSearchKey, JSON.stringify(data.sessionAttributes));\n      const responseArray = data.message.startsWith('{') ? JSON.parse(data.message).messages.map(m => m.value) : [data.message];\n      processSystemMessages(responseArray.map(response => getSystemMessageFromText(response)));\n    }, console.error);\n  }, [inputText]);\n\n  if (messageQueue.length) {\n    processQueue();\n  }\n\n  return {\n    dataSource,\n    processInput,\n    isTyping,\n    sessionAttributes\n  };\n\n};\n\nexport default useChatState;","import React, { useEffect, useRef, useState } from 'react'\nimport { MessageList } from 'react-chat-elements'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\nimport 'react-chat-elements/dist/main.css';\nimport useChatState from '../chat/use-chat-state'\nimport { Tooltip } from 'reactstrap'\n\nconst Chat = ({ onSearchResults }) => {\n\n  const { dataSource, processInput, isTyping, sessionAttributes } = useChatState();\n  const [isChatTipOpen, setChatTipOpen] = useState(false);\n  const [numberOfResults, setNumberofResults] = useState(0);\n\n  const inputEl = useRef(null);\n  const messageList = useRef(null);\n\n  const onKeyPress = (e) => {\n    if (e.shiftKey && e.charCode === 13) {\n      return true;\n    }\n    if (e.charCode === 13) {\n      onUserMessage();\n      e.preventDefault();\n      return false;\n    }\n  };\n\n  const onUserMessage = () => {\n    processInput(inputEl.current.value);\n    inputEl.current.value = '';\n  }\n\n  useEffect(() => {\n    const node = document.querySelector('#is-typing');\n    if (node) {\n      node.remove();\n    }\n    if (isTyping) {\n      const existingNode = document.querySelector('#is-typing');\n      if (!existingNode) {\n        const newNode = document.createElement('div');\n        newNode.setAttribute('id', 'is-typing')\n        newNode.setAttribute('class', 'loading');\n        messageList.current.mlistRef.appendChild(newNode);\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (!sessionAttributes.searchResults) {\n      return;\n    }\n\n    onSearchResults(sessionAttributes.searchResults.results);\n    setNumberofResults(sessionAttributes.searchResults.number);\n  }, [sessionAttributes.searchResults])\n\n  return (\n    <>\n      <div className=\"chat\">\n        <MessageList\n          ref={messageList}\n          className=\"message-list h-100\"\n          lockable={ true }\n          toBottomHeight=\"100%\"\n          dataSource={ dataSource }\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <div className=\"input-group mt-5\">\n          <input ref={ inputEl } onKeyPress={onKeyPress} type=\"text\" className=\"form-control\" placeholder=\"Do a search or ask Patty...\" aria-label=\"Do a search or ask Patty\" aria-describedby=\"basic-addon2\"/>\n            <div className=\"input-group-append\">\n              <button title=\"Ask Patty\" onClick={onUserMessage} className=\"btn\" type=\"button\" id=\"chatBtn\"><FontAwesomeIcon icon={ faComment } /></button>\n              <Tooltip delay={{show: 0, hide: 0}} placement=\"bottom\" isOpen={isChatTipOpen} target=\"chatBtn\" toggle={() => setChatTipOpen(!isChatTipOpen)}>\n                Chat with Patty\n              </Tooltip>\n            </div>\n        </div>\n        { numberOfResults > 0 && <small className=\"form-text light-primary-colour\">{`${ numberOfResults } ${ numberOfResults !== 1 ? 'results' : 'result'} found (so far)`}</small>}\n      </div>\n    </>\n  );\n};\n\nexport default Chat;","import React from 'react';\nimport CategoryIcon from './category-icon'\n\nconst SearchResult = ({ title, description, icons, url }) => {\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col-md\">\n        <h1 className=\"title--header small\"><a className=\"link light\" href={ url } target=\"_blank\" rel=\"noopener noreferrer\">{ title }</a></h1>\n        <p><small>{ description }</small></p>\n        <p>{\n          icons && icons.map((ic, iconIndex) => (\n            <CategoryIcon icon={ ic.icon } name={ ic.name } path={ ic.path } key={ iconIndex }/>\n          ))\n        }</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResult;","import React, { useEffect, useRef } from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport SearchResult from './search-result'\n\nconst Search = ({ results }) => {\n\n  const searchContainerRef = useRef(null);\n\n  useEffect(() => {\n    searchContainerRef.current.scrollTop = 0;\n  }, [results]);\n\n  return (\n    <StaticQuery\n  query={graphql`\n      {\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n              edges {\n                  node {\n                      frontmatter {\n                          tag\n                          name\n                          icon\n                      }\n                      fields {\n                          slug\n                      }\n                  }\n              }\n          }\n        }\n    `}\n  render={\n    data => {\n      return (\n        <>\n          <div className=\"search\" ref={ searchContainerRef }>\n            {\n              results ? results.map((h, idx) => {\n                const listingIcons = h.tags ? h.tags\n                  .map(tg => data.categories.edges.map(edge => edge.node).find(catNode => catNode.frontmatter.tag === tg))\n                  .filter(catNode => catNode)\n                  .map(catNode => ({\n                    icon: catNode.frontmatter.icon,\n                    name: catNode.frontmatter.name,\n                    path: catNode.fields.slug\n                  })) : [];\n                return (\n                    <SearchResult key={ idx } description={ h.description } icons={ listingIcons } url={ h.url } title={ h.title }/>\n                );\n              }) : (\n                <div className=\"row text-center align-items-center h-100\">\n                  <div className=\"col-md\">\n                    <h2 className=\"title--header small mb-5\">Some things you can search or ask me:</h2>\n                    <p><em>\"How do I do my Spanish residency?\"</em></p>\n                    <p><em>\"things to do near Fuengirola\"</em></p>\n                    <p><em>\"Can I receive healthcare in Spain?\"</em></p>\n                    <p><em>\"windsurfing\"</em></p>\n                    <p><em>\"softplay in Malaga\"</em></p>\n                  </div>\n                </div>\n              )\n            }\n          </div>\n        </>\n    )\n    }}\n  />\n  )\n};\n\nexport default Search;","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst Logo = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"logo.png\" }) {\n          childImageSharp {\n            fixed(width: 350) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fixed={data.placeholderImage.childImageSharp.fixed} />}\n  />\n);\n\nexport default Logo;\n","import React, { useState } from 'react';\nimport Chat from './chat';\nimport Search from './search';\nimport Logo from './logo';\n\nconst Hero = () => {\n\n  const [results, setResults] = useState(null);\n  const [nbResults] = useState(null);\n\n  return (<div className=\"container-fluid\">\n    <div className=\"row hero\">\n      <div className=\"col-lg-4 text-center\">\n        <div className=\"align-middle\">\n          <div className=\"row\">\n            <div className=\"col-xl-12 text-center\">\n              <div className=\"logo-container\">\n                <Logo />\n              </div>\n              <div className=\"lead\"><em>Your personal expert assistant in <strong className=\"large\">Andalusia</strong></em></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-lg-4\">\n        <Chat onSearchResults={ setResults } nbResults={ nbResults }/>\n      </div>\n      <div className=\"col-lg-4\">\n        <Search results={ results }/>\n      </div>\n    </div>\n  </div>);\n\n}\n\nexport default Hero;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport Pick from './pick'\n\nconst Picks = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n    {\n      categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n      picks: allMarkdownRemark(filter: {frontmatter: {pick: {eq: true}}}) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n              image\n              tags\n            }\n            html\n          }\n        }\n      }\n    }\n    `}\n      render={data => {\n\n        return (\n          <div className=\"container-fluid\">\n            <div className=\"row mt-5 pb-5 picks\">\n              <div className=\"col-md\">\n                <div className=\"row\">\n                  <div className=\"col-md\">\n                    <h2 className=\"title--header small\">Patty's Picks</h2>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"card-columns\">\n                      {\n                        data.picks.edges.map(edge => edge.node).map((node, idx) => {\n                          const listingIcons = node.frontmatter.tags\n                              .map(tg => data.categories.edges.map(edge => edge.node).find(catNode => catNode.frontmatter.tag === tg))\n                              .filter(catNode => catNode)\n                              .map(catNode => ({\n                                icon: catNode.frontmatter.icon,\n                                name: catNode.frontmatter.name,\n                                path: catNode.fields.slug\n                              }));\n                          return (\n                            <Pick\n                              key={ idx }\n                              title={ node.frontmatter.title }\n                              url={ node.fields.slug }\n                              icons={ listingIcons }\n                              description={ node.frontmatter.description }\n                              content={ node.html }\n                              image={ node.frontmatter.image }/>\n                          );\n                        })\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n};\n\nexport default Picks;","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby'\nimport BlogSummary from './blog-summary'\nimport moment from 'moment';\n\nconst BlogList = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n      {\n        bloglist: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC},\n            filter: {frontmatter: {type: {eq: \"blog\"}}}, limit: 10) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              excerpt(pruneLength: 500, format: HTML)\n              frontmatter {\n                title\n                image\n                date\n                author\n              }\n            }\n          }\n        }\n      }\n      `}\n      render={data => {\n        const now = moment();\n        return (\n          <div className=\"container-fluid blog\">\n            <h2 className=\"title--header small\">Patty's Blog</h2>\n            {\n              data.bloglist.edges.filter(({ node }) => now.isAfter(node.frontmatter.date)).map(({ node }, idx) => (\n                <BlogSummary\n                  key={ idx }\n                  excerpt={ node.excerpt }\n                  image={ node.frontmatter.image }\n                  url={ node.fields.slug }\n                  title={ node.frontmatter.title }\n                  author={ node.frontmatter.author }\n                  date={ node.frontmatter.date }/>\n              ))\n            }\n          </div>\n        );\n      }} />\n  );\n};\n\nexport default BlogList;","import React from 'react'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport Home from '../components/layouts/home'\nimport Hero from '../components/hero'\nimport Picks from '../components/picks'\nimport BlogList from '../components/blog-list'\n\nconst IndexPage = (props) => {\n  const { commonKeywords, description } = props.data.site.siteMetadata;\n  return (<Home>\n    <SEO title=\"Home\" keywords={ commonKeywords } description={ description } />\n    <main>\n      <Hero />\n      <Picks />\n      <BlogList />\n    </main>\n  </Home>)\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n    query SiteData {\n        site {\n            siteMetadata {\n                description\n                commonKeywords\n            }\n        }\n    }\n`","import React from 'react';\nimport CategoryIcon from './category-icon'\n\nconst Pick = ({ title, description, image, url, icons, content }) => {\n  return (\n    <div className=\"card\">\n      {image && (\n        <a href={ url }>\n          <img src={ image.replace('x400', 'x800') } alt={ title } className=\"card-img-top\" />\n        </a>)\n        }\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">\n          <a className=\"link\" href={ url }>\n            { title }\n          </a>\n        </h3>\n        <div className=\"card-text dark-colour\" dangerouslySetInnerHTML={{__html: content}} />\n        <p>\n          {\n            icons && icons.map((ic, idx) => (\n              <CategoryIcon icon={ic.icon} name={ic.name} path={ic.path} key={idx}/>\n            ))\n          }\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Pick;","import React from 'react'\nimport moment from 'moment'\n\nconst BlogSummary = ({ title, excerpt, image, url, author, date }) => (\n  <a className=\"link light\" href={url}>\n    <div className=\"card bg-transparent mb-5\">\n      {image && <img src={image} alt={title} className=\"card-img-top\"/>}\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{title}</h4>\n        <p><small>\n            <time className=\"light-primary-colour pt-2\" dateTime={moment(date)} itemProp=\"datePublished\">\n              {moment(date).format('dddd, D MMMM YYYY')}\n            </time>\n            <span itemProp=\"author\" itemScope itemType=\"http://schema.org/Person\">  • <span\n              className=\"light-primary-colour\" itemProp=\"name\">{author}</span>\n                      </span>\n          </small>\n        </p>\n        <div className=\"card-text primary-text-colour\" dangerouslySetInnerHTML={{ __html: excerpt }}/>\n      </div>\n    </div>\n  </a>\n);\n\nexport default BlogSummary;"],"sourceRoot":""}