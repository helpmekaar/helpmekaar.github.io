{"version":3,"sources":["webpack:///./src/components/templates/blog-post.js","webpack:///./src/components/layouts/standalone.js","webpack:///./src/components/seo.js","webpack:///./src/components/share.js","webpack:///./src/components/pick.js"],"names":["BlogPost","_ref","data","commonKeywords","site","siteMetadata","content","markdownRemark","html","_data$markdownRemark$","frontmatter","title","description","date","image","author","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_layouts_standalone__WEBPACK_IMPORTED_MODULE_3__","_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","concat","className","src","alt","itemScope","itemType","itemProp","dateTime","moment","format","dangerouslySetInnerHTML","__html","href","fields","slug","hidden","_share__WEBPACK_IMPORTED_MODULE_6__","disqus_react__WEBPACK_IMPORTED_MODULE_7___default","DiscussionEmbed","shortname","picks","edges","map","_ref2","idx","node","listingIcons","tags","tg","categories","edge","find","catNode","tag","filter","icon","name","path","_pick__WEBPACK_IMPORTED_MODULE_8__","key","url","icons","pageQuery","Standalone","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","Fragment","_header__WEBPACK_IMPORTED_MODULE_2__","showTitle","siteTitle","_footer__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_1948935994_json__WEBPACK_IMPORTED_MODULE_0__","SEO","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","property","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Share","onClick","Pick","replace","ic","_category_icon__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-components-templates-blog-post-js-40e3f39fd93723a6ac00.js","sourcesContent":["import React from 'react'\nimport Standalone from '../layouts/standalone'\nimport SEO from '../seo'\nimport { graphql } from 'gatsby'\nimport moment from 'moment'\nimport Share from '../share'\nimport Disqus from 'disqus-react'\nimport Pick from '../pick'\n\nconst BlogPost = ({ data }) => {\n  const { commonKeywords } = data.site.siteMetadata\n  const content = data.markdownRemark.html\n  const { title, description, date, image, author } = data.markdownRemark.frontmatter\n  return (<Standalone>\n    <SEO\n      title={`Expatty Blog | ${title}`}\n      description={description}\n      keywords={[title, ...commonKeywords]}/>\n\n\n    <div className=\"container-fluid blog\">\n      <div className=\"row\">\n        <div className=\"col-md blog-image\">\n          <img className=\"img-fluid\" src={image} alt={title}/>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          <div className=\"row\">\n            <div className=\"col-md\">\n              <main>\n                <article className=\"mt-5\" itemScope itemType=\"http://schema.org/BlogPosting\">\n\n                  <header>\n                    <h1 className=\"title--header\" itemProp=\"name headline\">{title}</h1>\n                    <p>\n                      <time className=\"light-primary-colour pt-2\" dateTime={moment(date)} itemProp=\"datePublished\">\n                        {moment(date).format('dddd, D MMMM YYYY')}\n                      </time>\n                      <span itemProp=\"author\" itemScope itemType=\"http://schema.org/Person\">  â€¢ <span\n                        className=\"light-primary-colour\" itemProp=\"name\">{author}</span>\n                      </span>\n                    </p>\n                  </header>\n\n                  <div itemProp=\"articleBody\" dangerouslySetInnerHTML={{ __html: content }}/>\n                  <a href={data.markdownRemark.fields.slug} hidden> </a>\n                </article>\n              </main>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md\">\n              <Share/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md\">\n              <Disqus.DiscussionEmbed shortname=\"expatty\"/>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4 blog-picks\">\n          <h2 className=\"title--header small mt-5\">Patty's Picks</h2>\n          {\n            data.picks.edges.map(({ node }, idx) => {\n              const listingIcons = node.frontmatter.tags\n                .map(tg => data.categories.edges.map(edge => edge.node).find(catNode => catNode.frontmatter.tag === tg))\n                .filter(catNode => catNode)\n                .map(catNode => ({\n                  icon: catNode.frontmatter.icon,\n                  name: catNode.frontmatter.name,\n                  path: catNode.fields.slug\n                }));\n              return (\n                <Pick\n                  key={ idx }\n                  title={ node.frontmatter.title }\n                  url={ node.fields.slug }\n                  icons={ listingIcons }\n                  description={ node.frontmatter.description }\n                  content={ node.html }\n                  image={ node.frontmatter.image }/>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n\n\n  </Standalone>)\n}\n\nexport default BlogPost;\n\nexport const pageQuery = graphql`\n    query Blog($slug: String!) {\n        site {\n            siteMetadata {\n                commonKeywords\n            }\n        }\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            html\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n                description\n                date\n                image\n                author\n            }\n        }\n        picks: allMarkdownRemark(filter: {frontmatter: {pick: {eq: true}}}) {\n            edges {\n                node {\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        title\n                        description\n                        image\n                        tags\n                    }\n                    html\n                }\n            }\n        }\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`\n","import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\n\nconst Standalone = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery2 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n  render={data => (\n    <>\n      <Header showTitle={true} siteTitle={data.site.siteMetadata.title} />\n      {children}\n      <Footer />\n    </>\n    )}\n  />\n);\n\nexport default Standalone;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react';\n\nconst Share = () => (\n  <div className=\"share-bar mt-5\">\n\n    <h4 className=\"title--header small\">Share this on:</h4>\n\n    <div className=\"share-buttons\">\n      <a href=\"https://www.facebook.com/sharer/sharer.php?u={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Facebook\">\n        <i className=\"fa fa-facebook-official share-button\"> facebook</i>\n      </a>\n\n      <a\n        href=\"https://twitter.com/intent/tweet?text={{ page.title }}&url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n        onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n        title=\"Share on Twitter\">\n        <i className=\"fa fa-twitter share-button\"> twitter</i>\n      </a>\n\n      <a href=\"https://plus.google.com/share?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Google+\">\n        <i className=\"fa fa-google-plus share-button\"> google</i>\n      </a>\n\n      <a href=\"http://pinterest.com/pin/create/button/?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Pinterest\">\n        <i className=\"fa fa-pinterest-p share-button\"> pinterest</i>\n      </a>\n\n      <a href=\"http://www.tumblr.com/share/link?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Tumblr\">\n        <i className=\"fa fa-tumblr share-button\"> tumblr</i>\n      </a>\n\n      <a href=\"http://www.reddit.com/submit?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Reddit\">\n        <i className=\"fa fa-reddit-alien share-button\"> reddit</i>\n      </a>\n\n      <a\n        href=\"https://www.linkedin.com/shareArticle?mini=true&url={{ site.url }}{{ site.baseurl }}{{ page.url }}&title={{ page.title }}&summary={{ page.description }}&source={{ site.title }}\"\n        onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n        title=\"Share on LinkedIn\">\n        <i className=\"fa fa-linkedin share-button\"> linkedin</i>\n      </a>\n\n      <a\n        href=\"mailto:?subject={{ page.title }}&amp;body=Check out this site {{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n        title=\"Share via Email\">\n        <i className=\"fa fa-envelope share-button\"> email</i>\n      </a>\n    </div>\n\n  </div>\n);\n\nexport default Share;","import React from 'react';\nimport CategoryIcon from './category-icon'\n\nconst Pick = ({ title, description, image, url, icons, content }) => {\n  return (\n    <div className=\"card\">\n      {image && <img src={ image.replace('x400', 'x800') } alt={ title } className=\"card-img-top\" />}\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">\n          <a className=\"link\" href={ url }>\n            { title }\n          </a>\n        </h3>\n        <div className=\"card-text dark-colour\" dangerouslySetInnerHTML={{__html: content}} />\n        <p>\n          {\n            icons && icons.map((ic, idx) => (\n              <CategoryIcon icon={ic.icon} name={ic.name} path={ic.path} key={idx}/>\n            ))\n          }\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Pick;"],"sourceRoot":""}