{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/category-icon.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/patty-working-at-desk.js","webpack:///./src/components/footer.js","webpack:///./src/components/layouts/standalone.js","webpack:///./src/components/seo.js","webpack:///./src/components/blog-summary.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layouts_standalone__WEBPACK_IMPORTED_MODULE_1__","_components_blog_summary__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","moment__WEBPACK_IMPORTED_MODULE_4__","moment__WEBPACK_IMPORTED_MODULE_4___default","Blog","_ref","data","now","moment","a","createElement","title","description","site","siteMetadata","keywords","commonKeywords","className","bloglist","edges","filter","_ref2","node","isAfter","frontmatter","date","map","_ref3","idx","key","excerpt","image","url","fields","slug","author","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","CategoryIcon","path","icon","name","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","dangerouslySetInnerHTML","__html","i","replace","join","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","Header","siteTitle","showTitle","_useState","useState","isOpen","setOpen","expand","href","onClick","navbar","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","PattyWorkingAtDesk","react_default","gatsby_browser_entry","gatsby_image_default","fixed","placeholderImage","childImageSharp","_1292776582","Footer","rel","patty_working_at_desk","format","areas","categories","category_icon","action","method","id","target","noValidate","type","placeholder","required","style","position","left","aria-hidden","tabIndex","value","_2824076944","Standalone","react__WEBPACK_IMPORTED_MODULE_1___default","Fragment","_header__WEBPACK_IMPORTED_MODULE_2__","_footer__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_1948935994_json__WEBPACK_IMPORTED_MODULE_0__","SEO","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","concat","length","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","BlogSummary","src","alt","dateTime","itemProp","itemScope","itemType"],"mappings":"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","file":"component---src-pages-blog-js-333662b31d2a4e8f77d2.js","sourcesContent":["import React from 'react';\nimport Standalone from '../components/layouts/standalone'\nimport { graphql } from 'gatsby'\nimport BlogSummary from '../components/blog-summary'\nimport SEO from '../components/seo'\nimport moment from 'moment'\n\nconst Blog = ({ data }) => {\n  const now = moment();\n  return (\n  <Standalone>\n    <SEO title={'Expatty | Blog'} description={ data.site.siteMetadata.description } keywords={ data.site.siteMetadata.commonKeywords } />\n    <main>\n      <div className=\"container-fluid blog\">\n        <h1 className=\"title--header\">Patty's Blog</h1>\n        <div className=\"row\">\n          <div className=\"col-md\">\n            {\n              data.bloglist.edges.filter(({ node }) => now.isAfter(node.frontmatter.date)).map(({ node }, idx) => (\n                <BlogSummary\n                  key={ idx }\n                  excerpt={ node.excerpt }\n                  image={ node.frontmatter.image }\n                  url={ node.fields.slug }\n                  title={ node.frontmatter.title }\n                  author={ node.frontmatter.author }\n                  date={ node.frontmatter.date }/>\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    </main>\n  </Standalone>\n)};\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n    query SiteDataForBlog {\n        site {\n            siteMetadata {\n                title\n                slogan\n                description\n                commonKeywords\n            }\n        }\n        bloglist: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC},\n            filter: {frontmatter: {type: {eq: \"blog\"}}}) {\n            edges {\n                node {\n                    fields {\n                        slug\n                    }\n                    excerpt(pruneLength: 500, format: HTML)\n                    frontmatter {\n                        title\n                        image\n                        date\n                        author\n                    }\n                }\n            }\n        }\n    }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst CategoryIcon = ({ path, icon, name }) => {\n  return (\n    <Link className=\"link\" to={path}>\n      <span\n        title={name}\n        className=\"tag-icons pr-2\"\n        dangerouslySetInnerHTML={{ __html: icon.map(i => `&#x${i.replace('U+', '')}`).join('') }}>\n      </span>\n    </Link>\n  )\n}\n\nexport default CategoryIcon","import React, { useState } from 'react';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Collapse\n} from 'reactstrap';\n\nconst Header = ({siteTitle, showTitle}) => {\n\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <header>\n      <Navbar expand=\"md\" className=\"navbar-dark bg-transparent\">\n        { showTitle && <NavbarBrand href=\"/\"><h1 className=\"title--header brand\">{ siteTitle }</h1></NavbarBrand> }\n        <NavbarToggler className=\"link light\" onClick={() => setOpen(!isOpen)} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/our-story/\">Our Story</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/blog/\">Blog</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink className=\"link light\" href=\"/contact/\">Free business listing</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst PattyWorkingAtDesk = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"patty-working-at-desk.png\" }) {\n          childImageSharp {\n            fixed(width: 200) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fixed={data.placeholderImage.childImageSharp.fixed} />}\n  />\n);\n\nexport default PattyWorkingAtDesk;\n","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport moment from 'moment'\nimport PattyWorkingAtDesk from './patty-working-at-desk'\nimport CategoryIcon from './category-icon'\n\nconst Footer = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          site {\n              siteMetadata {\n                  title\n                  description\n              }\n          }\n          areas: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"area\"}}}, sort: {fields: [frontmatter___name]}) {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n                frontmatter {\n                  name\n                  tag\n                }\n              }\n            }\n          }\n          categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        }\n      `}\n      render={data => {\n        return (\n          <footer className=\"container-fluid mt-5 pb-3 footer\">\n            <div className=\"row pt-5\">\n              <div className=\"col-lg mb-5 pr-5\">\n                <h2 className=\"title--header small mb-4\"><a className=\"link brand\" rel=\"author\"\n                                                       href=\"/\">{data.site.siteMetadata.title}</a></h2>\n                <p>\n                  <small>{data.site.siteMetadata.description}</small>\n                </p>\n                <PattyWorkingAtDesk/>\n                <p><em>\n                  <small>All rights reserved. &copy; expatty.com {moment().format('YYYY')}</small>\n                </em></p>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Areas</h2>\n                <ul>\n                  {\n                    data.areas.edges.map(({ node }, idx) => (\n                      <li key={idx}><span className=\"spacer\"/> <a href={node.fields.slug} className=\"link\">{node.frontmatter.name}</a></li>\n                    ))\n                  }\n                </ul>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Categories</h2>\n                <ul>\n                  {\n                    data.categories.edges.map(({ node }, idx) => (\n                      <li key={idx}>\n                        <CategoryIcon path={node.fields.slug} name={node.frontmatter.name}\n                                      icon={node.frontmatter.icon}/><a href={node.fields.slug}\n                                                                       className=\"link\"> {node.frontmatter.name}\n                      </a></li>\n                    ))\n                  }\n                </ul>\n              </div>\n              <div className=\"col-lg mb-5\">\n                <h2 className=\"title--header small primary-colour mb-4\">Subscribe to our newsletter</h2>\n                <form\n                  action=\"https://expatty.us7.list-manage.com/subscribe/post?u=a6b6c49a554f762c8c4c8d495&amp;id=1eef58f2b5\"\n                  method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" className=\"validate\"\n                  target=\"_blank\" noValidate>\n                  <div className=\"form-group\">\n                    <input type=\"email\" name=\"EMAIL\" className=\"form-control\" id=\"mce-EMAIL\"\n                           placeholder=\"email address\" required/>\n                  </div>\n                  <div style={{ position : 'absolute', left: '-5000px'}} aria-hidden=\"true\">\n                    <input type=\"text\"\n                           name=\"b_a6b6c49a554f762c8c4c8d495_1eef58f2b5\"\n                           tabIndex=\"-1\"/>\n                  </div>\n                  <div className=\"clear\">\n                    <button type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\"\n                            className=\"btn\">Subscribe\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </footer>\n        )\n      }}/>\n  )\n}\n\nexport default Footer","import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\n\nconst Standalone = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery2 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n  render={data => (\n    <>\n      <Header showTitle={true} siteTitle={data.site.siteMetadata.title} />\n      {children}\n      <Footer />\n    </>\n    )}\n  />\n);\n\nexport default Standalone;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport moment from 'moment'\n\nconst BlogSummary = ({ title, excerpt, image, url, author, date }) => (\n  <a className=\"link light\" href={url}>\n    <div className=\"card bg-transparent mb-5\">\n      {image && <img src={image} alt={title} className=\"card-img-top\"/>}\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{title}</h4>\n        <p><small>\n            <time className=\"light-primary-colour pt-2\" dateTime={moment(date)} itemProp=\"datePublished\">\n              {moment(date).format('dddd, D MMMM YYYY')}\n            </time>\n            <span itemProp=\"author\" itemScope itemType=\"http://schema.org/Person\">  • <span\n              className=\"light-primary-colour\" itemProp=\"name\">{author}</span>\n                      </span>\n          </small>\n        </p>\n        <div className=\"card-text primary-text-colour\" dangerouslySetInnerHTML={{ __html: excerpt }}/>\n      </div>\n    </div>\n  </a>\n);\n\nexport default BlogSummary;"],"sourceRoot":""}