{"version":3,"sources":["webpack:///./src/components/templates/listing-list.js","webpack:///./src/components/layouts/standalone.js","webpack:///./src/components/share.js","webpack:///./src/components/listing-summary.js"],"names":["ListingList","_ref","data","_data$thisCategory$fr","thisCategory","frontmatter","type","name","tag","commonKeywords","site","siteMetadata","listings","edges","map","edge","node","allCategories","categories","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_layouts_standalone__WEBPACK_IMPORTED_MODULE_3__","_seo__WEBPACK_IMPORTED_MODULE_4__","title","description","keywords","concat","className","filter","_ref2","tags","indexOf","i","listingIcons","tg","find","catNode","icon","path","fields","slug","_listing_summary__WEBPACK_IMPORTED_MODULE_5__","key","url","icons","_share__WEBPACK_IMPORTED_MODULE_6__","callToAction","pageQuery","Standalone","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","Fragment","_header__WEBPACK_IMPORTED_MODULE_2__","showTitle","siteTitle","_footer__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_1948935994_json__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Share","href","onClick","ListingSummary","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","ic","idx","_category_icon__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-components-templates-listing-list-js-10391794009638f3f018.js","sourcesContent":["import React from 'react';\nimport Standalone from '../layouts/standalone';\nimport SEO from '../seo';\nimport ListingSummary from '../listing-summary';\nimport { graphql} from 'gatsby';\nimport Share from '../share'\n\nconst ListingList = ({ data }) => {\n  const { type, name, tag } = data.thisCategory.frontmatter;\n  const { commonKeywords } = data.site.siteMetadata;\n  const listings = data.listings.edges.map(edge => edge.node);\n  const allCategories = data.categories.edges.map(edge => edge.node);\n  return (\n    <Standalone>\n      <SEO\n        title={ `Expatty ${ type === 'category' ? 'category' : 'areas'} | ${name}` }\n        description={ `Attractions, events, businesses and services in Andalusia, Spain, related to: ${name}` }\n        keywords={[name, ...commonKeywords]}/>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md\">\n            <main>\n              <h1 className=\"title--header\">{ name }</h1>\n              {\n                listings\n                  .filter(({ frontmatter }) => frontmatter.tags.indexOf(tag) >= 0)\n                  .map((node, i) => {\n                    const listingIcons =\n                      node.frontmatter.tags\n                        .map(tg => allCategories.find(catNode => catNode.frontmatter.tag === tg))\n                        .filter(catNode => catNode)\n                        .map(catNode => ({\n                          icon: catNode.frontmatter.icon,\n                          name: catNode.frontmatter.name,\n                          path: catNode.fields.slug\n                        }));\n                    return (\n                    <ListingSummary\n                      key={ i }\n                      description={ node.frontmatter.description }\n                      title={ node.frontmatter.title }\n                      url={ node.fields.slug }\n                      icons={ listingIcons }/>\n                  )\n                })\n              }\n              <Share callToAction=\"Share this list on:\" />\n            </main>\n          </div>\n        </div>\n      </div>\n    </Standalone>\n  );\n};\n\nexport default ListingList;\n\nexport const pageQuery = graphql`\n    query CategoryOrArea($type: String!, $name: String!) {\n        site {\n            siteMetadata {\n                commonKeywords\n            }\n        }\n        thisCategory: markdownRemark(frontmatter: { type: { eq: $type }, name: { eq: $name } }) {\n            frontmatter {\n                type\n                name\n                tag\n            }\n        }\n        listings: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"listing\"}}}, sort: {fields: [frontmatter___title]}) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        description\n                        tags\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        categories: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"category\"}}}) {\n            edges {\n                node {\n                    frontmatter {\n                        tag\n                        name\n                        icon\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`","import React from 'react';\nimport Header from '../header'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Footer from '../footer'\n\nconst Standalone = ({children}) => (\n  <StaticQuery query={graphql`\n      query SiteTitleQuery2 {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n  render={data => (\n    <>\n      <Header showTitle={true} siteTitle={data.site.siteMetadata.title} />\n      {children}\n      <Footer />\n    </>\n    )}\n  />\n);\n\nexport default Standalone;","import React from 'react';\n\nconst Share = ({ callToAction }) => (\n  <div className=\"share-bar mt-5\">\n\n    <h4 className=\"title--header small\">{ callToAction || 'Share this on:'}</h4>\n\n    <div className=\"share-buttons\">\n      <a href=\"https://www.facebook.com/sharer/sharer.php?u={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Facebook\">\n        <i className=\"fa fa-facebook-official share-button\"> facebook</i>\n      </a>\n\n      <a\n        href=\"https://twitter.com/intent/tweet?text={{ page.title }}&url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n        onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n        title=\"Share on Twitter\">\n        <i className=\"fa fa-twitter share-button\"> twitter</i>\n      </a>\n\n      <a href=\"https://plus.google.com/share?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Google+\">\n        <i className=\"fa fa-google-plus share-button\"> google</i>\n      </a>\n\n      <a href=\"http://pinterest.com/pin/create/button/?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Pinterest\">\n        <i className=\"fa fa-pinterest-p share-button\"> pinterest</i>\n      </a>\n\n      <a href=\"http://www.tumblr.com/share/link?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Tumblr\">\n        <i className=\"fa fa-tumblr share-button\"> tumblr</i>\n      </a>\n\n      <a href=\"http://www.reddit.com/submit?url={{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n         onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;\"\n         title=\"Share on Reddit\">\n        <i className=\"fa fa-reddit-alien share-button\"> reddit</i>\n      </a>\n\n      <a\n        href=\"https://www.linkedin.com/shareArticle?mini=true&url={{ site.url }}{{ site.baseurl }}{{ page.url }}&title={{ page.title }}&summary={{ page.description }}&source={{ site.title }}\"\n        onClick=\"window.open(this.href, 'pop-up', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\"\n        title=\"Share on LinkedIn\">\n        <i className=\"fa fa-linkedin share-button\"> linkedin</i>\n      </a>\n\n      <a\n        href=\"mailto:?subject={{ page.title }}&amp;body=Check out this site {{ site.url }}{{ site.baseurl }}{{ page.url }}\"\n        title=\"Share via Email\">\n        <i className=\"fa fa-envelope share-button\"> email</i>\n      </a>\n    </div>\n\n  </div>\n);\n\nexport default Share;","import React from 'react';\nimport { Link } from 'gatsby'\nimport CategoryIcon from './category-icon'\n\nconst ListingSummary = ({title, description, url, icons}) => (\n  <div className=\"row listing\">\n    <div className=\"col-md\">\n      <div className=\"card mb-3\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title title--header dark small\"><Link className=\"link\" to={url}>{ title }</Link></h5>\n          <p className=\"card-text\">{ description }</p>\n          <p>\n            {\n              icons && icons.map((ic, idx) => (\n                <CategoryIcon icon={ic.icon} name={ic.name} path={ic.path} key={idx}/>\n              ))\n            }\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default ListingSummary;"],"sourceRoot":""}